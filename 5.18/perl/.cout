# 1 "<stdin>"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 363 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "<stdin>" 2
# 2 "pp_sort.c"
# 1 "./EXTERN.h" 1
# 3 "pp_sort.c" 2

# 1 "./perl.h" 1
# 38 "./perl.h"
# 1 "./config.h" 1
# 39 "./perl.h" 2
# 650 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 1 3
# 72 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/appleapiopts.h" 1 3
# 73 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/cdefs.h" 1 3
# 736 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/cdefs.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_symbol_aliasing.h" 1 3
# 737 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/cdefs.h" 2 3
# 806 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/cdefs.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_posix_availability.h" 1 3
# 807 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/cdefs.h" 2 3
# 76 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/types.h" 1 3
# 35 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 1 3
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/_types.h" 1 3
# 37 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/_types.h" 3
typedef signed char __int8_t;



typedef unsigned char __uint8_t;
typedef short __int16_t;
typedef unsigned short __uint16_t;
typedef int __int32_t;
typedef unsigned int __uint32_t;
typedef long long __int64_t;
typedef unsigned long long __uint64_t;

typedef long __darwin_intptr_t;
typedef unsigned int __darwin_natural_t;
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/_types.h" 3
typedef int __darwin_ct_rune_t;





typedef union {
 char __mbstate8[128];
 long long _mbstateL;
} __mbstate_t;

typedef __mbstate_t __darwin_mbstate_t;


typedef long int __darwin_ptrdiff_t;







typedef long unsigned int __darwin_size_t;





typedef __builtin_va_list __darwin_va_list;





typedef int __darwin_wchar_t;




typedef __darwin_wchar_t __darwin_rune_t;


typedef int __darwin_wint_t;




typedef unsigned long __darwin_clock_t;
typedef __uint32_t __darwin_socklen_t;
typedef long __darwin_ssize_t;
typedef long __darwin_time_t;
# 71 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 2 3





# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_int8_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_int8_t.h" 3
typedef signed char int8_t;
# 77 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_int16_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_int16_t.h" 3
typedef short int16_t;
# 78 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_int32_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_int32_t.h" 3
typedef int int32_t;
# 79 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_int64_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_int64_t.h" 3
typedef long long int64_t;
# 80 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 2 3

# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int8_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int8_t.h" 3
typedef unsigned char u_int8_t;
# 82 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int16_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int16_t.h" 3
typedef unsigned short u_int16_t;
# 83 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int32_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int32_t.h" 3
typedef unsigned int u_int32_t;
# 84 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int64_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int64_t.h" 3
typedef unsigned long long u_int64_t;
# 85 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 2 3


typedef int64_t register_t;





# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_intptr_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_intptr_t.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/types.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_intptr_t.h" 2 3

typedef __darwin_intptr_t intptr_t;
# 93 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_uintptr_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_uintptr_t.h" 3
typedef unsigned long uintptr_t;
# 94 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 2 3



typedef u_int64_t user_addr_t;
typedef u_int64_t user_size_t;
typedef int64_t user_ssize_t;
typedef int64_t user_long_t;
typedef u_int64_t user_ulong_t;
typedef int64_t user_time_t;
typedef int64_t user_off_t;
# 146 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/types.h" 3
typedef u_int64_t syscall_arg_t;
# 36 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/types.h" 2 3
# 79 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/_types.h" 1 3
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types.h" 2 3
# 56 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types.h" 3
typedef __int64_t __darwin_blkcnt_t;
typedef __int32_t __darwin_blksize_t;
typedef __int32_t __darwin_dev_t;
typedef unsigned int __darwin_fsblkcnt_t;
typedef unsigned int __darwin_fsfilcnt_t;
typedef __uint32_t __darwin_gid_t;
typedef __uint32_t __darwin_id_t;
typedef __uint64_t __darwin_ino64_t;

typedef __darwin_ino64_t __darwin_ino_t;



typedef __darwin_natural_t __darwin_mach_port_name_t;
typedef __darwin_mach_port_name_t __darwin_mach_port_t;
typedef __uint16_t __darwin_mode_t;
typedef __int64_t __darwin_off_t;
typedef __int32_t __darwin_pid_t;
typedef __uint32_t __darwin_sigset_t;
typedef __int32_t __darwin_suseconds_t;
typedef __uint32_t __darwin_uid_t;
typedef __uint32_t __darwin_useconds_t;

typedef unsigned char __darwin_uuid_t[16];
typedef char __darwin_uuid_string_t[37];



# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h" 1 3
# 57 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h" 3
struct __darwin_pthread_handler_rec {
 void (*__routine)(void *);
 void *__arg;
 struct __darwin_pthread_handler_rec *__next;
};

struct _opaque_pthread_attr_t {
 long __sig;
 char __opaque[56];
};

struct _opaque_pthread_cond_t {
 long __sig;
 char __opaque[40];
};

struct _opaque_pthread_condattr_t {
 long __sig;
 char __opaque[8];
};

struct _opaque_pthread_mutex_t {
 long __sig;
 char __opaque[56];
};

struct _opaque_pthread_mutexattr_t {
 long __sig;
 char __opaque[8];
};

struct _opaque_pthread_once_t {
 long __sig;
 char __opaque[8];
};

struct _opaque_pthread_rwlock_t {
 long __sig;
 char __opaque[192];
};

struct _opaque_pthread_rwlockattr_t {
 long __sig;
 char __opaque[16];
};

struct _opaque_pthread_t {
 long __sig;
 struct __darwin_pthread_handler_rec *__cleanup_stack;
 char __opaque[8176];
};

typedef struct _opaque_pthread_attr_t __darwin_pthread_attr_t;
typedef struct _opaque_pthread_cond_t __darwin_pthread_cond_t;
typedef struct _opaque_pthread_condattr_t __darwin_pthread_condattr_t;
typedef unsigned long __darwin_pthread_key_t;
typedef struct _opaque_pthread_mutex_t __darwin_pthread_mutex_t;
typedef struct _opaque_pthread_mutexattr_t __darwin_pthread_mutexattr_t;
typedef struct _opaque_pthread_once_t __darwin_pthread_once_t;
typedef struct _opaque_pthread_rwlock_t __darwin_pthread_rwlock_t;
typedef struct _opaque_pthread_rwlockattr_t __darwin_pthread_rwlockattr_t;
typedef struct _opaque_pthread_t *__darwin_pthread_t;
# 84 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types.h" 2 3
# 80 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3

# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/endian.h" 1 3
# 35 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/endian.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/endian.h" 1 3
# 99 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/endian.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_endian.h" 1 3
# 130 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_endian.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libkern/_OSByteOrder.h" 1 3
# 66 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libkern/_OSByteOrder.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libkern/i386/_OSByteOrder.h" 1 3
# 44 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libkern/i386/_OSByteOrder.h" 3
static inline
__uint16_t
_OSSwapInt16(
 __uint16_t _data
 )
{
 return (__uint16_t)((_data << 8) | (_data >> 8));
}

static inline
__uint32_t
_OSSwapInt32(
 __uint32_t _data
 )
{

 return __builtin_bswap32(_data);




}


static inline
__uint64_t
_OSSwapInt64(
 __uint64_t _data
 )
{
 return __builtin_bswap64(_data);
}
# 67 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/libkern/_OSByteOrder.h" 2 3
# 131 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_endian.h" 2 3
# 100 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/endian.h" 2 3
# 36 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/endian.h" 2 3
# 82 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_char.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_char.h" 3
typedef unsigned char u_char;
# 85 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_short.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_short.h" 3
typedef unsigned short u_short;
# 86 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int.h" 3
typedef unsigned int u_int;
# 87 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3

typedef unsigned long u_long;


typedef unsigned short ushort;
typedef unsigned int uint;


typedef u_int64_t u_quad_t;
typedef int64_t quad_t;
typedef quad_t * qaddr_t;


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_caddr_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_caddr_t.h" 3
typedef char * caddr_t;
# 100 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3

typedef int32_t daddr_t;


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_dev_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_dev_t.h" 3
typedef __darwin_dev_t dev_t;
# 104 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3

typedef u_int32_t fixpt_t;


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_blkcnt_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_blkcnt_t.h" 3
typedef __darwin_blkcnt_t blkcnt_t;
# 108 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_blksize_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_blksize_t.h" 3
typedef __darwin_blksize_t blksize_t;
# 109 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_gid_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_gid_t.h" 3
typedef __darwin_gid_t gid_t;
# 110 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_in_addr_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_in_addr_t.h" 3
typedef __uint32_t in_addr_t;
# 111 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_in_port_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_in_port_t.h" 3
typedef __uint16_t in_port_t;
# 112 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ino_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ino_t.h" 3
typedef __darwin_ino_t ino_t;
# 113 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ino64_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ino64_t.h" 3
typedef __darwin_ino64_t ino64_t;
# 116 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_key_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_key_t.h" 3
typedef __int32_t key_t;
# 119 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_mode_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_mode_t.h" 3
typedef __darwin_mode_t mode_t;
# 120 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_nlink_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_nlink_t.h" 3
typedef __uint16_t nlink_t;
# 121 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_id_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_id_t.h" 3
typedef __darwin_id_t id_t;
# 122 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_pid_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_pid_t.h" 3
typedef __darwin_pid_t pid_t;
# 123 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_off_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_off_t.h" 3
typedef __darwin_off_t off_t;
# 124 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3

typedef int32_t segsz_t;
typedef int32_t swblk_t;


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_uid_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_uid_t.h" 3
typedef __darwin_uid_t uid_t;
# 129 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 165 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_clock_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_clock_t.h" 3
typedef __darwin_clock_t clock_t;
# 166 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_size_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_size_t.h" 3
typedef __darwin_size_t size_t;
# 167 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ssize_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ssize_t.h" 3
typedef __darwin_ssize_t ssize_t;
# 168 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_time_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_time_t.h" 3
typedef __darwin_time_t time_t;
# 169 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3

# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_useconds_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_useconds_t.h" 3
typedef __darwin_useconds_t useconds_t;
# 171 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_suseconds_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_suseconds_t.h" 3
typedef __darwin_suseconds_t suseconds_t;
# 172 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_rsize_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_rsize_t.h" 3
typedef __darwin_size_t rsize_t;
# 175 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_errno_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_errno_t.h" 3
typedef int errno_t;
# 176 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3








# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h" 1 3
# 49 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_def.h" 3
typedef struct fd_set {
 __int32_t fds_bits[((((1024) % ((sizeof(__int32_t) * 8))) == 0) ? ((1024) / ((sizeof(__int32_t) * 8))) : (((1024) / ((sizeof(__int32_t) * 8))) + 1))];
} fd_set;



static __inline int
__darwin_fd_isset(int _n, const struct fd_set *_p)
{
 return _p->fds_bits[(unsigned long)_n / (sizeof(__int32_t) * 8)] & ((__int32_t)(((unsigned long)1) << ((unsigned long)_n % (sizeof(__int32_t) * 8))));
}
# 185 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3




typedef __int32_t fd_mask;








# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_setsize.h" 1 3
# 198 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_set.h" 1 3
# 199 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_clr.h" 1 3
# 200 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_zero.h" 1 3
# 201 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_isset.h" 1 3
# 202 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fd_copy.h" 1 3
# 205 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 231 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_attr_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_attr_t.h" 3
typedef __darwin_pthread_attr_t pthread_attr_t;
# 232 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_cond_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_cond_t.h" 3
typedef __darwin_pthread_cond_t pthread_cond_t;
# 233 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_condattr_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_condattr_t.h" 3
typedef __darwin_pthread_condattr_t pthread_condattr_t;
# 234 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_mutex_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_mutex_t.h" 3
typedef __darwin_pthread_mutex_t pthread_mutex_t;
# 235 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_mutexattr_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_mutexattr_t.h" 3
typedef __darwin_pthread_mutexattr_t pthread_mutexattr_t;
# 236 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_once_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_once_t.h" 3
typedef __darwin_pthread_once_t pthread_once_t;
# 237 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_rwlock_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_rwlock_t.h" 3
typedef __darwin_pthread_rwlock_t pthread_rwlock_t;
# 238 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_rwlockattr_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_rwlockattr_t.h" 3
typedef __darwin_pthread_rwlockattr_t pthread_rwlockattr_t;
# 239 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_t.h" 3
typedef __darwin_pthread_t pthread_t;
# 240 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3



# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_key_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_key_t.h" 3
typedef __darwin_pthread_key_t pthread_key_t;
# 244 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3





# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fsblkcnt_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fsblkcnt_t.h" 3
typedef __darwin_fsblkcnt_t fsblkcnt_t;
# 250 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fsfilcnt_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fsfilcnt_t.h" 3
typedef __darwin_fsfilcnt_t fsfilcnt_t;
# 251 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/types.h" 2 3
# 651 "./perl.h" 2
# 661 "./perl.h"
# 1 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/stdarg.h" 1 3
# 14 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/stdarg.h" 3
typedef __builtin_va_list va_list;
# 32 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/stdarg.h" 3
typedef __builtin_va_list __gnuc_va_list;
# 662 "./perl.h" 2
# 681 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/ctype.h" 1 3
# 69 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/ctype.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_ctype.h" 1 3
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_ctype.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/runetype.h" 1 3
# 42 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/runetype.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types.h" 1 3
# 41 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types.h" 3
typedef int __darwin_nl_item;

typedef int __darwin_wctrans_t;

typedef __uint32_t __darwin_wctype_t;
# 43 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/runetype.h" 2 3




# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ct_rune_t.h" 1 3
# 32 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ct_rune_t.h" 3
typedef __darwin_ct_rune_t ct_rune_t;
# 48 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/runetype.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_rune_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_rune_t.h" 3
typedef __darwin_rune_t rune_t;
# 49 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/runetype.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_wchar_t.h" 1 3
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_wchar_t.h" 3
typedef __darwin_wchar_t wchar_t;
# 50 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/runetype.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_wint_t.h" 1 3
# 32 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_wint_t.h" 3
typedef __darwin_wint_t wint_t;
# 51 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/runetype.h" 2 3
# 60 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/runetype.h" 3
typedef struct {
 __darwin_rune_t __min;
 __darwin_rune_t __max;
 __darwin_rune_t __map;
 __uint32_t *__types;
} _RuneEntry;

typedef struct {
 int __nranges;
 _RuneEntry *__ranges;
} _RuneRange;

typedef struct {
 char __name[14];
 __uint32_t __mask;
} _RuneCharClass;

typedef struct {
 char __magic[8];
 char __encoding[32];

 __darwin_rune_t (*__sgetrune)(const char *, __darwin_size_t, char const **);
 int (*__sputrune)(__darwin_rune_t, char *, __darwin_size_t, char **);
 __darwin_rune_t __invalid_rune;

 __uint32_t __runetype[(1 <<8 )];
 __darwin_rune_t __maplower[(1 <<8 )];
 __darwin_rune_t __mapupper[(1 <<8 )];






 _RuneRange __runetype_ext;
 _RuneRange __maplower_ext;
 _RuneRange __mapupper_ext;

 void *__variable;
 int __variable_len;




 int __ncharclasses;
 _RuneCharClass *__charclasses;
} _RuneLocale;




extern _RuneLocale _DefaultRuneLocale;
extern _RuneLocale *_CurrentRuneLocale;
# 71 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_ctype.h" 2 3
# 129 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_ctype.h" 3
unsigned long ___runetype(__darwin_ct_rune_t);
__darwin_ct_rune_t ___tolower(__darwin_ct_rune_t);
__darwin_ct_rune_t ___toupper(__darwin_ct_rune_t);


inline int
isascii(int _c)
{
 return ((_c & ~0x7F) == 0);
}
# 148 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_ctype.h" 3
int __maskrune(__darwin_ct_rune_t, unsigned long);



inline int
__istype(__darwin_ct_rune_t _c, unsigned long _f)
{



 return (isascii(_c) ? !!(_DefaultRuneLocale.__runetype[_c] & _f)
  : !!__maskrune(_c, _f));

}

inline __darwin_ct_rune_t
__isctype(__darwin_ct_rune_t _c, unsigned long _f)
{



 return (_c < 0 || _c >= (1 <<8 )) ? 0 :
  !!(_DefaultRuneLocale.__runetype[_c] & _f);

}
# 188 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_ctype.h" 3
__darwin_ct_rune_t __toupper(__darwin_ct_rune_t);
__darwin_ct_rune_t __tolower(__darwin_ct_rune_t);



inline int
__wcwidth(__darwin_ct_rune_t _c)
{
 unsigned int _x;

 if (_c == 0)
  return (0);
 _x = (unsigned int)__maskrune(_c, 0xe0000000L|0x00040000L);
 if ((_x & 0xe0000000L) != 0)
  return ((_x & 0xe0000000L) >> 30);
 return ((_x & 0x00040000L) != 0 ? 1 : -1);
}






inline int
isalnum(int _c)
{
 return (__istype(_c, 0x00000100L|0x00000400L));
}

inline int
isalpha(int _c)
{
 return (__istype(_c, 0x00000100L));
}

inline int
isblank(int _c)
{
 return (__istype(_c, 0x00020000L));
}

inline int
iscntrl(int _c)
{
 return (__istype(_c, 0x00000200L));
}


inline int
isdigit(int _c)
{
 return (__isctype(_c, 0x00000400L));
}

inline int
isgraph(int _c)
{
 return (__istype(_c, 0x00000800L));
}

inline int
islower(int _c)
{
 return (__istype(_c, 0x00001000L));
}

inline int
isprint(int _c)
{
 return (__istype(_c, 0x00040000L));
}

inline int
ispunct(int _c)
{
 return (__istype(_c, 0x00002000L));
}

inline int
isspace(int _c)
{
 return (__istype(_c, 0x00004000L));
}

inline int
isupper(int _c)
{
 return (__istype(_c, 0x00008000L));
}


inline int
isxdigit(int _c)
{
 return (__isctype(_c, 0x00010000L));
}

inline int
toascii(int _c)
{
 return (_c & 0x7F);
}

inline int
tolower(int _c)
{
        return (__tolower(_c));
}

inline int
toupper(int _c)
{
        return (__toupper(_c));
}


inline int
digittoint(int _c)
{
 return (__maskrune(_c, 0x0F));
}

inline int
ishexnumber(int _c)
{
 return (__istype(_c, 0x00010000L));
}

inline int
isideogram(int _c)
{
 return (__istype(_c, 0x00080000L));
}

inline int
isnumber(int _c)
{
 return (__istype(_c, 0x00000400L));
}

inline int
isphonogram(int _c)
{
 return (__istype(_c, 0x00200000L));
}

inline int
isrune(int _c)
{
 return (__istype(_c, 0xFFFFFFF0L));
}

inline int
isspecial(int _c)
{
 return (__istype(_c, 0x00100000L));
}
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/ctype.h" 2 3
# 682 "./perl.h" 2
# 693 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/locale.h" 1 3
# 40 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/locale.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_locale.h" 1 3
# 43 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_locale.h" 3
struct lconv {
 char *decimal_point;
 char *thousands_sep;
 char *grouping;
 char *int_curr_symbol;
 char *currency_symbol;
 char *mon_decimal_point;
 char *mon_thousands_sep;
 char *mon_grouping;
 char *positive_sign;
 char *negative_sign;
 char int_frac_digits;
 char frac_digits;
 char p_cs_precedes;
 char p_sep_by_space;
 char n_cs_precedes;
 char n_sep_by_space;
 char p_sign_posn;
 char n_sign_posn;
 char int_p_cs_precedes;
 char int_n_cs_precedes;
 char int_p_sep_by_space;
 char int_n_sep_by_space;
 char int_p_sign_posn;
 char int_n_sign_posn;
};


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_null.h" 1 3
# 71 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_locale.h" 2 3


struct lconv *localeconv(void);
# 41 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/locale.h" 2 3
# 53 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/locale.h" 3
char *setlocale(int, const char *);
# 694 "./perl.h" 2
# 710 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/setjmp.h" 1 3
# 27 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/setjmp.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 1 3
# 251 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternal.h" 1 3
# 252 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 2 3
# 28 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/setjmp.h" 2 3
# 37 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/setjmp.h" 3
typedef int jmp_buf[((9 * 2) + 3 + 16)];
typedef int sigjmp_buf[((9 * 2) + 3 + 16) + 1];
# 87 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/setjmp.h" 3
extern int setjmp(jmp_buf);
extern void longjmp(jmp_buf, int) __attribute__((__noreturn__));


int _setjmp(jmp_buf);
void _longjmp(jmp_buf, int) __attribute__((__noreturn__));
int sigsetjmp(sigjmp_buf, int);
void siglongjmp(sigjmp_buf, int) __attribute__((__noreturn__));



void longjmperror(void);
# 711 "./perl.h" 2





# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/param.h" 1 3
# 93 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/param.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/syslimits.h" 1 3
# 94 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/param.h" 2 3
# 107 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/param.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/param.h" 1 3
# 35 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/param.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/param.h" 1 3
# 75 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/param.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/_param.h" 1 3
# 76 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/param.h" 2 3
# 36 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/param.h" 2 3
# 108 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/param.h" 2 3
# 119 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/param.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/limits.h" 1 3
# 64 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/limits.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/limits.h" 1 3





# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/limits.h" 1 3
# 41 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/limits.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/_limits.h" 1 3
# 42 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/limits.h" 2 3
# 7 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/limits.h" 2 3
# 65 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/limits.h" 2 3
# 120 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/param.h" 2 3



# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 1 3
# 82 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/signal.h" 1 3
# 32 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/signal.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/signal.h" 1 3
# 39 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/signal.h" 3
typedef int sig_atomic_t;
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/signal.h" 2 3
# 83 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 2 3
# 146 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/_mcontext.h" 1 3
# 29 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/_mcontext.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h" 1 3
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/_structs.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/_structs.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 1 3
# 46 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_i386_thread_state
{
    unsigned int __eax;
    unsigned int __ebx;
    unsigned int __ecx;
    unsigned int __edx;
    unsigned int __edi;
    unsigned int __esi;
    unsigned int __ebp;
    unsigned int __esp;
    unsigned int __ss;
    unsigned int __eflags;
    unsigned int __eip;
    unsigned int __cs;
    unsigned int __ds;
    unsigned int __es;
    unsigned int __fs;
    unsigned int __gs;
};
# 92 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_fp_control
{
    unsigned short __invalid :1,
        __denorm :1,
    __zdiv :1,
    __ovrfl :1,
    __undfl :1,
    __precis :1,
      :2,
    __pc :2,





    __rc :2,






             :1,
      :3;
};
typedef struct __darwin_fp_control __darwin_fp_control_t;
# 150 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_fp_status
{
    unsigned short __invalid :1,
        __denorm :1,
    __zdiv :1,
    __ovrfl :1,
    __undfl :1,
    __precis :1,
    __stkflt :1,
    __errsumm :1,
    __c0 :1,
    __c1 :1,
    __c2 :1,
    __tos :3,
    __c3 :1,
    __busy :1;
};
typedef struct __darwin_fp_status __darwin_fp_status_t;
# 194 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_mmst_reg
{
 char __mmst_reg[10];
 char __mmst_rsrv[6];
};
# 213 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_xmm_reg
{
 char __xmm_reg[16];
};
# 230 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_ymm_reg
{
 char __ymm_reg[32];
};
# 246 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_zmm_reg
{
 char __zmm_reg[64];
};
# 260 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_opmask_reg
{
 char __opmask_reg[8];
};
# 283 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_i386_float_state
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;
 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;
 __uint16_t __fpu_rsrv2;
 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;
 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 char __fpu_rsrv4[14*16];
 int __fpu_reserved1;
};


struct __darwin_i386_avx_state
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;
 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;
 __uint16_t __fpu_rsrv2;
 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;
 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 char __fpu_rsrv4[14*16];
 int __fpu_reserved1;
 char __avx_reserved1[64];
 struct __darwin_xmm_reg __fpu_ymmh0;
 struct __darwin_xmm_reg __fpu_ymmh1;
 struct __darwin_xmm_reg __fpu_ymmh2;
 struct __darwin_xmm_reg __fpu_ymmh3;
 struct __darwin_xmm_reg __fpu_ymmh4;
 struct __darwin_xmm_reg __fpu_ymmh5;
 struct __darwin_xmm_reg __fpu_ymmh6;
 struct __darwin_xmm_reg __fpu_ymmh7;
};



struct __darwin_i386_avx512_state
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;
 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;
 __uint16_t __fpu_rsrv2;
 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;
 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 char __fpu_rsrv4[14*16];
 int __fpu_reserved1;
 char __avx_reserved1[64];
 struct __darwin_xmm_reg __fpu_ymmh0;
 struct __darwin_xmm_reg __fpu_ymmh1;
 struct __darwin_xmm_reg __fpu_ymmh2;
 struct __darwin_xmm_reg __fpu_ymmh3;
 struct __darwin_xmm_reg __fpu_ymmh4;
 struct __darwin_xmm_reg __fpu_ymmh5;
 struct __darwin_xmm_reg __fpu_ymmh6;
 struct __darwin_xmm_reg __fpu_ymmh7;
 struct __darwin_opmask_reg __fpu_k0;
 struct __darwin_opmask_reg __fpu_k1;
 struct __darwin_opmask_reg __fpu_k2;
 struct __darwin_opmask_reg __fpu_k3;
 struct __darwin_opmask_reg __fpu_k4;
 struct __darwin_opmask_reg __fpu_k5;
 struct __darwin_opmask_reg __fpu_k6;
 struct __darwin_opmask_reg __fpu_k7;
 struct __darwin_ymm_reg __fpu_zmmh0;
 struct __darwin_ymm_reg __fpu_zmmh1;
 struct __darwin_ymm_reg __fpu_zmmh2;
 struct __darwin_ymm_reg __fpu_zmmh3;
 struct __darwin_ymm_reg __fpu_zmmh4;
 struct __darwin_ymm_reg __fpu_zmmh5;
 struct __darwin_ymm_reg __fpu_zmmh6;
 struct __darwin_ymm_reg __fpu_zmmh7;
};
# 581 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_i386_exception_state
{
 __uint16_t __trapno;
 __uint16_t __cpu;
 __uint32_t __err;
 __uint32_t __faultvaddr;
};
# 601 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_x86_debug_state32
{
 unsigned int __dr0;
 unsigned int __dr1;
 unsigned int __dr2;
 unsigned int __dr3;
 unsigned int __dr4;
 unsigned int __dr5;
 unsigned int __dr6;
 unsigned int __dr7;
};
# 628 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __x86_pagein_state
{
 int __pagein_error;
};







struct __darwin_x86_thread_state64
{
 __uint64_t __rax;
 __uint64_t __rbx;
 __uint64_t __rcx;
 __uint64_t __rdx;
 __uint64_t __rdi;
 __uint64_t __rsi;
 __uint64_t __rbp;
 __uint64_t __rsp;
 __uint64_t __r8;
 __uint64_t __r9;
 __uint64_t __r10;
 __uint64_t __r11;
 __uint64_t __r12;
 __uint64_t __r13;
 __uint64_t __r14;
 __uint64_t __r15;
 __uint64_t __rip;
 __uint64_t __rflags;
 __uint64_t __cs;
 __uint64_t __fs;
 __uint64_t __gs;
};
# 697 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_x86_thread_full_state64
{
 struct __darwin_x86_thread_state64 __ss64;
 __uint64_t __ds;
 __uint64_t __es;
 __uint64_t __ss;
 __uint64_t __gsbase;
};
# 720 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_x86_float_state64
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;


 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;

 __uint16_t __fpu_rsrv2;


 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;

 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 struct __darwin_xmm_reg __fpu_xmm8;
 struct __darwin_xmm_reg __fpu_xmm9;
 struct __darwin_xmm_reg __fpu_xmm10;
 struct __darwin_xmm_reg __fpu_xmm11;
 struct __darwin_xmm_reg __fpu_xmm12;
 struct __darwin_xmm_reg __fpu_xmm13;
 struct __darwin_xmm_reg __fpu_xmm14;
 struct __darwin_xmm_reg __fpu_xmm15;
 char __fpu_rsrv4[6*16];
 int __fpu_reserved1;
};


struct __darwin_x86_avx_state64
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;


 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;

 __uint16_t __fpu_rsrv2;


 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;

 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 struct __darwin_xmm_reg __fpu_xmm8;
 struct __darwin_xmm_reg __fpu_xmm9;
 struct __darwin_xmm_reg __fpu_xmm10;
 struct __darwin_xmm_reg __fpu_xmm11;
 struct __darwin_xmm_reg __fpu_xmm12;
 struct __darwin_xmm_reg __fpu_xmm13;
 struct __darwin_xmm_reg __fpu_xmm14;
 struct __darwin_xmm_reg __fpu_xmm15;
 char __fpu_rsrv4[6*16];
 int __fpu_reserved1;
 char __avx_reserved1[64];
 struct __darwin_xmm_reg __fpu_ymmh0;
 struct __darwin_xmm_reg __fpu_ymmh1;
 struct __darwin_xmm_reg __fpu_ymmh2;
 struct __darwin_xmm_reg __fpu_ymmh3;
 struct __darwin_xmm_reg __fpu_ymmh4;
 struct __darwin_xmm_reg __fpu_ymmh5;
 struct __darwin_xmm_reg __fpu_ymmh6;
 struct __darwin_xmm_reg __fpu_ymmh7;
 struct __darwin_xmm_reg __fpu_ymmh8;
 struct __darwin_xmm_reg __fpu_ymmh9;
 struct __darwin_xmm_reg __fpu_ymmh10;
 struct __darwin_xmm_reg __fpu_ymmh11;
 struct __darwin_xmm_reg __fpu_ymmh12;
 struct __darwin_xmm_reg __fpu_ymmh13;
 struct __darwin_xmm_reg __fpu_ymmh14;
 struct __darwin_xmm_reg __fpu_ymmh15;
};



struct __darwin_x86_avx512_state64
{
 int __fpu_reserved[2];
 struct __darwin_fp_control __fpu_fcw;
 struct __darwin_fp_status __fpu_fsw;
 __uint8_t __fpu_ftw;
 __uint8_t __fpu_rsrv1;
 __uint16_t __fpu_fop;


 __uint32_t __fpu_ip;
 __uint16_t __fpu_cs;

 __uint16_t __fpu_rsrv2;


 __uint32_t __fpu_dp;
 __uint16_t __fpu_ds;

 __uint16_t __fpu_rsrv3;
 __uint32_t __fpu_mxcsr;
 __uint32_t __fpu_mxcsrmask;
 struct __darwin_mmst_reg __fpu_stmm0;
 struct __darwin_mmst_reg __fpu_stmm1;
 struct __darwin_mmst_reg __fpu_stmm2;
 struct __darwin_mmst_reg __fpu_stmm3;
 struct __darwin_mmst_reg __fpu_stmm4;
 struct __darwin_mmst_reg __fpu_stmm5;
 struct __darwin_mmst_reg __fpu_stmm6;
 struct __darwin_mmst_reg __fpu_stmm7;
 struct __darwin_xmm_reg __fpu_xmm0;
 struct __darwin_xmm_reg __fpu_xmm1;
 struct __darwin_xmm_reg __fpu_xmm2;
 struct __darwin_xmm_reg __fpu_xmm3;
 struct __darwin_xmm_reg __fpu_xmm4;
 struct __darwin_xmm_reg __fpu_xmm5;
 struct __darwin_xmm_reg __fpu_xmm6;
 struct __darwin_xmm_reg __fpu_xmm7;
 struct __darwin_xmm_reg __fpu_xmm8;
 struct __darwin_xmm_reg __fpu_xmm9;
 struct __darwin_xmm_reg __fpu_xmm10;
 struct __darwin_xmm_reg __fpu_xmm11;
 struct __darwin_xmm_reg __fpu_xmm12;
 struct __darwin_xmm_reg __fpu_xmm13;
 struct __darwin_xmm_reg __fpu_xmm14;
 struct __darwin_xmm_reg __fpu_xmm15;
 char __fpu_rsrv4[6*16];
 int __fpu_reserved1;
 char __avx_reserved1[64];
 struct __darwin_xmm_reg __fpu_ymmh0;
 struct __darwin_xmm_reg __fpu_ymmh1;
 struct __darwin_xmm_reg __fpu_ymmh2;
 struct __darwin_xmm_reg __fpu_ymmh3;
 struct __darwin_xmm_reg __fpu_ymmh4;
 struct __darwin_xmm_reg __fpu_ymmh5;
 struct __darwin_xmm_reg __fpu_ymmh6;
 struct __darwin_xmm_reg __fpu_ymmh7;
 struct __darwin_xmm_reg __fpu_ymmh8;
 struct __darwin_xmm_reg __fpu_ymmh9;
 struct __darwin_xmm_reg __fpu_ymmh10;
 struct __darwin_xmm_reg __fpu_ymmh11;
 struct __darwin_xmm_reg __fpu_ymmh12;
 struct __darwin_xmm_reg __fpu_ymmh13;
 struct __darwin_xmm_reg __fpu_ymmh14;
 struct __darwin_xmm_reg __fpu_ymmh15;
 struct __darwin_opmask_reg __fpu_k0;
 struct __darwin_opmask_reg __fpu_k1;
 struct __darwin_opmask_reg __fpu_k2;
 struct __darwin_opmask_reg __fpu_k3;
 struct __darwin_opmask_reg __fpu_k4;
 struct __darwin_opmask_reg __fpu_k5;
 struct __darwin_opmask_reg __fpu_k6;
 struct __darwin_opmask_reg __fpu_k7;
 struct __darwin_ymm_reg __fpu_zmmh0;
 struct __darwin_ymm_reg __fpu_zmmh1;
 struct __darwin_ymm_reg __fpu_zmmh2;
 struct __darwin_ymm_reg __fpu_zmmh3;
 struct __darwin_ymm_reg __fpu_zmmh4;
 struct __darwin_ymm_reg __fpu_zmmh5;
 struct __darwin_ymm_reg __fpu_zmmh6;
 struct __darwin_ymm_reg __fpu_zmmh7;
 struct __darwin_ymm_reg __fpu_zmmh8;
 struct __darwin_ymm_reg __fpu_zmmh9;
 struct __darwin_ymm_reg __fpu_zmmh10;
 struct __darwin_ymm_reg __fpu_zmmh11;
 struct __darwin_ymm_reg __fpu_zmmh12;
 struct __darwin_ymm_reg __fpu_zmmh13;
 struct __darwin_ymm_reg __fpu_zmmh14;
 struct __darwin_ymm_reg __fpu_zmmh15;
 struct __darwin_zmm_reg __fpu_zmm16;
 struct __darwin_zmm_reg __fpu_zmm17;
 struct __darwin_zmm_reg __fpu_zmm18;
 struct __darwin_zmm_reg __fpu_zmm19;
 struct __darwin_zmm_reg __fpu_zmm20;
 struct __darwin_zmm_reg __fpu_zmm21;
 struct __darwin_zmm_reg __fpu_zmm22;
 struct __darwin_zmm_reg __fpu_zmm23;
 struct __darwin_zmm_reg __fpu_zmm24;
 struct __darwin_zmm_reg __fpu_zmm25;
 struct __darwin_zmm_reg __fpu_zmm26;
 struct __darwin_zmm_reg __fpu_zmm27;
 struct __darwin_zmm_reg __fpu_zmm28;
 struct __darwin_zmm_reg __fpu_zmm29;
 struct __darwin_zmm_reg __fpu_zmm30;
 struct __darwin_zmm_reg __fpu_zmm31;
};
# 1182 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_x86_exception_state64
{
    __uint16_t __trapno;
    __uint16_t __cpu;
    __uint32_t __err;
    __uint64_t __faultvaddr;
};
# 1202 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_x86_debug_state64
{
 __uint64_t __dr0;
 __uint64_t __dr1;
 __uint64_t __dr2;
 __uint64_t __dr3;
 __uint64_t __dr4;
 __uint64_t __dr5;
 __uint64_t __dr6;
 __uint64_t __dr7;
};
# 1230 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/_structs.h" 3
struct __darwin_x86_cpmu_state64
{
 __uint64_t __ctrs[16];
};
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/_structs.h" 2 3
# 35 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h" 2 3




struct __darwin_mcontext32
{
 struct __darwin_i386_exception_state __es;
 struct __darwin_i386_thread_state __ss;
 struct __darwin_i386_float_state __fs;
};


struct __darwin_mcontext_avx32
{
 struct __darwin_i386_exception_state __es;
 struct __darwin_i386_thread_state __ss;
 struct __darwin_i386_avx_state __fs;
};



struct __darwin_mcontext_avx512_32
{
 struct __darwin_i386_exception_state __es;
 struct __darwin_i386_thread_state __ss;
 struct __darwin_i386_avx512_state __fs;
};
# 97 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h" 3
struct __darwin_mcontext64
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_state64 __ss;
 struct __darwin_x86_float_state64 __fs;
};


struct __darwin_mcontext64_full
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_full_state64 __ss;
 struct __darwin_x86_float_state64 __fs;
};


struct __darwin_mcontext_avx64
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_state64 __ss;
 struct __darwin_x86_avx_state64 __fs;
};


struct __darwin_mcontext_avx64_full
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_full_state64 __ss;
 struct __darwin_x86_avx_state64 __fs;
};



struct __darwin_mcontext_avx512_64
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_state64 __ss;
 struct __darwin_x86_avx512_state64 __fs;
};


struct __darwin_mcontext_avx512_64_full
{
 struct __darwin_x86_exception_state64 __es;
 struct __darwin_x86_thread_full_state64 __ss;
 struct __darwin_x86_avx512_state64 __fs;
};
# 204 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/_mcontext.h" 3
typedef struct __darwin_mcontext64 *mcontext_t;
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/_mcontext.h" 2 3
# 147 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 2 3





# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigaltstack.h" 1 3
# 42 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigaltstack.h" 3
struct __darwin_sigaltstack
{
 void *ss_sp;
 __darwin_size_t ss_size;
 int ss_flags;
};
typedef struct __darwin_sigaltstack stack_t;
# 153 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ucontext.h" 1 3
# 39 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ucontext.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/_mcontext.h" 1 3
# 40 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ucontext.h" 2 3


struct __darwin_ucontext
{
 int uc_onstack;
 __darwin_sigset_t uc_sigmask;
 struct __darwin_sigaltstack uc_stack;
 struct __darwin_ucontext *uc_link;
 __darwin_size_t uc_mcsize;
 struct __darwin_mcontext64 *uc_mcontext;



};


typedef struct __darwin_ucontext ucontext_t;
# 154 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 2 3


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigset_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigset_t.h" 3
typedef __darwin_sigset_t sigset_t;
# 157 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 2 3



union sigval {

 int sival_int;
 void *sival_ptr;
};






struct sigevent {
 int sigev_notify;
 int sigev_signo;
 union sigval sigev_value;
 void (*sigev_notify_function)(union sigval);
 pthread_attr_t *sigev_notify_attributes;
};
# 230 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 3
typedef struct __siginfo {
 int si_signo;
 int si_errno;
 int si_code;
 pid_t si_pid;
 uid_t si_uid;
 int si_status;
 void *si_addr;
 union sigval si_value;
 long si_band;
 unsigned long __pad[7];
} siginfo_t;
# 367 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 3
union __sigaction_u {
 void (*__sa_handler)(int);
 void (*__sa_sigaction)(int, struct __siginfo *,
     void *);
};


struct __sigaction {
 union __sigaction_u __sigaction_u;
 void (*sa_tramp)(void *, int, int, siginfo_t *, void *);
 sigset_t sa_mask;
 int sa_flags;
};




struct sigaction {
 union __sigaction_u __sigaction_u;
 sigset_t sa_mask;
 int sa_flags;
};
# 500 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 3
typedef void (*sig_t)(int);
# 538 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 3
struct sigvec {
 void (*sv_handler)(int);
 int sv_mask;
 int sv_flags;
};
# 557 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 3
struct sigstack {
 char *ss_sp;
 int ss_onstack;
};
# 603 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/signal.h" 3
    void(*signal(int, void (*)(int)))(int);
# 124 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/param.h" 2 3
# 717 "./perl.h" 2




# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h" 1 3
# 67 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/wait.h" 1 3
# 79 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/wait.h" 3
typedef enum {
 P_ALL,
 P_PID,
 P_PGID
} idtype_t;
# 110 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/wait.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h" 1 3
# 72 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdint.h" 1 3
# 23 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdint.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types/_uint8_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types/_uint8_t.h" 3
typedef unsigned char uint8_t;
# 24 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdint.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types/_uint16_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types/_uint16_t.h" 3
typedef unsigned short uint16_t;
# 25 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdint.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types/_uint32_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types/_uint32_t.h" 3
typedef unsigned int uint32_t;
# 26 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdint.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types/_uint64_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types/_uint64_t.h" 3
typedef unsigned long long uint64_t;
# 27 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdint.h" 2 3


typedef int8_t int_least8_t;
typedef int16_t int_least16_t;
typedef int32_t int_least32_t;
typedef int64_t int_least64_t;
typedef uint8_t uint_least8_t;
typedef uint16_t uint_least16_t;
typedef uint32_t uint_least32_t;
typedef uint64_t uint_least64_t;



typedef int8_t int_fast8_t;
typedef int16_t int_fast16_t;
typedef int32_t int_fast32_t;
typedef int64_t int_fast64_t;
typedef uint8_t uint_fast8_t;
typedef uint16_t uint_fast16_t;
typedef uint32_t uint_fast32_t;
typedef uint64_t uint_fast64_t;
# 58 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdint.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types/_intmax_t.h" 1 3
# 32 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types/_intmax_t.h" 3
typedef long int intmax_t;
# 59 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdint.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types/_uintmax_t.h" 1 3
# 32 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_types/_uintmax_t.h" 3
typedef long unsigned int uintmax_t;
# 60 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdint.h" 2 3
# 73 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h" 2 3
# 82 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval.h" 1 3
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval.h" 3
struct timeval
{
 __darwin_time_t tv_sec;
 __darwin_suseconds_t tv_usec;
};
# 83 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h" 2 3
# 95 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h" 3
typedef __uint64_t rlim_t;
# 176 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h" 3
struct rusage {
 struct timeval ru_utime;
 struct timeval ru_stime;
# 187 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h" 3
 long ru_maxrss;

 long ru_ixrss;
 long ru_idrss;
 long ru_isrss;
 long ru_minflt;
 long ru_majflt;
 long ru_nswap;
 long ru_inblock;
 long ru_oublock;
 long ru_msgsnd;
 long ru_msgrcv;
 long ru_nsignals;
 long ru_nvcsw;
 long ru_nivcsw;


};
# 217 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h" 3
typedef void *rusage_info_t;

struct rusage_info_v0 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
};

struct rusage_info_v1 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
};

struct rusage_info_v2 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
 uint64_t ri_diskio_bytesread;
 uint64_t ri_diskio_byteswritten;
};

struct rusage_info_v3 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
 uint64_t ri_diskio_bytesread;
 uint64_t ri_diskio_byteswritten;
 uint64_t ri_cpu_time_qos_default;
 uint64_t ri_cpu_time_qos_maintenance;
 uint64_t ri_cpu_time_qos_background;
 uint64_t ri_cpu_time_qos_utility;
 uint64_t ri_cpu_time_qos_legacy;
 uint64_t ri_cpu_time_qos_user_initiated;
 uint64_t ri_cpu_time_qos_user_interactive;
 uint64_t ri_billed_system_time;
 uint64_t ri_serviced_system_time;
};

struct rusage_info_v4 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
 uint64_t ri_diskio_bytesread;
 uint64_t ri_diskio_byteswritten;
 uint64_t ri_cpu_time_qos_default;
 uint64_t ri_cpu_time_qos_maintenance;
 uint64_t ri_cpu_time_qos_background;
 uint64_t ri_cpu_time_qos_utility;
 uint64_t ri_cpu_time_qos_legacy;
 uint64_t ri_cpu_time_qos_user_initiated;
 uint64_t ri_cpu_time_qos_user_interactive;
 uint64_t ri_billed_system_time;
 uint64_t ri_serviced_system_time;
 uint64_t ri_logical_writes;
 uint64_t ri_lifetime_max_phys_footprint;
 uint64_t ri_instructions;
 uint64_t ri_cycles;
 uint64_t ri_billed_energy;
 uint64_t ri_serviced_energy;
 uint64_t ri_interval_max_phys_footprint;
 uint64_t ri_runnable_time;
};

typedef struct rusage_info_v4 rusage_info_current;
# 444 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h" 3
struct rlimit {
 rlim_t rlim_cur;
 rlim_t rlim_max;
};
# 479 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h" 3
struct proc_rlimit_control_wakeupmon {
 uint32_t wm_flags;
 int32_t wm_rate;
};
# 562 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h" 3
int getpriority(int, id_t);

int getiopolicy_np(int, int) __attribute__((availability(macosx,introduced=10.5)));

int getrlimit(int, struct rlimit *) __asm("_" "getrlimit" );
int getrusage(int, struct rusage *);
int setpriority(int, id_t, int);

int setiopolicy_np(int, int, int) __attribute__((availability(macosx,introduced=10.5)));

int setrlimit(int, const struct rlimit *) __asm("_" "setrlimit" );
# 111 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/wait.h" 2 3
# 194 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/wait.h" 3
union wait {
 int w_status;



 struct {

  unsigned int w_Termsig:7,
      w_Coredump:1,
      w_Retcode:8,
      w_Filler:16;







 } w_T;





 struct {

  unsigned int w_Stopval:8,
      w_Stopsig:8,
      w_Filler:16;






 } w_S;
};
# 249 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/wait.h" 3
pid_t wait(int *) __asm("_" "wait" );
pid_t waitpid(pid_t, int *, int) __asm("_" "waitpid" );

int waitid(idtype_t, id_t, siginfo_t *, int) __asm("_" "waitid" );


pid_t wait3(int *, int, struct rusage *);
pid_t wait4(pid_t, int *, int, struct rusage *);
# 68 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h" 2 3


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/alloca.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/alloca.h" 3
void *alloca(size_t);
# 71 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h" 2 3
# 83 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_wchar_t.h" 1 3
# 84 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h" 2 3

typedef struct {
 int quot;
 int rem;
} div_t;

typedef struct {
 long quot;
 long rem;
} ldiv_t;


typedef struct {
 long long quot;
 long long rem;
} lldiv_t;
# 122 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h" 3
extern int __mb_cur_max;
# 133 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h" 1 3
# 40 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h" 3
void *malloc(size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(1)));
void *calloc(size_t __count, size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(1,2)));
void free(void *);
void *realloc(void *__ptr, size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(2)));

void *valloc(size_t) __attribute__((alloc_size(1)));




void *aligned_alloc(size_t __alignment, size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(2))) __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));

int posix_memalign(void **__memptr, size_t __alignment, size_t __size) __attribute__((availability(macosx,introduced=10.6)));
# 134 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h" 2 3



void abort(void) __attribute__((__cold__)) __attribute__((__noreturn__));
int abs(int) __attribute__((__const__));

int atexit(void (* _Nonnull)(void));

double atof(const char *);
int atoi(const char *);
long atol(const char *);

long long
  atoll(const char *);

void *bsearch(const void *__key, const void *__base, size_t __nel,
     size_t __width, int (* _Nonnull __compar)(const void *, const void *));



div_t div(int, int) __attribute__((__const__));

void exit(int) __attribute__((__noreturn__));

char *getenv(const char *);

long labs(long) __attribute__((__const__));
ldiv_t ldiv(long, long) __attribute__((__const__));

long long
  llabs(long long);
lldiv_t lldiv(long long, long long);




int mblen(const char *__s, size_t __n);
size_t mbstowcs(wchar_t * restrict , const char * restrict, size_t);
int mbtowc(wchar_t * restrict, const char * restrict, size_t);



void qsort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *));

int rand(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));

void srand(unsigned) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));

double strtod(const char *, char **) __asm("_" "strtod" );
float strtof(const char *, char **) __asm("_" "strtof" );
long strtol(const char *__str, char **__endptr, int __base);
long double
  strtold(const char *, char **);

long long
  strtoll(const char *__str, char **__endptr, int __base);

unsigned long
  strtoul(const char *__str, char **__endptr, int __base);

unsigned long long
  strtoull(const char *__str, char **__endptr, int __base);
# 206 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h" 3
__attribute__((__availability__(swift, unavailable, message="Use posix_spawn APIs or NSTask instead.")))
__attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable)))
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
int system(const char *) __asm("_" "system" );




size_t wcstombs(char * restrict, const wchar_t * restrict, size_t);
int wctomb(char *, wchar_t);



void _Exit(int) __attribute__((__noreturn__));
long a64l(const char *);
double drand48(void);
char *ecvt(double, int, int *restrict, int *restrict);
double erand48(unsigned short[3]);
char *fcvt(double, int, int *restrict, int *restrict);
char *gcvt(double, int, char *);
int getsubopt(char **, char * const *, char **);
int grantpt(int);

char *initstate(unsigned, char *, size_t);



long jrand48(unsigned short[3]) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
char *l64a(long);
void lcong48(unsigned short[7]);
long lrand48(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
char *mktemp(char *);
int mkstemp(char *);
long mrand48(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
long nrand48(unsigned short[3]) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
int posix_openpt(int);
char *ptsname(int);


int ptsname_r(int fildes, char *buffer, size_t buflen) __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3))) __attribute__((availability(tvos,introduced=11.3))) __attribute__((availability(watchos,introduced=4.3)));


int putenv(char *) __asm("_" "putenv" );
long random(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
int rand_r(unsigned *) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));

char *realpath(const char * restrict, char * restrict) __asm("_" "realpath" "$DARWIN_EXTSN");



unsigned short
 *seed48(unsigned short[3]);
int setenv(const char * __name, const char * __value, int __overwrite) __asm("_" "setenv" );

void setkey(const char *) __asm("_" "setkey" );



char *setstate(const char *);
void srand48(long);

void srandom(unsigned);



int unlockpt(int);

int unsetenv(const char *) __asm("_" "unsetenv" );
# 288 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h" 3
uint32_t arc4random(void);

void arc4random_addrandom(unsigned char * , int )
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(macosx,deprecated=10.12,message="use arc4random_stir")))
    __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(ios,deprecated=10.0,message="use arc4random_stir")))
    __attribute__((availability(tvos,introduced=2.0))) __attribute__((availability(tvos,deprecated=10.0,message="use arc4random_stir")))
    __attribute__((availability(watchos,introduced=1.0))) __attribute__((availability(watchos,deprecated=3.0,message="use arc4random_stir")));

void arc4random_buf(void * __buf, size_t __nbytes) __attribute__((availability(macosx,introduced=10.7)));
void arc4random_stir(void);
uint32_t
  arc4random_uniform(uint32_t __upper_bound) __attribute__((availability(macosx,introduced=10.7)));


int atexit_b(void (^ _Nonnull)(void)) __attribute__((availability(macosx,introduced=10.6)));

void *bsearch_b(const void *__key, const void *__base, size_t __nel,
     size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __attribute__((availability(macosx,introduced=10.6)));




char *cgetcap(char *, const char *, int);
int cgetclose(void);
int cgetent(char **, char **, const char *);
int cgetfirst(char **, char **);
int cgetmatch(const char *, const char *);
int cgetnext(char **, char **);
int cgetnum(char *, const char *, long *);
int cgetset(const char *);
int cgetstr(char *, const char *, char **);
int cgetustr(char *, const char *, char **);

int daemon(int, int) __asm("_" "daemon" "$1050") __attribute__((availability(macosx,introduced=10.0,deprecated=10.5,message="Use posix_spawn APIs instead."))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
char *devname(dev_t, mode_t);
char *devname_r(dev_t, mode_t, char *buf, int len);
char *getbsize(int *, long *);
int getloadavg(double [], int);
const char
 *getprogname(void);
void setprogname(const char *);
# 339 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdlib.h" 3
int heapsort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *));

int heapsort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))
     __attribute__((availability(macosx,introduced=10.6)));

int mergesort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *));

int mergesort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))
     __attribute__((availability(macosx,introduced=10.6)));


void psort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *))
     __attribute__((availability(macosx,introduced=10.6)));

void psort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))
     __attribute__((availability(macosx,introduced=10.6)));

void psort_r(void *__base, size_t __nel, size_t __width, void *,
     int (* _Nonnull __compar)(void *, const void *, const void *))
     __attribute__((availability(macosx,introduced=10.6)));


void qsort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))
     __attribute__((availability(macosx,introduced=10.6)));

void qsort_r(void *__base, size_t __nel, size_t __width, void *,
     int (* _Nonnull __compar)(void *, const void *, const void *));
int radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
     unsigned __endbyte);
int rpmatch(const char *)
 __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));
int sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
     unsigned __endbyte);

void sranddev(void);
void srandomdev(void);
void *reallocf(void *__ptr, size_t __size) __attribute__((alloc_size(2)));


long long
  strtoq(const char *__str, char **__endptr, int __base);
unsigned long long
  strtouq(const char *__str, char **__endptr, int __base);


extern char *suboptarg;
# 722 "./perl.h" 2




# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 1 3
# 72 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/unistd.h" 1 3
# 84 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/unistd.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_posix_vdisable.h" 1 3
# 85 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/unistd.h" 2 3
# 122 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/unistd.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_seek_set.h" 1 3
# 123 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/unistd.h" 2 3
# 132 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/unistd.h" 3
struct accessx_descriptor {
 unsigned int ad_name_offset;
 int ad_flags;
 int ad_pad[2];
};
# 188 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/unistd.h" 3
int getattrlistbulk(int, void *, void *, size_t, uint64_t) __attribute__((availability(macosx,introduced=10.10)));
int getattrlistat(int, const char *, void *, void *, size_t, unsigned long) __attribute__((availability(macosx,introduced=10.10)));
int setattrlistat(int, const char *, void *, void *, size_t, uint32_t) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
# 208 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/unistd.h" 3
int faccessat(int, const char *, int, int) __attribute__((availability(macosx,introduced=10.10)));
int fchownat(int, const char *, uid_t, gid_t, int) __attribute__((availability(macosx,introduced=10.10)));
int linkat(int, const char *, int, const char *, int) __attribute__((availability(macosx,introduced=10.10)));
ssize_t readlinkat(int, const char *, char *, size_t) __attribute__((availability(macosx,introduced=10.10)));
int symlinkat(const char *, int, const char *) __attribute__((availability(macosx,introduced=10.10)));
int unlinkat(int, const char *, int) __attribute__((availability(macosx,introduced=10.10)));
# 73 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 2 3
# 434 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 3
void _exit(int) __attribute__((__noreturn__));
int access(const char *, int);
unsigned int
  alarm(unsigned int);
int chdir(const char *);
int chown(const char *, uid_t, gid_t);

int close(int) __asm("_" "close" );

int dup(int);
int dup2(int, int);
int execl(const char * __path, const char * __arg0, ...) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execle(const char * __path, const char * __arg0, ...) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execlp(const char * __file, const char * __arg0, ...) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execv(const char * __path, char * const * __argv) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execve(const char * __file, char * const * __argv, char * const * __envp) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execvp(const char * __file, char * const * __argv) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
pid_t fork(void) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
long fpathconf(int, int);
char *getcwd(char *, size_t);
gid_t getegid(void);
uid_t geteuid(void);
gid_t getgid(void);



int getgroups(int, gid_t []);

char *getlogin(void);
pid_t getpgrp(void);
pid_t getpid(void);
pid_t getppid(void);
uid_t getuid(void);
int isatty(int);
int link(const char *, const char *);
off_t lseek(int, off_t, int);
long pathconf(const char *, int);

int pause(void) __asm("_" "pause" );

int pipe(int [2]);

ssize_t read(int, void *, size_t) __asm("_" "read" );

int rmdir(const char *);
int setgid(gid_t);
int setpgid(pid_t, pid_t);
pid_t setsid(void);
int setuid(uid_t);

unsigned int
  sleep(unsigned int) __asm("_" "sleep" );

long sysconf(int);
pid_t tcgetpgrp(int);
int tcsetpgrp(int, pid_t);
char *ttyname(int);


int ttyname_r(int, char *, size_t) __asm("_" "ttyname_r" );




int unlink(const char *);

ssize_t write(int __fd, const void * __buf, size_t __nbyte) __asm("_" "write" );
# 511 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 3
size_t confstr(int, char *, size_t) __asm("_" "confstr" );

int getopt(int, char * const [], const char *) __asm("_" "getopt" );

extern char *optarg;
extern int optind, opterr, optopt;
# 529 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_ctermid.h" 1 3
# 26 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_ctermid.h" 3
char *ctermid(char *);
# 530 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 2 3
# 542 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 3
__attribute__((__deprecated__)) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

void *brk(const void *);
int chroot(const char *) ;


char *crypt(const char *, const char *);

void encrypt(char *, int) __asm("_" "encrypt" );



int fchdir(int);
long gethostid(void);
pid_t getpgid(pid_t);
pid_t getsid(pid_t);



int getdtablesize(void) ;
int getpagesize(void) __attribute__((__const__)) ;
char *getpass(const char *) ;




char *getwd(char *) ;


int lchown(const char *, uid_t, gid_t) __asm("_" "lchown" );

int lockf(int, int, off_t) __asm("_" "lockf" );

int nice(int) __asm("_" "nice" );

ssize_t pread(int __fd, void * __buf, size_t __nbyte, off_t __offset) __asm("_" "pread" );

ssize_t pwrite(int __fd, const void * __buf, size_t __nbyte, off_t __offset) __asm("_" "pwrite" );






__attribute__((__deprecated__)) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

void *sbrk(int);



pid_t setpgrp(void) __asm("_" "setpgrp" );




int setregid(gid_t, gid_t) __asm("_" "setregid" );

int setreuid(uid_t, uid_t) __asm("_" "setreuid" );

void swab(const void * restrict, void * restrict, ssize_t);
void sync(void);
int truncate(const char *, off_t);
useconds_t ualarm(useconds_t, useconds_t);
int usleep(useconds_t) __asm("_" "usleep" );
pid_t vfork(void) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


int fsync(int) __asm("_" "fsync" );

int ftruncate(int, off_t);
int getlogin_r(char *, size_t);
# 625 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 3
int fchown(int, uid_t, gid_t);
int gethostname(char *, size_t);
ssize_t readlink(const char * restrict, char * restrict, size_t);
int setegid(gid_t);
int seteuid(uid_t);
int symlink(const char *, const char *);
# 639 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/select.h" 1 3
# 76 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/select.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_timespec.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_timespec.h" 3
struct timespec
{
 __darwin_time_t tv_sec;
 long tv_nsec;
};
# 77 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/select.h" 2 3
# 150 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/select.h" 3
int pselect(int, fd_set * restrict, fd_set * restrict,
    fd_set * restrict, const struct timespec * restrict,
    const sigset_t * restrict)




__asm("_" "pselect" "$1050")




;



# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_select.h" 1 3
# 39 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_select.h" 3
int select(int, fd_set * restrict, fd_set * restrict,
    fd_set * restrict, struct timeval * restrict)




__asm("_" "select" "$1050")




;
# 166 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/select.h" 2 3
# 640 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 2 3



# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_uuid_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_uuid_t.h" 3
typedef __darwin_uuid_t uuid_t;
# 644 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 2 3


void _Exit(int) __attribute__((__noreturn__));
int accessx_np(const struct accessx_descriptor *, size_t, int *, uid_t);
int acct(const char *);
int add_profil(char *, size_t, unsigned long, unsigned int) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
void endusershell(void);
int execvP(const char * __file, const char * __searchpath, char * const * __argv) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
char *fflagstostr(unsigned long);
int getdomainname(char *, int);
int getgrouplist(const char *, int, int *, int *);



# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/gethostuuid_private.h" 1 3
# 37 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/gethostuuid_private.h" 3
int _getprivatesystemidentifier(uuid_t uuid, const struct timespec *timeout) __attribute__((availability(macosx,introduced=10.9)));


int gethostuuid(uuid_t, const struct timespec *) __attribute__((availability(macosx,introduced=10.5)));


int _register_gethostuuid_callback(int (*)(uuid_t)) __attribute__((availability(macosx,introduced=10.9)));
# 658 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 2 3






mode_t getmode(const void *, mode_t);
int getpeereid(int, uid_t *, gid_t *);
int getsgroups_np(int *, uuid_t);
char *getusershell(void);
int getwgroups_np(int *, uuid_t);
int initgroups(const char *, int);
int issetugid(void);
char *mkdtemp(char *);
int mknod(const char *, mode_t, dev_t);
int mkpath_np(const char *path, mode_t omode) __attribute__((availability(macosx,introduced=10.8)));
int mkpathat_np(int dfd, const char *path, mode_t omode)
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int mkstemp(char *);
int mkstemps(char *, int);
char *mktemp(char *);
int mkostemp(char *path, int oflags)
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int mkostemps(char *path, int slen, int oflags)
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

int mkstemp_dprotected_np(char *path, int dpclass, int dpflags)
  __attribute__((availability(macosx,unavailable))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
char *mkdtempat_np(int dfd, char *path)
  __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)))
  __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
int mkstempsat_np(int dfd, char *path, int slen)
  __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)))
  __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
int mkostempsat_np(int dfd, char *path, int slen, int oflags)
  __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)))
  __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
int nfssvc(int, void *);
int profil(char *, size_t, unsigned long, unsigned int);

__attribute__((__deprecated__("Use of per-thread security contexts is error-prone and discouraged.")))
int pthread_setugid_np(uid_t, gid_t);
int pthread_getugid_np( uid_t *, gid_t *);

int reboot(int);
int revoke(const char *);

__attribute__((__deprecated__)) int rcmd(char **, int, const char *, const char *, const char *, int *);
__attribute__((__deprecated__)) int rcmd_af(char **, int, const char *, const char *, const char *, int *,
  int);
__attribute__((__deprecated__)) int rresvport(int *);
__attribute__((__deprecated__)) int rresvport_af(int *, int);
__attribute__((__deprecated__)) int iruserok(unsigned long, int, const char *, const char *);
__attribute__((__deprecated__)) int iruserok_sa(const void *, int, int, const char *, const char *);
__attribute__((__deprecated__)) int ruserok(const char *, int, const char *, const char *);

int setdomainname(const char *, int);
int setgroups(int, const gid_t *);
void sethostid(long);
int sethostname(const char *, int);

void setkey(const char *) __asm("_" "setkey" );



int setlogin(const char *);
void *setmode(const char *) __asm("_" "setmode" );
int setrgid(gid_t);
int setruid(uid_t);
int setsgroups_np(int, const uuid_t);
void setusershell(void);
int setwgroups_np(int, const uuid_t);
int strtofflags(char **, unsigned long *, unsigned long *);
int swapon(const char *);
int ttyslot(void);
int undelete(const char *);
int unwhiteout(const char *);
void *valloc(size_t);

__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
__attribute__((availability(ios,deprecated=10.0,message="syscall(2) is unsupported; " "please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost().")))

__attribute__((availability(macosx,deprecated=10.12,message="syscall(2) is unsupported; " "please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost().")))

int syscall(int, ...);

extern char *suboptarg;
int getsubopt(char **, char * const *, char **);



int fgetattrlist(int,void*,void*,size_t,unsigned int) __attribute__((availability(macosx,introduced=10.6)));
int fsetattrlist(int,void*,void*,size_t,unsigned int) __attribute__((availability(macosx,introduced=10.6)));
int getattrlist(const char*,void*,void*,size_t,unsigned int) __asm("_" "getattrlist" );
int setattrlist(const char*,void*,void*,size_t,unsigned int) __asm("_" "setattrlist" );
int exchangedata(const char*,const char*,unsigned int) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int getdirentriesattr(int,void*,void*,size_t,unsigned int*,unsigned int*,unsigned int*,unsigned int) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
# 773 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/unistd.h" 3
struct fssearchblock;
struct searchstate;

int searchfs(const char *, struct fssearchblock *, unsigned long *, unsigned int, unsigned int, struct searchstate *) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int fsctl(const char *,unsigned long,void*,unsigned int);
int ffsctl(int,unsigned long,void*,unsigned int) __attribute__((availability(macosx,introduced=10.6)));




int fsync_volume_np(int, int) __attribute__((availability(macosx,introduced=10.8)));
int sync_volume_np(const char *, int) __attribute__((availability(macosx,introduced=10.8)));

extern int optreset;
# 727 "./perl.h" 2
# 1037 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stddef.h" 1 3
# 68 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stddef.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_offsetof.h" 1 3
# 69 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stddef.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ptrdiff_t.h" 1 3
# 32 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_ptrdiff_t.h" 3
typedef __darwin_ptrdiff_t ptrdiff_t;
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stddef.h" 2 3
# 79 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stddef.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_wchar_t.h" 1 3
# 80 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stddef.h" 2 3







typedef long double max_align_t;
# 1038 "./perl.h" 2







# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/string.h" 1 3
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/string.h" 3
void *memchr(const void *__s, int __c, size_t __n);
int memcmp(const void *__s1, const void *__s2, size_t __n);
void *memcpy(void *__dst, const void *__src, size_t __n);
void *memmove(void *__dst, const void *__src, size_t __len);
void *memset(void *__b, int __c, size_t __len);

char *strcat(char *__s1, const char *__s2);

char *strchr(const char *__s, int __c);
int strcmp(const char *__s1, const char *__s2);
int strcoll(const char *__s1, const char *__s2);

char *strcpy(char *__dst, const char *__src);

size_t strcspn(const char *__s, const char *__charset);
char *strerror(int __errnum) __asm("_" "strerror" );
size_t strlen(const char *__s);
char *strncat(char *__s1, const char *__s2, size_t __n);
int strncmp(const char *__s1, const char *__s2, size_t __n);
char *strncpy(char *__dst, const char *__src, size_t __n);
char *strpbrk(const char *__s, const char *__charset);
char *strrchr(const char *__s, int __c);
size_t strspn(const char *__s, const char *__charset);
char *strstr(const char *__big, const char *__little);
char *strtok(char *__str, const char *__sep);
size_t strxfrm(char *__s1, const char *__s2, size_t __n);
# 108 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/string.h" 3
char *strtok_r(char *__str, const char *__sep, char **__lasts);
# 120 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/string.h" 3
int strerror_r(int __errnum, char *__strerrbuf, size_t __buflen);
char *strdup(const char *__s1);
void *memccpy(void *__dst, const void *__src, int __c, size_t __n);
# 135 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/string.h" 3
char *stpcpy(char *__dst, const char *__src);

char *stpncpy(char *__dst, const char *__src, size_t __n) __attribute__((availability(macosx,introduced=10.7)));
char *strndup(const char *__s1, size_t __n) __attribute__((availability(macosx,introduced=10.7)));
size_t strnlen(const char *__s1, size_t __n) __attribute__((availability(macosx,introduced=10.7)));
char *strsignal(int __sig);
# 151 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/string.h" 3
errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n) __attribute__((availability(macosx,introduced=10.9)));
# 161 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/string.h" 3
void *memmem(const void *__big, size_t __big_len, const void *__little, size_t __little_len) __attribute__((availability(macosx,introduced=10.7)));
void memset_pattern4(void *__b, const void *__pattern4, size_t __len) __attribute__((availability(macosx,introduced=10.5)));
void memset_pattern8(void *__b, const void *__pattern8, size_t __len) __attribute__((availability(macosx,introduced=10.5)));
void memset_pattern16(void *__b, const void *__pattern16, size_t __len) __attribute__((availability(macosx,introduced=10.5)));

char *strcasestr(const char *__big, const char *__little);
char *strnstr(const char *__big, const char *__little, size_t __len);
size_t strlcat(char *__dst, const char *__source, size_t __size);
size_t strlcpy(char *__dst, const char *__source, size_t __size);
void strmode(int __mode, char *__bp);
char *strsep(char **__stringp, const char *__delim);


void swab(const void * restrict, void * restrict, ssize_t);

__attribute__((availability(macosx,introduced=10.12.1))) __attribute__((availability(ios,introduced=10.1)))
__attribute__((availability(tvos,introduced=10.0.1))) __attribute__((availability(watchos,introduced=3.1)))
int timingsafe_bcmp(const void *__b1, const void *__b2, size_t __len);








# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/strings.h" 1 3
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/strings.h" 3
int bcmp(const void *, const void *, size_t) ;
void bcopy(const void *, void *, size_t) ;
void bzero(void *, size_t) ;
char *index(const char *, int) ;
char *rindex(const char *, int) ;


int ffs(int);
int strcasecmp(const char *, const char *);
int strncasecmp(const char *, const char *, size_t);





int ffsl(long) __attribute__((availability(macosx,introduced=10.5)));
int ffsll(long long) __attribute__((availability(macosx,introduced=10.9)));
int fls(int) __attribute__((availability(macosx,introduced=10.5)));
int flsl(long) __attribute__((availability(macosx,introduced=10.5)));
int flsll(long long) __attribute__((availability(macosx,introduced=10.9)));



# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/string.h" 1 3
# 93 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/strings.h" 2 3




# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/secure/_strings.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/secure/_strings.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/secure/_common.h" 1 3
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/secure/_strings.h" 2 3
# 98 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/strings.h" 2 3
# 187 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/string.h" 2 3
# 196 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/string.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/secure/_string.h" 1 3
# 197 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/string.h" 2 3
# 1046 "./perl.h" 2
# 1196 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 1 3
# 83 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 1 3
# 77 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/machine/_param.h" 1 3
# 78 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/net/net_kev.h" 1 3
# 79 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 2 3
# 100 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_sa_family_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_sa_family_t.h" 3
typedef __uint8_t sa_family_t;
# 101 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_socklen_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_socklen_t.h" 3
typedef __darwin_socklen_t socklen_t;
# 102 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 2 3
# 112 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_iovec_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_iovec_t.h" 3
struct iovec {
 void * iov_base;
 size_t iov_len;
};
# 113 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 2 3
# 471 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
typedef __uint32_t sae_associd_t;



typedef __uint32_t sae_connid_t;
# 485 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
typedef struct sa_endpoints {
 unsigned int sae_srcif;
 const struct sockaddr *sae_srcaddr;
 socklen_t sae_srcaddrlen;
 const struct sockaddr *sae_dstaddr;
 socklen_t sae_dstaddrlen;
} sa_endpoints_t;





struct linger {
 int l_onoff;
 int l_linger;
};
# 515 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
struct so_np_extensions {
 u_int32_t npx_flags;
 u_int32_t npx_mask;
};
# 601 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
struct sockaddr {
 __uint8_t sa_len;
 sa_family_t sa_family;
 char sa_data[14];
};
# 614 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
struct sockproto {
 __uint16_t sp_family;
 __uint16_t sp_protocol;
};
# 634 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
struct sockaddr_storage {
 __uint8_t ss_len;
 sa_family_t ss_family;
 char __ss_pad1[((sizeof(__int64_t)) - sizeof(__uint8_t) - sizeof(sa_family_t))];
 __int64_t __ss_align;
 char __ss_pad2[(128 - sizeof(__uint8_t) - sizeof(sa_family_t) - ((sizeof(__int64_t)) - sizeof(__uint8_t) - sizeof(sa_family_t)) - (sizeof(__int64_t)))];
};
# 817 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
struct msghdr {
 void *msg_name;
 socklen_t msg_namelen;
 struct iovec *msg_iov;
 int msg_iovlen;
 void *msg_control;
 socklen_t msg_controllen;
 int msg_flags;
};
# 1030 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
struct cmsghdr {
 socklen_t cmsg_len;
 int cmsg_level;
 int cmsg_type;

};
# 1154 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
struct sf_hdtr {
 struct iovec *headers;
 int hdr_cnt;
 struct iovec *trailers;
 int trl_cnt;
};
# 1425 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/socket.h" 3
int accept(int, struct sockaddr * restrict, socklen_t * restrict)
__asm("_" "accept" );
int bind(int, const struct sockaddr *, socklen_t) __asm("_" "bind" );
int connect(int, const struct sockaddr *, socklen_t) __asm("_" "connect" );
int getpeername(int, struct sockaddr * restrict, socklen_t * restrict)
__asm("_" "getpeername" );
int getsockname(int, struct sockaddr * restrict, socklen_t * restrict)
__asm("_" "getsockname" );
int getsockopt(int, int, int, void * restrict, socklen_t * restrict);
int listen(int, int) __asm("_" "listen" );
ssize_t recv(int, void *, size_t, int) __asm("_" "recv" );
ssize_t recvfrom(int, void *, size_t, int, struct sockaddr * restrict,
    socklen_t * restrict) __asm("_" "recvfrom" );
ssize_t recvmsg(int, struct msghdr *, int) __asm("_" "recvmsg" );
ssize_t send(int, const void *, size_t, int) __asm("_" "send" );
ssize_t sendmsg(int, const struct msghdr *, int) __asm("_" "sendmsg" );
ssize_t sendto(int, const void *, size_t,
    int, const struct sockaddr *, socklen_t) __asm("_" "sendto" );
int setsockopt(int, int, int, const void *, socklen_t);
int shutdown(int, int);
int sockatmark(int) __attribute__((availability(macosx,introduced=10.5)));
int socket(int, int, int);
int socketpair(int, int, int, int *) __asm("_" "socketpair" );


int sendfile(int, int, off_t, off_t *, struct sf_hdtr *, int);



void pfctlinput(int, struct sockaddr *);

__attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
int connectx(int, const sa_endpoints_t *, sae_associd_t, unsigned int,
    const struct iovec *, unsigned int, size_t *, sae_connid_t *);

__attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))
int disconnectx(int, sae_associd_t, sae_connid_t);
# 84 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 2 3
# 306 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 3
struct in_addr {
 in_addr_t s_addr;
};
# 390 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 3
struct sockaddr_in {
 __uint8_t sin_len;
 sa_family_t sin_family;
 in_port_t sin_port;
 struct in_addr sin_addr;
 char sin_zero[8];
};
# 441 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 3
struct ip_opts {
 struct in_addr ip_dst;
 char ip_opts[40];
};
# 555 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 3
struct ip_mreq {
 struct in_addr imr_multiaddr;
 struct in_addr imr_interface;
};






struct ip_mreqn {
 struct in_addr imr_multiaddr;
 struct in_addr imr_address;
 int imr_ifindex;
};

#pragma pack(4)



struct ip_mreq_source {
 struct in_addr imr_multiaddr;
 struct in_addr imr_sourceaddr;
 struct in_addr imr_interface;
};





struct group_req {
 uint32_t gr_interface;
 struct sockaddr_storage gr_group;
};

struct group_source_req {
 uint32_t gsr_interface;
 struct sockaddr_storage gsr_group;
 struct sockaddr_storage gsr_source;
};
# 603 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 3
struct __msfilterreq {
 uint32_t msfr_ifindex;
 uint32_t msfr_fmode;
 uint32_t msfr_nsrcs;
 uint32_t __msfr_align;
 struct sockaddr_storage msfr_group;
 struct sockaddr_storage *msfr_srcs;
};
# 633 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 3
#pragma pack()
struct sockaddr;







int setipv4sourcefilter(int, struct in_addr, struct in_addr, uint32_t,
    uint32_t, struct in_addr *) __attribute__((availability(macosx,introduced=10.7)));
int getipv4sourcefilter(int, struct in_addr, struct in_addr, uint32_t *,
    uint32_t *, struct in_addr *) __attribute__((availability(macosx,introduced=10.7)));
int setsourcefilter(int, uint32_t, struct sockaddr *, socklen_t,
    uint32_t, uint32_t, struct sockaddr_storage *) __attribute__((availability(macosx,introduced=10.7)));
int getsourcefilter(int, uint32_t, struct sockaddr *, socklen_t,
    uint32_t *, uint32_t *, struct sockaddr_storage *) __attribute__((availability(macosx,introduced=10.7)));
# 687 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 3
struct in_pktinfo {
 unsigned int ipi_ifindex;
 struct in_addr ipi_spec_dst;
 struct in_addr ipi_addr;
};
# 807 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet6/in6.h" 1 3
# 151 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet6/in6.h" 3
typedef struct in6_addr {
 union {
  __uint8_t __u6_addr8[16];
  __uint16_t __u6_addr16[8];
  __uint32_t __u6_addr32[4];
 } __u6_addr;
} in6_addr_t;
# 174 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet6/in6.h" 3
struct sockaddr_in6 {
 __uint8_t sin6_len;
 sa_family_t sin6_family;
 in_port_t sin6_port;
 __uint32_t sin6_flowinfo;
 struct in6_addr sin6_addr;
 __uint32_t sin6_scope_id;
};
# 274 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet6/in6.h" 3
extern const struct in6_addr in6addr_any;
extern const struct in6_addr in6addr_loopback;

extern const struct in6_addr in6addr_nodelocal_allnodes;
extern const struct in6_addr in6addr_linklocal_allnodes;
extern const struct in6_addr in6addr_linklocal_allrouters;
extern const struct in6_addr in6addr_linklocal_allv2routers;
# 701 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet6/in6.h" 3
struct ipv6_mreq {
 struct in6_addr ipv6mr_multiaddr;
 unsigned int ipv6mr_interface;
};




struct in6_pktinfo {
 struct in6_addr ipi6_addr;
 unsigned int ipi6_ifindex;
};




struct ip6_mtuinfo {
 struct sockaddr_in6 ip6m_addr;
 uint32_t ip6m_mtu;
};
# 969 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet6/in6.h" 3
struct cmsghdr;

extern int inet6_option_space(int);
extern int inet6_option_init(void *, struct cmsghdr **, int);
extern int inet6_option_append(struct cmsghdr *, const __uint8_t *, int, int);
extern __uint8_t *inet6_option_alloc(struct cmsghdr *, int, int, int);
extern int inet6_option_next(const struct cmsghdr *, __uint8_t **);
extern int inet6_option_find(const struct cmsghdr *, __uint8_t **, int);

extern size_t inet6_rthdr_space(int, int);
extern struct cmsghdr *inet6_rthdr_init(void *, int);
extern int inet6_rthdr_add(struct cmsghdr *, const struct in6_addr *,
    unsigned int);
extern int inet6_rthdr_lasthop(struct cmsghdr *, unsigned int);



extern int inet6_rthdr_segments(const struct cmsghdr *);
extern struct in6_addr *inet6_rthdr_getaddr(struct cmsghdr *, int);
extern int inet6_rthdr_getflags(const struct cmsghdr *, int);

extern int inet6_opt_init(void *, socklen_t);
extern int inet6_opt_append(void *, socklen_t, int, __uint8_t, socklen_t,
    __uint8_t, void **);
extern int inet6_opt_finish(void *, socklen_t, int);
extern int inet6_opt_set_val(void *, int, void *, socklen_t);

extern int inet6_opt_next(void *, socklen_t, int, __uint8_t *, socklen_t *,
    void **);
extern int inet6_opt_find(void *, socklen_t, int, __uint8_t, socklen_t *,
    void **);
extern int inet6_opt_get_val(void *, int, void *, socklen_t);
extern socklen_t inet6_rth_space(int, int);
extern void *inet6_rth_init(void *, socklen_t, int, int);
extern int inet6_rth_add(void *, const struct in6_addr *);
extern int inet6_rth_reverse(const void *, void *);
extern int inet6_rth_segments(const void *);
extern struct in6_addr *inet6_rth_getaddr(const void *, int);
# 808 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 2 3
# 947 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netinet/in.h" 3
int bindresvport(int, struct sockaddr_in *);
struct sockaddr;
int bindresvport_sa(int, struct sockaddr *);
# 1197 "./perl.h" 2



# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/arpa/inet.h" 1 3
# 75 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/arpa/inet.h" 3
in_addr_t inet_addr(const char *);
char *inet_ntoa(struct in_addr);
const char *inet_ntop(int, const void *, char *, socklen_t);
int inet_pton(int, const char *, void *);


int ascii2addr(int, const char *, void *);
char *addr2ascii(int, const void *, int, char *);
int inet_aton(const char *, struct in_addr *);
in_addr_t inet_lnaof(struct in_addr);
struct in_addr inet_makeaddr(in_addr_t, in_addr_t);
in_addr_t inet_netof(struct in_addr);
in_addr_t inet_network(const char *);
char *inet_net_ntop(int, const void *, int, char *, __darwin_size_t);
int inet_net_pton(int, const char *, void *, __darwin_size_t);
char *inet_neta(in_addr_t, char *, __darwin_size_t);
unsigned int inet_nsap_addr(const char *, unsigned char *, int);
char *inet_nsap_ntoa(int, const unsigned char *, char *);
# 1201 "./perl.h" 2
# 1210 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/stat.h" 1 3
# 118 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/stat.h" 3
struct ostat {
 __uint16_t st_dev;
 ino_t st_ino;
 mode_t st_mode;
 nlink_t st_nlink;
 __uint16_t st_uid;
 __uint16_t st_gid;
 __uint16_t st_rdev;
 __int32_t st_size;
 struct timespec st_atimespec;
 struct timespec st_mtimespec;
 struct timespec st_ctimespec;
 __int32_t st_blksize;
 __int32_t st_blocks;
 __uint32_t st_flags;
 __uint32_t st_gen;
};
# 190 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/stat.h" 3
struct stat { dev_t st_dev; mode_t st_mode; nlink_t st_nlink; __darwin_ino64_t st_ino; uid_t st_uid; gid_t st_gid; dev_t st_rdev; struct timespec st_atimespec; struct timespec st_mtimespec; struct timespec st_ctimespec; struct timespec st_birthtimespec; off_t st_size; blkcnt_t st_blocks; blksize_t st_blksize; __uint32_t st_flags; __uint32_t st_gen; __int32_t st_lspare; __int64_t st_qspare[2]; };
# 229 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/stat.h" 3
struct stat64 { dev_t st_dev; mode_t st_mode; nlink_t st_nlink; __darwin_ino64_t st_ino; uid_t st_uid; gid_t st_gid; dev_t st_rdev; struct timespec st_atimespec; struct timespec st_mtimespec; struct timespec st_ctimespec; struct timespec st_birthtimespec; off_t st_size; blkcnt_t st_blocks; blksize_t st_blksize; __uint32_t st_flags; __uint32_t st_gen; __int32_t st_lspare; __int64_t st_qspare[2]; };
# 402 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/stat.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_s_ifmt.h" 1 3
# 403 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/stat.h" 2 3
# 547 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/stat.h" 3
int chmod(const char *, mode_t) __asm("_" "chmod" );
int fchmod(int, mode_t) __asm("_" "fchmod" );
int fstat(int, struct stat *) __asm("_" "fstat" "$INODE64");
int lstat(const char *, struct stat *) __asm("_" "lstat" "$INODE64");
int mkdir(const char *, mode_t);
int mkfifo(const char *, mode_t);
int stat(const char *, struct stat *) __asm("_" "stat" "$INODE64");
int mknod(const char *, mode_t, dev_t);
mode_t umask(mode_t);


int fchmodat(int, const char *, mode_t, int) __attribute__((availability(macosx,introduced=10.10)));
int fstatat(int, const char *, struct stat *, int) __asm("_" "fstatat" "$INODE64") __attribute__((availability(macosx,introduced=10.10)));
int mkdirat(int, const char *, mode_t) __attribute__((availability(macosx,introduced=10.10)));




int futimens(int __fd, const struct timespec __times[2]) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
int utimensat(int __fd, const char *__path, const struct timespec __times[2],
    int __flag) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));





# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_filesec_t.h" 1 3
# 30 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_filesec_t.h" 3
struct _filesec;
typedef struct _filesec *filesec_t;
# 573 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/stat.h" 2 3

int chflags(const char *, __uint32_t);
int chmodx_np(const char *, filesec_t);
int fchflags(int, __uint32_t);
int fchmodx_np(int, filesec_t);
int fstatx_np(int, struct stat *, filesec_t) __asm("_" "fstatx_np" "$INODE64");
int lchflags(const char *, __uint32_t) __attribute__((availability(macosx,introduced=10.5)));
int lchmod(const char *, mode_t) __attribute__((availability(macosx,introduced=10.5)));
int lstatx_np(const char *, struct stat *, filesec_t) __asm("_" "lstatx_np" "$INODE64");
int mkdirx_np(const char *, filesec_t);
int mkfifox_np(const char *, filesec_t);
int statx_np(const char *, struct stat *, filesec_t) __asm("_" "statx_np" "$INODE64");
int umaskx_np(filesec_t) __attribute__((availability(macosx,introduced=10.4,deprecated=10.6)));



int fstatx64_np(int, struct stat64 *, filesec_t) __attribute__((availability(macosx,introduced=10.5,deprecated=10.6)));
int lstatx64_np(const char *, struct stat64 *, filesec_t) __attribute__((availability(macosx,introduced=10.5,deprecated=10.6)));
int statx64_np(const char *, struct stat64 *, filesec_t) __attribute__((availability(macosx,introduced=10.5,deprecated=10.6)));
int fstat64(int, struct stat64 *) __attribute__((availability(macosx,introduced=10.5,deprecated=10.6)));
int lstat64(const char *, struct stat64 *) __attribute__((availability(macosx,introduced=10.5,deprecated=10.6)));
int stat64(const char *, struct stat64 *) __attribute__((availability(macosx,introduced=10.5,deprecated=10.6)));
# 1211 "./perl.h" 2
# 1246 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/time.h" 1 3
# 85 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/time.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval64.h" 1 3
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval64.h" 3
struct timeval64 {
 __int64_t tv_sec;
 __int64_t tv_usec;
};
# 86 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/time.h" 2 3
# 106 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/time.h" 3
struct itimerval {
 struct timeval it_interval;
 struct timeval it_value;
};
# 144 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/time.h" 3
struct timezone {
 int tz_minuteswest;
 int tz_dsttime;
};
# 187 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/time.h" 3
struct clockinfo {
 int hz;
 int tick;
 int tickadj;
 int stathz;
 int profhz;
};
# 231 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/time.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/time.h" 1 3
# 76 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/time.h" 3
struct tm {
 int tm_sec;
 int tm_min;
 int tm_hour;
 int tm_mday;
 int tm_mon;
 int tm_year;
 int tm_wday;
 int tm_yday;
 int tm_isdst;
 long tm_gmtoff;
 char *tm_zone;
};
# 99 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/time.h" 3
extern char *tzname[];


extern int getdate_err;

extern long timezone __asm("_" "timezone" );

extern int daylight;




char *asctime(const struct tm *);
clock_t clock(void) __asm("_" "clock" );
char *ctime(const time_t *);
double difftime(time_t, time_t);
struct tm *getdate(const char *);
struct tm *gmtime(const time_t *);
struct tm *localtime(const time_t *);
time_t mktime(struct tm *) __asm("_" "mktime" );
size_t strftime(char * restrict, size_t, const char * restrict, const struct tm * restrict) __asm("_" "strftime" );
char *strptime(const char * restrict, const char * restrict, struct tm * restrict) __asm("_" "strptime" );
time_t time(time_t *);


void tzset(void);



char *asctime_r(const struct tm * restrict, char * restrict);
char *ctime_r(const time_t *, char *);
struct tm *gmtime_r(const time_t * restrict, struct tm * restrict);
struct tm *localtime_r(const time_t * restrict, struct tm * restrict);


time_t posix2time(time_t);



void tzsetwall(void);
time_t time2posix(time_t);
time_t timelocal(struct tm * const);
time_t timegm(struct tm * const);



int nanosleep(const struct timespec *__rqtp, struct timespec *__rmtp) __asm("_" "nanosleep" );
# 157 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/time.h" 3
typedef enum {
_CLOCK_REALTIME __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 0,

_CLOCK_MONOTONIC __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 6,


_CLOCK_MONOTONIC_RAW __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 4,

_CLOCK_MONOTONIC_RAW_APPROX __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 5,

_CLOCK_UPTIME_RAW __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 8,

_CLOCK_UPTIME_RAW_APPROX __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 9,


_CLOCK_PROCESS_CPUTIME_ID __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 12,

_CLOCK_THREAD_CPUTIME_ID __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 16

} clockid_t;


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
int clock_getres(clockid_t __clock_id, struct timespec *__res);

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
int clock_gettime(clockid_t __clock_id, struct timespec *__tp);



__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
__uint64_t clock_gettime_nsec_np(clockid_t __clock_id);



__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable)))
__attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
int clock_settime(clockid_t __clock_id, const struct timespec *__tp);
# 207 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/time.h" 3
__attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))
int timespec_get(struct timespec *ts, int base);
# 232 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/time.h" 2 3





int adjtime(const struct timeval *, struct timeval *);
int futimes(int, const struct timeval *);
int lutimes(const char *, const struct timeval *) __attribute__((availability(macosx,introduced=10.5)));
int settimeofday(const struct timeval *, const struct timezone *);


int getitimer(int, struct itimerval *);
int gettimeofday(struct timeval * restrict, void * restrict);



int setitimer(int, const struct itimerval * restrict,
    struct itimerval * restrict);
int utimes(const char *, const struct timeval *);
# 1247 "./perl.h" 2






# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/times.h" 1 3
# 82 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/times.h" 3
struct tms {
 clock_t tms_utime;
 clock_t tms_stime;
 clock_t tms_cutime;
 clock_t tms_cstime;
};



clock_t times(struct tms *);
# 1254 "./perl.h" 2






# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/errno.h" 1 3
# 23 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/errno.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/errno.h" 1 3
# 81 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/errno.h" 3
extern int * __error(void);
# 24 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/errno.h" 2 3
# 1261 "./perl.h" 2
# 1291 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netdb.h" 1 3
# 101 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netdb.h" 3
extern int h_errno;
# 112 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netdb.h" 3
struct hostent {
 char *h_name;
 char **h_aliases;
 int h_addrtype;
 int h_length;
 char **h_addr_list;



};





struct netent {
 char *n_name;
 char **n_aliases;
 int n_addrtype;
 uint32_t n_net;
};

struct servent {
 char *s_name;
 char **s_aliases;
 int s_port;
 char *s_proto;
};

struct protoent {
 char *p_name;
 char **p_aliases;
 int p_proto;
};

struct addrinfo {
 int ai_flags;
 int ai_family;
 int ai_socktype;
 int ai_protocol;
 socklen_t ai_addrlen;
 char *ai_canonname;
 struct sockaddr *ai_addr;
 struct addrinfo *ai_next;
};


struct rpcent {
        char *r_name;
        char **r_aliases;
        int r_number;
};
# 264 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/netdb.h" 3
void endhostent(void);
void endnetent(void);
void endprotoent(void);
void endservent(void);

void freeaddrinfo(struct addrinfo *);
const char *gai_strerror(int);
int getaddrinfo(const char * restrict, const char * restrict,
       const struct addrinfo * restrict,
       struct addrinfo ** restrict);
struct hostent *gethostbyaddr(const void *, socklen_t, int);
struct hostent *gethostbyname(const char *);
struct hostent *gethostent(void);
int getnameinfo(const struct sockaddr * restrict, socklen_t,
         char * restrict, socklen_t, char * restrict,
         socklen_t, int);
struct netent *getnetbyaddr(uint32_t, int);
struct netent *getnetbyname(const char *);
struct netent *getnetent(void);
struct protoent *getprotobyname(const char *);
struct protoent *getprotobynumber(int);
struct protoent *getprotoent(void);
struct servent *getservbyname(const char *, const char *);
struct servent *getservbyport(int, const char *);
struct servent *getservent(void);
void sethostent(int);

void setnetent(int);
void setprotoent(int);
void setservent(int);


void freehostent(struct hostent *);
struct hostent *gethostbyname2(const char *, int);
struct hostent *getipnodebyaddr(const void *, size_t, int, int *);
struct hostent *getipnodebyname(const char *, int, int, int *);
struct rpcent *getrpcbyname(const char *name);

struct rpcent *getrpcbynumber(int number);



struct rpcent *getrpcent(void);
void setrpcent(int stayopen);
void endrpcent(void);
void herror(const char *);
const char *hstrerror(int);
int innetgr(const char *, const char *, const char *, const char *);
int getnetgrent(char **, char **, char **);
void endnetgrent(void);
void setnetgrent(const char *);
# 1292 "./perl.h" 2
# 1430 "./perl.h"
 char *strerror (int);
# 1449 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ioctl.h" 1 3
# 72 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ioctl.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ttycom.h" 1 3
# 72 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ttycom.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ioccom.h" 1 3
# 73 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ttycom.h" 2 3
# 82 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ttycom.h" 3
struct winsize {
 unsigned short ws_row;
 unsigned short ws_col;
 unsigned short ws_xpixel;
 unsigned short ws_ypixel;
};
# 73 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ioctl.h" 2 3






struct ttysize {
 unsigned short ts_lines;
 unsigned short ts_cols;
 unsigned short ts_xxx;
 unsigned short ts_yyy;
};






# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/filio.h" 1 3
# 91 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ioctl.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sockio.h" 1 3
# 92 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ioctl.h" 2 3






int ioctl(int, unsigned long, ...);
# 1450 "./perl.h" 2
# 1478 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/dirent.h" 1 3
# 65 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/dirent.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/dirent.h" 1 3
# 86 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/dirent.h" 3
#pragma pack(4)
# 98 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/dirent.h" 3
#pragma pack()
# 112 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/dirent.h" 3
struct dirent { __uint64_t d_ino; __uint64_t d_seekoff; __uint16_t d_reclen; __uint16_t d_namlen; __uint8_t d_type; char d_name[1024]; };
# 66 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/dirent.h" 2 3




struct _telldir;


typedef struct {
 int __dd_fd;
 long __dd_loc;
 long __dd_size;
 char *__dd_buf;
 int __dd_len;
 long __dd_seek;
 __attribute__((__unused__)) long __padding;
 int __dd_flags;
 __darwin_pthread_mutex_t __dd_lock;
 struct _telldir *__dd_td;
} DIR;
# 105 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/dirent.h" 3
int closedir(DIR *) __asm("_" "closedir" );

DIR *opendir(const char *) __asm("_" "opendir" "$INODE64" );

struct dirent *readdir(DIR *) __asm("_" "readdir" "$INODE64");
int readdir_r(DIR *, struct dirent *, struct dirent **) __asm("_" "readdir_r" "$INODE64");

void rewinddir(DIR *) __asm("_" "rewinddir" "$INODE64" );

void seekdir(DIR *, long) __asm("_" "seekdir" "$INODE64" );

long telldir(DIR *) __asm("_" "telldir" "$INODE64" );
# 128 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/dirent.h" 3
__attribute__((availability(macosx,introduced=10.10)))
DIR *fdopendir(int) __asm("_" "fdopendir" "$INODE64" );

int alphasort(const struct dirent **, const struct dirent **) __asm("_" "alphasort" "$INODE64");
# 146 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/dirent.h" 3
int dirfd(DIR *dirp) __attribute__((availability(macosx,introduced=10.8)));


int scandir(const char *, struct dirent ***,
    int (*)(const struct dirent *), int (*)(const struct dirent **, const struct dirent **)) __asm("_" "scandir" "$INODE64");







int scandir_b(const char *, struct dirent ***,
    int (^)(const struct dirent *) __attribute__((__noescape__)),
    int (^)(const struct dirent **, const struct dirent **) __attribute__((__noescape__)))
    __asm("_" "scandir_b" "$INODE64") __attribute__((availability(macosx,introduced=10.6)));
# 171 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/dirent.h" 3
int getdirentries(int, char *, int, long *)






      __asm("_getdirentries_is_not_available_when_64_bit_inodes_are_in_effect")



;

DIR *__opendir2(const char *, int) __asm("_" "__opendir2" "$INODE64" );
# 1479 "./perl.h" 2
# 1740 "./perl.h"
typedef long IV;
typedef unsigned long UV;
# 1883 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/float.h" 1 3
# 1884 "./perl.h" 2
# 1949 "./perl.h"
typedef double NV;
# 2423 "./perl.h"
struct RExC_state_t;
struct _reg_trie_data;

typedef size_t STRLEN;






typedef struct op OP;
typedef struct cop COP;
typedef struct unop UNOP;
typedef struct binop BINOP;
typedef struct listop LISTOP;
typedef struct logop LOGOP;
typedef struct pmop PMOP;
typedef struct svop SVOP;
typedef struct padop PADOP;
typedef struct pvop PVOP;
typedef struct loop LOOP;






typedef struct block_hooks BHK;
typedef struct custom_op XOP;

typedef struct interpreter PerlInterpreter;







typedef struct sv SV;
typedef struct av AV;
typedef struct hv HV;
typedef struct cv CV;
typedef struct p5rx REGEXP;
typedef struct gp GP;
typedef struct gv GV;
typedef struct io IO;
typedef struct context PERL_CONTEXT;
typedef struct block BLOCK;

typedef struct magic MAGIC;
typedef struct xpv XPV;
typedef struct xpviv XPVIV;
typedef struct xpvuv XPVUV;
typedef struct xpvnv XPVNV;
typedef struct xpvmg XPVMG;
typedef struct xpvlv XPVLV;
typedef struct xpvav XPVAV;
typedef struct xpvhv XPVHV;
typedef struct xpvgv XPVGV;
typedef struct xpvcv XPVCV;
typedef struct xpvbm XPVBM;
typedef struct xpvfm XPVFM;
typedef struct xpvio XPVIO;
typedef struct mgvtbl MGVTBL;
typedef union any ANY;
typedef struct ptr_tbl_ent PTR_TBL_ENT_t;
typedef struct ptr_tbl PTR_TBL_t;
typedef struct clone_params CLONE_PARAMS;



typedef struct padlist PADLIST;
typedef AV PAD;
typedef AV PADNAMELIST;
typedef SV PADNAME;
# 2515 "./perl.h"
# 1 "./handy.h" 1
# 73 "./handy.h"
# 1 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/stdbool.h" 1 3
# 74 "./handy.h" 2
# 169 "./handy.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/inttypes.h" 1 3
# 227 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/inttypes.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_wchar_t.h" 1 3
# 228 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/inttypes.h" 2 3






__attribute__((availability(macosx,introduced=10.4)))
extern intmax_t
imaxabs(intmax_t j);


typedef struct {
 intmax_t quot;
 intmax_t rem;
} imaxdiv_t;

__attribute__((availability(macosx,introduced=10.4)))
extern imaxdiv_t
imaxdiv(intmax_t __numer, intmax_t __denom);


__attribute__((availability(macosx,introduced=10.4)))
extern intmax_t
strtoimax(const char * restrict __nptr,
   char ** restrict __endptr,
   int __base);

__attribute__((availability(macosx,introduced=10.4)))
extern uintmax_t
strtoumax(const char * restrict __nptr,
   char ** restrict __endptr,
   int __base);


__attribute__((availability(macosx,introduced=10.4)))
extern intmax_t
wcstoimax(const wchar_t * restrict __nptr,
   wchar_t ** restrict __endptr,
   int __base);

__attribute__((availability(macosx,introduced=10.4)))
extern uintmax_t
wcstoumax(const wchar_t * restrict __nptr,
   wchar_t ** restrict __endptr,
   int __base);
# 170 "./handy.h" 2
# 180 "./handy.h"
typedef signed char I8;
typedef unsigned char U8;
typedef short I16;
typedef unsigned short U16;
typedef int I32;
typedef unsigned int U32;
# 874 "./handy.h"
extern const U32 PL_charclass[];
# 1378 "./handy.h"
typedef U32 line_t;
# 2516 "./perl.h" 2
# 2661 "./perl.h"
# 1 "./unixish.h" 1
# 106 "./unixish.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/signal.h" 1 3
# 69 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/signal.h" 3
extern const char *const sys_signame[32];
extern const char *const sys_siglist[32];



int raise(int);




void (* _Nullable bsd_signal(int, void (* _Nullable)(int)))(int);
int kill(pid_t, int) __asm("_" "kill" );
int killpg(pid_t, int) __asm("_" "killpg" );
int pthread_kill(pthread_t, int);
int pthread_sigmask(int, const sigset_t *, sigset_t *) __asm("_" "pthread_sigmask" );
int sigaction(int, const struct sigaction * restrict,
     struct sigaction * restrict);
int sigaddset(sigset_t *, int);
int sigaltstack(const stack_t * restrict, stack_t * restrict) __asm("_" "sigaltstack" ) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int sigdelset(sigset_t *, int);
int sigemptyset(sigset_t *);
int sigfillset(sigset_t *);
int sighold(int);
int sigignore(int);
int siginterrupt(int, int);
int sigismember(const sigset_t *, int);
int sigpause(int) __asm("_" "sigpause" );
int sigpending(sigset_t *);
int sigprocmask(int, const sigset_t * restrict, sigset_t * restrict);
int sigrelse(int);
void (* _Nullable sigset(int, void (* _Nullable)(int)))(int);
int sigsuspend(const sigset_t *) __asm("_" "sigsuspend" );
int sigwait(const sigset_t * restrict, int * restrict) __asm("_" "sigwait" );

void psignal(unsigned int, const char *);
int sigblock(int);
int sigsetmask(int);
int sigvec(int, struct sigvec *, struct sigvec *);






inline __attribute__ ((__always_inline__)) int
__sigbits(int __signo)
{
    return __signo > 32 ? 0 : (1 << (__signo - 1));
}
# 107 "./unixish.h" 2
# 2662 "./perl.h" 2
# 2887 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread.h" 1 3
# 57 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/pthread_impl.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/pthread_impl.h" 3
#pragma clang assume_nonnull begin
#pragma clang assume_nonnull end
# 58 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread.h" 2 3

# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/sched.h" 1 3
# 35 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/sched.h" 3
struct sched_param { int sched_priority; char __opaque[4]; };


extern int sched_yield(void);
extern int sched_get_priority_min(int);
extern int sched_get_priority_max(int);
# 60 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread.h" 2 3
# 73 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/qos.h" 1 3
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/qos.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/qos.h" 1 3
# 130 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/qos.h" 3
enum { QOS_CLASS_USER_INTERACTIVE __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x21, QOS_CLASS_USER_INITIATED __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x19, QOS_CLASS_DEFAULT __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x15, QOS_CLASS_UTILITY __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x11, QOS_CLASS_BACKGROUND __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x09, QOS_CLASS_UNSPECIFIED __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x00, }; typedef unsigned int qos_class_t;
# 170 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/qos.h" 3
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
qos_class_t
qos_class_self(void);
# 192 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/qos.h" 3
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
qos_class_t
qos_class_main(void);
# 35 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/qos.h" 2 3




#pragma clang assume_nonnull begin
# 81 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/qos.h" 3
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
int
pthread_attr_set_qos_class_np(pthread_attr_t *__attr,
  qos_class_t __qos_class, int __relative_priority);
# 112 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/qos.h" 3
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
int
pthread_attr_get_qos_class_np(pthread_attr_t * restrict __attr,
  qos_class_t * _Nullable restrict __qos_class,
  int * _Nullable restrict __relative_priority);
# 153 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/qos.h" 3
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
int
pthread_set_qos_class_self_np(qos_class_t __qos_class,
  int __relative_priority);
# 184 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/qos.h" 3
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
int
pthread_get_qos_class_np(pthread_t __pthread,
  qos_class_t * _Nullable restrict __qos_class,
  int * _Nullable restrict __relative_priority);
# 211 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/qos.h" 3
typedef struct pthread_override_s* pthread_override_t;
# 263 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/qos.h" 3
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
pthread_override_t
pthread_override_qos_class_start_np(pthread_t __pthread,
  qos_class_t __qos_class, int __relative_priority);
# 291 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread/qos.h" 3
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
int
pthread_override_qos_class_end_np(pthread_override_t __override);
#pragma clang assume_nonnull end
# 74 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread.h" 2 3



# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_mach_port_t.h" 1 3
# 50 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_mach_port_t.h" 3
typedef __darwin_mach_port_t mach_port_t;
# 78 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread.h" 2 3
# 106 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread.h" 3
#pragma clang assume_nonnull begin
# 221 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pthread.h" 3
__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_atfork(void (* _Nullable)(void), void (* _Nullable)(void),
  void (* _Nullable)(void));

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_destroy(pthread_attr_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_getdetachstate(const pthread_attr_t *, int *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_getguardsize(const pthread_attr_t * restrict, size_t * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_getinheritsched(const pthread_attr_t * restrict, int * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_getschedparam(const pthread_attr_t * restrict,
  struct sched_param * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_getschedpolicy(const pthread_attr_t * restrict, int * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_getscope(const pthread_attr_t * restrict, int * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_getstack(const pthread_attr_t * restrict,
  void * _Nullable * _Nonnull restrict, size_t * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_getstackaddr(const pthread_attr_t * restrict,
  void * _Nullable * _Nonnull restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_getstacksize(const pthread_attr_t * restrict, size_t * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_init(pthread_attr_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_setdetachstate(pthread_attr_t *, int);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_setguardsize(pthread_attr_t *, size_t);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_setinheritsched(pthread_attr_t *, int);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_setschedparam(pthread_attr_t * restrict,
  const struct sched_param * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_setschedpolicy(pthread_attr_t *, int);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_setscope(pthread_attr_t *, int);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_setstack(pthread_attr_t *, void *, size_t);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_setstackaddr(pthread_attr_t *, void *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_attr_setstacksize(pthread_attr_t *, size_t);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_cancel(pthread_t) __asm("_" "pthread_cancel" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_cond_broadcast(pthread_cond_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_cond_destroy(pthread_cond_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_cond_init(
  pthread_cond_t * restrict,
  const pthread_condattr_t * _Nullable restrict)
  __asm("_" "pthread_cond_init" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_cond_signal(pthread_cond_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_cond_timedwait(
  pthread_cond_t * restrict, pthread_mutex_t * restrict,
  const struct timespec * _Nullable restrict)
  __asm("_" "pthread_cond_timedwait" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_cond_wait(pthread_cond_t * restrict,
  pthread_mutex_t * restrict) __asm("_" "pthread_cond_wait" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_condattr_destroy(pthread_condattr_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_condattr_init(pthread_condattr_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_condattr_getpshared(const pthread_condattr_t * restrict,
  int * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_condattr_setpshared(pthread_condattr_t *, int);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))

int pthread_create(pthread_t _Nullable * _Nonnull restrict,
  const pthread_attr_t * _Nullable restrict,
  void * _Nullable (* _Nonnull)(void * _Nullable),
  void * _Nullable restrict);






__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_detach(pthread_t);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_equal(pthread_t _Nullable, pthread_t _Nullable);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
void pthread_exit(void * _Nullable) __attribute__((__noreturn__));

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_getconcurrency(void);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_getschedparam(pthread_t , int * _Nullable restrict,
  struct sched_param * _Nullable restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
void* _Nullable pthread_getspecific(pthread_key_t);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_join(pthread_t , void * _Nullable * _Nullable)
  __asm("_" "pthread_join" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_key_create(pthread_key_t *, void (* _Nullable)(void *));

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_key_delete(pthread_key_t);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutex_destroy(pthread_mutex_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutex_getprioceiling(const pthread_mutex_t * restrict,
  int * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutex_init(pthread_mutex_t * restrict,
  const pthread_mutexattr_t * _Nullable restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutex_lock(pthread_mutex_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutex_setprioceiling(pthread_mutex_t * restrict, int,
  int * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutex_trylock(pthread_mutex_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutex_unlock(pthread_mutex_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutexattr_destroy(pthread_mutexattr_t *) __asm("_" "pthread_mutexattr_destroy" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t * restrict,
  int * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutexattr_getprotocol(const pthread_mutexattr_t * restrict,
  int * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutexattr_getpshared(const pthread_mutexattr_t * restrict,
  int * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutexattr_gettype(const pthread_mutexattr_t * restrict,
  int * restrict);

__attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3))) __attribute__((availability(watchos,introduced=4.3))) __attribute__((availability(tvos,introduced=11.3)))
int pthread_mutexattr_getpolicy_np(const pthread_mutexattr_t * restrict,
  int * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutexattr_init(pthread_mutexattr_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *, int);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutexattr_setprotocol(pthread_mutexattr_t *, int);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutexattr_setpshared(pthread_mutexattr_t *, int);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_mutexattr_settype(pthread_mutexattr_t *, int);

__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
int pthread_mutexattr_setpolicy_np(pthread_mutexattr_t *, int);

__attribute__((availability(swift,unavailable,message="Use lazily initialized globals instead")))
__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_once(pthread_once_t *, void (* _Nonnull)(void));

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_rwlock_destroy(pthread_rwlock_t * ) __asm("_" "pthread_rwlock_destroy" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_rwlock_init(pthread_rwlock_t * restrict,
  const pthread_rwlockattr_t * _Nullable restrict)
  __asm("_" "pthread_rwlock_init" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_rwlock_rdlock(pthread_rwlock_t *) __asm("_" "pthread_rwlock_rdlock" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_rwlock_tryrdlock(pthread_rwlock_t *) __asm("_" "pthread_rwlock_tryrdlock" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_rwlock_trywrlock(pthread_rwlock_t *) __asm("_" "pthread_rwlock_trywrlock" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_rwlock_wrlock(pthread_rwlock_t *) __asm("_" "pthread_rwlock_wrlock" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_rwlock_unlock(pthread_rwlock_t *) __asm("_" "pthread_rwlock_unlock" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_rwlockattr_destroy(pthread_rwlockattr_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t * restrict,
  int * restrict);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_rwlockattr_init(pthread_rwlockattr_t *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *, int);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
pthread_t pthread_self(void);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_setcancelstate(int , int * _Nullable)
  __asm("_" "pthread_setcancelstate" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_setcanceltype(int , int * _Nullable)
  __asm("_" "pthread_setcanceltype" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_setconcurrency(int);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_setschedparam(pthread_t, int, const struct sched_param *);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_setspecific(pthread_key_t , const void * _Nullable);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
void pthread_testcancel(void) __asm("_" "pthread_testcancel" );




__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_is_threaded_np(void);

__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.2)))
int pthread_threadid_np(pthread_t _Nullable,__uint64_t* _Nullable);


__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.2)))
int pthread_getname_np(pthread_t,char*,size_t);

__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.2)))
int pthread_setname_np(const char*);


__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_main_np(void);


__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
mach_port_t pthread_mach_thread_np(pthread_t);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
size_t pthread_get_stacksize_np(pthread_t);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
void* pthread_get_stackaddr_np(pthread_t);


__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_cond_signal_thread_np(pthread_cond_t *, pthread_t _Nullable);


__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_cond_timedwait_relative_np(pthread_cond_t *, pthread_mutex_t *,
  const struct timespec * _Nullable);


__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))

int pthread_create_suspended_np(
  pthread_t _Nullable * _Nonnull, const pthread_attr_t * _Nullable,
  void * _Nullable (* _Nonnull)(void * _Nullable), void * _Nullable);





__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_kill(pthread_t, int);

__attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0)))
_Nullable pthread_t pthread_from_mach_thread_np(mach_port_t);

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
int pthread_sigmask(int, const sigset_t * _Nullable, sigset_t * _Nullable)
  __asm("_" "pthread_sigmask" );

__attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=2.0)))
void pthread_yield_np(void);
#pragma clang assume_nonnull end
# 2888 "./perl.h" 2

typedef pthread_t perl_os_thread;
typedef pthread_mutex_t perl_mutex;
typedef pthread_cond_t perl_cond;
typedef pthread_key_t perl_key;
# 3385 "./perl.h"
union any {
    void* any_ptr;
    I32 any_i32;
    IV any_iv;
    UV any_uv;
    long any_long;
    _Bool any_bool;
    void (*any_dptr) (void*);
    void (*any_dxptr) (PerlInterpreter* my_perl __attribute__((unused)), void*);
};


typedef I32 (*filter_t) (PerlInterpreter* my_perl __attribute__((unused)), int, SV *, int);
# 3426 "./perl.h"
# 1 "./iperlsys.h" 1
# 51 "./iperlsys.h"
# 1 "./perlio.h" 1
# 65 "./perlio.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 1 3
# 64 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_stdio.h" 1 3
# 75 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_stdio.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_va_list.h" 1 3
# 32 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_va_list.h" 3
typedef __darwin_va_list va_list;
# 76 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_stdio.h" 2 3




# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/stdio.h" 1 3
# 40 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/stdio.h" 3
int renameat(int, const char *, int, const char *) __attribute__((availability(macosx,introduced=10.10)));






int renamex_np(const char *, const char *, unsigned int) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int renameatx_np(int, const char *, int, const char *, unsigned int) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
# 81 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_stdio.h" 2 3

typedef __darwin_off_t fpos_t;
# 93 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_stdio.h" 3
struct __sbuf {
 unsigned char *_base;
 int _size;
};


struct __sFILEX;
# 127 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_stdio.h" 3
typedef struct __sFILE {
 unsigned char *_p;
 int _r;
 int _w;
 short _flags;
 short _file;
 struct __sbuf _bf;
 int _lbfsize;


 void *_cookie;
 int (* _Nullable _close)(void *);
 int (* _Nullable _read) (void *, char *, int);
 fpos_t (* _Nullable _seek) (void *, fpos_t, int);
 int (* _Nullable _write)(void *, const char *, int);


 struct __sbuf _ub;
 struct __sFILEX *_extra;
 int _ur;


 unsigned char _ubuf[3];
 unsigned char _nbuf[1];


 struct __sbuf _lb;


 int _blksize;
 fpos_t _offset;
} FILE;
# 65 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 2 3



extern FILE *__stdinp;
extern FILE *__stdoutp;
extern FILE *__stderrp;
# 143 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 3
void clearerr(FILE *);
int fclose(FILE *);
int feof(FILE *);
int ferror(FILE *);
int fflush(FILE *);
int fgetc(FILE *);
int fgetpos(FILE * restrict, fpos_t *);
char *fgets(char * restrict, int, FILE *);



FILE *fopen(const char * restrict __filename, const char * restrict __mode) __asm("_" "fopen" );

int fprintf(FILE * restrict, const char * restrict, ...) __attribute__((__format__ (__printf__, 2, 3)));
int fputc(int, FILE *);
int fputs(const char * restrict, FILE * restrict) __asm("_" "fputs" );
size_t fread(void * restrict __ptr, size_t __size, size_t __nitems, FILE * restrict __stream);
FILE *freopen(const char * restrict, const char * restrict,
                 FILE * restrict) __asm("_" "freopen" );
int fscanf(FILE * restrict, const char * restrict, ...) __attribute__((__format__ (__scanf__, 2, 3)));
int fseek(FILE *, long, int);
int fsetpos(FILE *, const fpos_t *);
long ftell(FILE *);
size_t fwrite(const void * restrict __ptr, size_t __size, size_t __nitems, FILE * restrict __stream) __asm("_" "fwrite" );
int getc(FILE *);
int getchar(void);
char *gets(char *);
void perror(const char *) __attribute__((__cold__));
int printf(const char * restrict, ...) __attribute__((__format__ (__printf__, 1, 2)));
int putc(int, FILE *);
int putchar(int);
int puts(const char *);
int remove(const char *);
int rename (const char *__old, const char *__new);
void rewind(FILE *);
int scanf(const char * restrict, ...) __attribute__((__format__ (__scanf__, 1, 2)));
void setbuf(FILE * restrict, char * restrict);
int setvbuf(FILE * restrict, char * restrict, int, size_t);
int sprintf(char * restrict, const char * restrict, ...) __attribute__((__format__ (__printf__, 2, 3))) __attribute__((__availability__(swift, unavailable, message="Use snprintf instead.")));
int sscanf(const char * restrict, const char * restrict, ...) __attribute__((__format__ (__scanf__, 2, 3)));
FILE *tmpfile(void);

__attribute__((__availability__(swift, unavailable, message="Use mkstemp(3) instead.")))

__attribute__((__deprecated__("This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tmpnam(3), it is highly recommended that you use mkstemp(3) instead.")))

char *tmpnam(char *);
int ungetc(int, FILE *);
int vfprintf(FILE * restrict, const char * restrict, va_list) __attribute__((__format__ (__printf__, 2, 0)));
int vprintf(const char * restrict, va_list) __attribute__((__format__ (__printf__, 1, 0)));
int vsprintf(char * restrict, const char * restrict, va_list) __attribute__((__format__ (__printf__, 2, 0))) __attribute__((__availability__(swift, unavailable, message="Use vsnprintf instead.")));
# 211 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 3
FILE *fdopen(int, const char *) __asm("_" "fdopen" );

int fileno(FILE *);
# 229 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 3
int pclose(FILE *) __attribute__((__availability__(swift, unavailable, message="Use posix_spawn APIs or NSTask instead.")));



FILE *popen(const char *, const char *) __asm("_" "popen" ) __attribute__((__availability__(swift, unavailable, message="Use posix_spawn APIs or NSTask instead.")));
# 250 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 3
int __srget(FILE *);
int __svfscanf(FILE *, const char *, va_list) __attribute__((__format__ (__scanf__, 2, 0)));
int __swbuf(int, FILE *);
# 261 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 3
inline __attribute__ ((__always_inline__)) int __sputc(int _c, FILE *_p) {
 if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
  return (*_p->_p++ = _c);
 else
  return (__swbuf(_c, _p));
}
# 287 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 3
void flockfile(FILE *);
int ftrylockfile(FILE *);
void funlockfile(FILE *);
int getc_unlocked(FILE *);
int getchar_unlocked(void);
int putc_unlocked(int, FILE *);
int putchar_unlocked(int);



int getw(FILE *);
int putw(int, FILE *);


__attribute__((__availability__(swift, unavailable, message="Use mkstemp(3) instead.")))

__attribute__((__deprecated__("This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.")))

char *tempnam(const char *__dir, const char *__prefix) __asm("_" "tempnam" );
# 328 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 3
int fseeko(FILE * __stream, off_t __offset, int __whence);
off_t ftello(FILE * __stream);





int snprintf(char * restrict __str, size_t __size, const char * restrict __format, ...) __attribute__((__format__ (__printf__, 3, 4)));
int vfscanf(FILE * restrict __stream, const char * restrict __format, va_list) __attribute__((__format__ (__scanf__, 2, 0)));
int vscanf(const char * restrict __format, va_list) __attribute__((__format__ (__scanf__, 1, 0)));
int vsnprintf(char * restrict __str, size_t __size, const char * restrict __format, va_list) __attribute__((__format__ (__printf__, 3, 0)));
int vsscanf(const char * restrict __str, const char * restrict __format, va_list) __attribute__((__format__ (__scanf__, 2, 0)));
# 353 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 3
int dprintf(int, const char * restrict, ...) __attribute__((__format__ (__printf__, 2, 3))) __attribute__((availability(macosx,introduced=10.7)));
int vdprintf(int, const char * restrict, va_list) __attribute__((__format__ (__printf__, 2, 0))) __attribute__((availability(macosx,introduced=10.7)));
ssize_t getdelim(char ** restrict __linep, size_t * restrict __linecapp, int __delimiter, FILE * restrict __stream) __attribute__((availability(macosx,introduced=10.7)));
ssize_t getline(char ** restrict __linep, size_t * restrict __linecapp, FILE * restrict __stream) __attribute__((availability(macosx,introduced=10.7)));
FILE *fmemopen(void * restrict __buf, size_t __size, const char * restrict __mode) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
FILE *open_memstream(char **__bufp, size_t *__sizep) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
# 368 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 3
extern const int sys_nerr;
extern const char *const sys_errlist[];

int asprintf(char ** restrict, const char * restrict, ...) __attribute__((__format__ (__printf__, 2, 3)));
char *ctermid_r(char *);
char *fgetln(FILE *, size_t *);
const char *fmtcheck(const char *, const char *);
int fpurge(FILE *);
void setbuffer(FILE *, char *, int);
int setlinebuf(FILE *);
int vasprintf(char ** restrict, const char * restrict, va_list) __attribute__((__format__ (__printf__, 2, 0)));
FILE *zopen(const char *, const char *, int);





FILE *funopen(const void *,
                 int (* _Nullable)(void *, char *, int),
                 int (* _Nullable)(void *, const char *, int),
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                 int (* _Nullable)(void *));
# 424 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h" 1 3
# 43 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h" 3
extern int __sprintf_chk (char * restrict, int, size_t,
     const char * restrict, ...);
# 54 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h" 3
extern int __snprintf_chk (char * restrict, size_t, int, size_t,
      const char * restrict, ...);
# 64 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h" 3
extern int __vsprintf_chk (char * restrict, int, size_t,
      const char * restrict, va_list);
# 74 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h" 3
extern int __vsnprintf_chk (char * restrict, size_t, int, size_t,
       const char * restrict, va_list);
# 425 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/stdio.h" 2 3
# 66 "./perlio.h" 2
# 94 "./perlio.h"
typedef struct _PerlIO PerlIOl;
typedef struct _PerlIO_funcs PerlIO_funcs;
typedef PerlIOl *PerlIO;
# 112 "./perlio.h"
extern void PerlIO_define_layer(PerlInterpreter* my_perl __attribute__((unused)), PerlIO_funcs *tab);
extern PerlIO_funcs *PerlIO_find_layer(PerlInterpreter* my_perl __attribute__((unused)), const char *name,
                                              STRLEN len,
                  int load);
extern PerlIO *PerlIO_push(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f, PerlIO_funcs *tab,
             const char *mode, SV *arg);
extern void PerlIO_pop(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
extern AV* PerlIO_get_layers(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
extern void PerlIO_clone(PerlInterpreter* my_perl __attribute__((unused)), PerlInterpreter *proto,
                                CLONE_PARAMS *param);
# 218 "./perlio.h"
extern void PerlIO_init(PerlInterpreter* my_perl __attribute__((unused)));


extern int PerlIO_stdoutf(const char *, ...)
    __attribute__((format(__printf__,1,2)));


extern int PerlIO_puts(PerlIO *, const char *);


extern PerlIO *PerlIO_open(const char *, const char *);


extern PerlIO *PerlIO_openn(PerlInterpreter* my_perl __attribute__((unused)), const char *layers, const char *mode,
       int fd, int imode, int perm, PerlIO *old,
       int narg, SV **arg);


extern int PerlIO_eof(PerlIO *);


extern int PerlIO_error(PerlIO *);


extern void PerlIO_clearerr(PerlIO *);


extern int PerlIO_getc(PerlIO *);


extern int PerlIO_putc(PerlIO *, int);


extern int PerlIO_ungetc(PerlIO *, int);


extern PerlIO *PerlIO_fdopen(int, const char *);


extern PerlIO *PerlIO_importFILE(FILE *, const char *);


extern FILE *PerlIO_exportFILE(PerlIO *, const char *);


extern FILE *PerlIO_findFILE(PerlIO *);


extern void PerlIO_releaseFILE(PerlIO *, FILE *);


extern ssize_t PerlIO_read(PerlIO *, void *, size_t);


extern ssize_t PerlIO_unread(PerlIO *, const void *, size_t);


extern ssize_t PerlIO_write(PerlIO *, const void *, size_t);


extern void PerlIO_setlinebuf(PerlIO *);


extern int PerlIO_printf(PerlIO *, const char *, ...)
    __attribute__((format(__printf__,2,3)));


extern int PerlIO_sprintf(char *, int, const char *, ...)
    __attribute__((format(__printf__,3,4)));


extern int PerlIO_vprintf(PerlIO *, const char *, va_list);


extern off_t PerlIO_tell(PerlIO *);


extern int PerlIO_seek(PerlIO *, off_t, int);


extern void PerlIO_rewind(PerlIO *);


extern int PerlIO_has_base(PerlIO *);


extern int PerlIO_has_cntptr(PerlIO *);


extern int PerlIO_fast_gets(PerlIO *);


extern int PerlIO_canset_cnt(PerlIO *);


extern char *PerlIO_get_ptr(PerlIO *);


extern int PerlIO_get_cnt(PerlIO *);


extern void PerlIO_set_cnt(PerlIO *, int);


extern void PerlIO_set_ptrcnt(PerlIO *, char *, int);


extern char *PerlIO_get_base(PerlIO *);


extern int PerlIO_get_bufsiz(PerlIO *);


extern PerlIO *PerlIO_tmpfile(void);


extern PerlIO *PerlIO_stdin(void);


extern PerlIO *PerlIO_stdout(void);


extern PerlIO *PerlIO_stderr(void);


extern int PerlIO_getpos(PerlIO *, SV *);


extern int PerlIO_setpos(PerlIO *, SV *);


extern PerlIO *PerlIO_fdupopen(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *, CLONE_PARAMS *, int);


extern char *PerlIO_modestr(PerlIO *, char *buf);


extern int PerlIO_isutf8(PerlIO *);


extern int PerlIO_apply_layers(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f, const char *mode,
          const char *names);


extern int PerlIO_binmode(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f, int iotype, int omode,
       const char *names);


extern char *PerlIO_getname(PerlIO *, char *);


extern void PerlIO_destruct(PerlInterpreter* my_perl __attribute__((unused)));

extern int PerlIO_intmode2str(int rawmode, char *mode, int *writing);


extern void PerlIO_cleanup(PerlInterpreter* my_perl __attribute__((unused)));

extern void PerlIO_debug(const char *fmt, ...)
    __attribute__((format(__printf__,1,2)));
typedef struct PerlIO_list_s PerlIO_list_t;
# 52 "./iperlsys.h" 2



typedef void (*Sighandler_t) (int, siginfo_t*, void*);
# 3427 "./perl.h" 2
# 3452 "./perl.h"
# 1 "./perly.h" 1
# 240 "./perly.h"
typedef union YYSTYPE
{
    I32 ival;

    char *pval;
    OP *opval;
    GV *gvval;




    char *p_tkval;
    I32 i_tkval;




}

 YYSTYPE;
# 3453 "./perl.h" 2
# 3473 "./perl.h"
# 1 "./sv.h" 1
# 121 "./sv.h"
typedef enum {
 SVt_NULL,
 SVt_BIND,
 SVt_IV,
 SVt_NV,

 SVt_PV,
 SVt_PVIV,
 SVt_PVNV,
 SVt_PVMG,
 SVt_REGEXP,

 SVt_PVGV,
 SVt_PVLV,
 SVt_PVAV,
 SVt_PVHV,
 SVt_PVCV,
 SVt_PVFM,
 SVt_PVIO,
 SVt_LAST
} svtype;
# 169 "./sv.h"
typedef struct he HE;
typedef struct hek HEK;
# 194 "./sv.h"
struct sv {
    void* sv_any; U32 sv_refcnt; U32 sv_flags;
    union { char* svu_pv; IV svu_iv; UV svu_uv; SV* svu_rv; struct regexp* svu_rx; SV** svu_array; HE** svu_hash; GP* svu_gp; PerlIO *svu_fp; } sv_u;
# 205 "./sv.h"
};

struct gv {
    XPVGV* sv_any; U32 sv_refcnt; U32 sv_flags;
    union { char* svu_pv; IV svu_iv; UV svu_uv; SV* svu_rv; struct regexp* svu_rx; SV** svu_array; HE** svu_hash; GP* svu_gp; PerlIO *svu_fp; } sv_u;
};

struct cv {
    XPVCV* sv_any; U32 sv_refcnt; U32 sv_flags;
    union { char* svu_pv; IV svu_iv; UV svu_uv; SV* svu_rv; struct regexp* svu_rx; SV** svu_array; HE** svu_hash; GP* svu_gp; PerlIO *svu_fp; } sv_u;
};

struct av {
    XPVAV* sv_any; U32 sv_refcnt; U32 sv_flags;
    union { char* svu_pv; IV svu_iv; UV svu_uv; SV* svu_rv; struct regexp* svu_rx; SV** svu_array; HE** svu_hash; GP* svu_gp; PerlIO *svu_fp; } sv_u;
};

struct hv {
    XPVHV* sv_any; U32 sv_refcnt; U32 sv_flags;
    union { char* svu_pv; IV svu_iv; UV svu_uv; SV* svu_rv; struct regexp* svu_rx; SV** svu_array; HE** svu_hash; GP* svu_gp; PerlIO *svu_fp; } sv_u;
};

struct io {
    XPVIO* sv_any; U32 sv_refcnt; U32 sv_flags;
    union { char* svu_pv; IV svu_iv; UV svu_uv; SV* svu_rv; struct regexp* svu_rx; SV** svu_array; HE** svu_hash; GP* svu_gp; PerlIO *svu_fp; } sv_u;
};

struct p5rx {
    struct regexp* sv_any; U32 sv_refcnt; U32 sv_flags;
    union { char* svu_pv; IV svu_iv; UV svu_uv; SV* svu_rv; struct regexp* svu_rx; SV** svu_array; HE** svu_hash; GP* svu_gp; PerlIO *svu_fp; } sv_u;
};
# 459 "./sv.h"
union _xnvu {
    NV xnv_nv;
    HV * xgv_stash;
    struct {
 U32 xlow;
 U32 xhigh;
    } xpad_cop_seq;
    struct {
 I32 xbm_useful;
 U8 xbm_rare;
    } xbm_s;
};

union _xivu {
    IV xivu_iv;
    UV xivu_uv;
    HEK * xivu_namehek;
};

union _xmgu {
    MAGIC* xmg_magic;
    HV* xmg_ourstash;
    STRLEN xmg_hash_index;
};

struct xpv {
    HV* xmg_stash; union _xmgu xmg_u; STRLEN xpv_cur; union { STRLEN xpvlenu_len; char * xpvlenu_pv; } xpv_len_u;
};

struct xpviv {
    HV* xmg_stash; union _xmgu xmg_u; STRLEN xpv_cur; union { STRLEN xpvlenu_len; char * xpvlenu_pv; } xpv_len_u;
    union _xivu xiv_u;
};



struct xpvuv {
    HV* xmg_stash; union _xmgu xmg_u; STRLEN xpv_cur; union { STRLEN xpvlenu_len; char * xpvlenu_pv; } xpv_len_u;
    union _xivu xuv_u;
};



struct xpvnv {
    HV* xmg_stash; union _xmgu xmg_u; STRLEN xpv_cur; union { STRLEN xpvlenu_len; char * xpvlenu_pv; } xpv_len_u;
    union _xivu xiv_u;
    union _xnvu xnv_u;
};


struct xpvmg {
    HV* xmg_stash; union _xmgu xmg_u; STRLEN xpv_cur; union { STRLEN xpvlenu_len; char * xpvlenu_pv; } xpv_len_u;
    union _xivu xiv_u;
    union _xnvu xnv_u;
};

struct xpvlv {
    HV* xmg_stash; union _xmgu xmg_u; STRLEN xpv_cur; union { STRLEN xpvlenu_len; char * xpvlenu_pv; } xpv_len_u;
    union _xivu xiv_u;
    union _xnvu xnv_u;
    STRLEN xlv_targoff;
    STRLEN xlv_targlen;
    SV* xlv_targ;
    char xlv_type;

    char xlv_flags;
};



struct xpvgv {
    HV* xmg_stash; union _xmgu xmg_u; STRLEN xpv_cur; union { STRLEN xpvlenu_len; char * xpvlenu_pv; } xpv_len_u;
    union _xivu xiv_u;
    union _xnvu xnv_u;
};

typedef U16 cv_flags_t;
# 562 "./sv.h"
struct xpvfm {
    HV* xmg_stash; union _xmgu xmg_u; STRLEN xpv_cur; union { STRLEN xpvlenu_len; char * xpvlenu_pv; } xpv_len_u;
    HV * xcv_stash; union { OP * xcv_start; ANY xcv_xsubany; } xcv_start_u; union { OP * xcv_root; void (*xcv_xsub) (PerlInterpreter* my_perl __attribute__((unused)), CV*); } xcv_root_u; union { GV * xcv_gv; HEK * xcv_hek; } xcv_gv_u; char * xcv_file; PADLIST * xcv_padlist; CV * xcv_outside; U32 xcv_outside_seq; cv_flags_t xcv_flags; I32 xcv_depth;
};


struct xpvio {
    HV* xmg_stash; union _xmgu xmg_u; STRLEN xpv_cur; union { STRLEN xpvlenu_len; char * xpvlenu_pv; } xpv_len_u;
    union _xivu xiv_u;

    PerlIO * xio_ofp;
# 582 "./sv.h"
    union {
 DIR * xiou_dirp;
 void * xiou_any;
    } xio_dirpu;

    IV xio_page;
    IV xio_page_len;
    IV xio_lines_left;
    char * xio_top_name;
    GV * xio_top_gv;
    char * xio_fmt_name;
    GV * xio_fmt_gv;
    char * xio_bottom_name;
    GV * xio_bottom_gv;
    char xio_type;
    U8 xio_flags;
};
# 2135 "./sv.h"
struct clone_params {
  AV* stashes;
  UV flags;
  PerlInterpreter *proto_perl;
  PerlInterpreter *new_perl;
  AV *unreferenced;
};
# 3474 "./perl.h" 2
# 1 "./regexp.h" 1
# 21 "./regexp.h"
# 1 "./utf8.h" 1
# 100 "./utf8.h"
extern const unsigned char PL_utf8skip[];





# 1 "./regcharclass.h" 1
# 106 "./utf8.h" 2
# 1 "./unicode_constants.h" 1
# 107 "./utf8.h" 2
# 22 "./regexp.h" 2

struct regnode {
    U8 flags;
    U8 type;
    U16 next_off;
};

typedef struct regnode regnode;

struct reg_substr_data;

struct reg_data;

struct regexp_engine;
struct regexp;

struct reg_substr_datum {
    I32 min_offset;
    I32 max_offset;
    SV *substr;
    SV *utf8_substr;
    I32 end_shift;
};
struct reg_substr_data {
    struct reg_substr_datum data[3];
};
# 57 "./regexp.h"
typedef struct regexp_paren_pair {
    I32 start;
    I32 end;






    I32 start_tmp;
} regexp_paren_pair;
# 80 "./regexp.h"
struct reg_code_block {
    STRLEN start;
    STRLEN end;
    OP *block;
    REGEXP *src_regex;
};
# 138 "./regexp.h"
typedef struct regexp {
 HV* xmg_stash; union _xmgu xmg_u; STRLEN xpv_cur; union { STRLEN xpvlenu_len; char * xpvlenu_pv; } xpv_len_u;
 const struct regexp_engine* engine; REGEXP *mother_re; HV *paren_names; U32 extflags; I32 minlen; I32 minlenret; U32 gofs; struct reg_substr_data *substrs; U32 nparens; U32 intflags; void *pprivate; U32 lastparen; U32 lastcloseparen; regexp_paren_pair *offs; char *subbeg; I32 sublen; I32 suboffset; I32 subcoffset; unsigned pre_prefix:4; unsigned compflags:9; CV *qr_anoncv;
} regexp;




typedef struct re_scream_pos_data_s
{
    char **scream_olds;
    I32 *scream_pos;
} re_scream_pos_data;




typedef struct regexp_engine {
    REGEXP* (*comp) (PerlInterpreter* my_perl __attribute__((unused)), SV * const pattern, U32 flags);
    I32 (*exec) (PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, char* stringarg, char* strend,
                     char* strbeg, I32 minend, SV* screamer,
                     void* data, U32 flags);
    char* (*intuit) (PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, SV *sv, char *strpos,
                       char *strend, const U32 flags,
                       re_scream_pos_data *data);
    SV* (*checkstr) (PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx);
    void (*free) (PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx);
    void (*numbered_buff_FETCH) (PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, const I32 paren,
                                    SV * const sv);
    void (*numbered_buff_STORE) (PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, const I32 paren,
                                   SV const * const value);
    I32 (*numbered_buff_LENGTH) (PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, const SV * const sv,
                                    const I32 paren);
    SV* (*named_buff) (PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, SV * const key,
                           SV * const value, const U32 flags);
    SV* (*named_buff_iter) (PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, const SV * const lastkey,
                                const U32 flags);
    SV* (*qr_package)(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx);

    void* (*dupe) (PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, CLONE_PARAMS *param);

    REGEXP* (*op_comp) (PerlInterpreter* my_perl __attribute__((unused)), SV ** const patternp, int pat_count,
      OP *expr, const struct regexp_engine* eng,
      REGEXP *volatile old_re,
      _Bool *is_bare_re, U32 orig_rx_flags, U32 pm_flags);
} regexp_engine;
# 266 "./regexp.h"
# 1 "./op_reg_common.h" 1
# 43 "./op_reg_common.h"
typedef enum {
    REGEX_DEPENDS_CHARSET = 0,
    REGEX_LOCALE_CHARSET,
    REGEX_UNICODE_CHARSET,
    REGEX_ASCII_RESTRICTED_CHARSET,
    REGEX_ASCII_MORE_RESTRICTED_CHARSET
} regex_charset;







static __inline__ void
set_regex_charset(U32 * const flags, const regex_charset cs)
    __attribute__((nonnull(1)));

static __inline__ void
set_regex_charset(U32 * const flags, const regex_charset cs)
{



    *flags &= ~(7 << (((0)+5)));
    *flags |= (cs << ((0)+5));
}

static __inline__ regex_charset
get_regex_charset(const U32 flags)
    __attribute__((warn_unused_result));

static __inline__ regex_charset
get_regex_charset(const U32 flags)
{


    return (regex_charset) ((flags & (7 << (((0)+5)))) >> ((0)+5));
}
# 267 "./regexp.h" 2
# 355 "./regexp.h"
static __inline__ const char *
get_regex_charset_name(const U32 flags, STRLEN* const lenp)
    __attribute__((warn_unused_result));



static __inline__ const char *
get_regex_charset_name(const U32 flags, STRLEN* const lenp)
{




    *lenp = 1;
    switch (get_regex_charset(flags)) {
        case REGEX_DEPENDS_CHARSET: return "d";
        case REGEX_LOCALE_CHARSET: return "l";
        case REGEX_UNICODE_CHARSET: return "u";
 case REGEX_ASCII_RESTRICTED_CHARSET: return "a";
 case REGEX_ASCII_MORE_RESTRICTED_CHARSET:
     *lenp = 2;
     return "aa";
        default:
     return "?";
    }
}
# 577 "./regexp.h"
typedef struct {
    REGEXP *prog;
    char *bol;
    char *till;
    SV *sv;
    char *ganch;
    char *cutpoint;
    _Bool is_utf8_pat;
    _Bool warned;
} regmatch_info;
# 595 "./regexp.h"
typedef I32 CHECKPOINT;

typedef struct regmatch_state {
    int resume_state;
    char *locinput;

    union {




 struct {
     struct regmatch_state *prev_yes_state;
 } yes;




        struct {

     struct regmatch_state *prev_yes_state;
     U32 lastparen;
     U32 lastcloseparen;
     CHECKPOINT cp;

        } branchlike;

 struct {

     struct regmatch_state *prev_yes_state;
     U32 lastparen;
     U32 lastcloseparen;
     CHECKPOINT cp;

     regnode *next_branch;
 } branch;

 struct {

     struct regmatch_state *prev_yes_state;
     U32 lastparen;
     U32 lastcloseparen;
     CHECKPOINT cp;

     U32 accepted;
     _Bool longfold;
     U16 *jump;
     regnode *me;
     U8 *firstpos;
     U32 firstchars;
     U16 nextword;
     U16 topword;
 } trie;



 struct {

     struct regmatch_state *prev_yes_state;
     struct regmatch_state *prev_eval;
     struct regmatch_state *prev_curlyx;
     REGEXP *prev_rex;
     _Bool saved_utf8_pat;
     CHECKPOINT cp;
     CHECKPOINT lastcp;
     U32 close_paren;
     regnode *B;
 } eval;

 struct {

     struct regmatch_state *prev_yes_state;
     I32 wanted;
     I32 logical;
     regnode *me;
 } ifmatch;

 struct {

     struct regmatch_state *prev_yes_state;
     struct regmatch_state *prev_mark;
     SV* mark_name;
     char *mark_loc;
 } mark;

 struct {
     int val;
 } keeper;



 struct {

     struct regmatch_state *prev_yes_state;
     struct regmatch_state *prev_curlyx;
     regnode *me;
     regnode *B;
     CHECKPOINT cp;
     _Bool minmod;
     int parenfloor;


     int count;
     char *lastloc;
 } curlyx;

 struct {

     struct regmatch_state *prev_yes_state;
     struct regmatch_state *save_curlyx;
     CHECKPOINT cp;
     CHECKPOINT lastcp;
     char *save_lastloc;
     I32 cache_offset;
     I32 cache_mask;
 } whilem;

 struct {

     struct regmatch_state *prev_yes_state;
     int c1, c2;
     CHECKPOINT cp;
     U32 lastparen;
     U32 lastcloseparen;
     I32 alen;
     I32 count;
     _Bool minmod;
     regnode *A, *B;
     regnode *me;
            U8 c1_utf8[13 +1];
            U8 c2_utf8[13 +1];
 } curlym;

 struct {
     U32 paren;
     CHECKPOINT cp;
     U32 lastparen;
     U32 lastcloseparen;
     int c1, c2;
     char *maxpos;
     char *oldloc;
     int count;
     int min, max;
     regnode *A, *B;
            U8 c1_utf8[13 +1];
            U8 c2_utf8[13 +1];
 } curly;

    } u;
} regmatch_state;
# 753 "./regexp.h"
typedef struct regmatch_slab {
    regmatch_state states[((4096 - 3 * sizeof (void*)) / sizeof(regmatch_state))];
    struct regmatch_slab *prev, *next;
} regmatch_slab;
# 776 "./regexp.h"
struct re_save_state {
    _Bool re_state_eval_setup_done;
    _Bool re_state_reg_match_utf8;

    I32 re_state_reg_oldpos;
    I32 re_state_reg_maxiter;
    I32 re_state_reg_leftiter;
    char *re_state_bostr;
    char *re_state_regeol;
    MAGIC *re_state_reg_magic;
    PMOP *re_state_reg_oldcurpm;
    PMOP *re_state_reg_curpm;
    char *re_state_reg_oldsaved;
    STRLEN re_state_reg_oldsavedlen;
    STRLEN re_state_reg_oldsavedoffset;
    STRLEN re_state_reg_oldsavedcoffset;
    STRLEN re_state_reg_poscache_size;
    char *re_state_reg_poscache;
    char *re_state_reg_starttry;



};
# 3475 "./perl.h" 2
# 1 "./util.h" 1
# 3476 "./perl.h" 2
# 1 "./form.h" 1
# 3477 "./perl.h" 2
# 1 "./gv.h" 1
# 11 "./gv.h"
struct gp {
    SV * gp_sv;
    struct io * gp_io;
    CV * gp_cv;
    U32 gp_cvgen;
    U32 gp_refcnt;
    HV * gp_hv;
    AV * gp_av;
    CV * gp_form;
    GV * gp_egv;
    line_t gp_line;
    HEK * gp_file_hek;
};
# 3478 "./perl.h" 2
# 1 "./pad.h" 1
# 25 "./pad.h"
typedef unsigned long PADOFFSET;





struct padlist {
    ssize_t xpadl_max;
    PAD ** xpadl_alloc;
    PADNAMELIST*xpadl_outid;
};
# 119 "./pad.h"
typedef enum {
 padtidy_SUB,
 padtidy_SUBCLONE,
 padtidy_FORMAT
} padtidy_type;
# 3479 "./perl.h" 2
# 1 "./cv.h" 1
# 13 "./cv.h"
struct xpvcv {
    HV* xmg_stash; union _xmgu xmg_u; STRLEN xpv_cur; union { STRLEN xpvlenu_len; char * xpvlenu_pv; } xpv_len_u;
    HV * xcv_stash; union { OP * xcv_start; ANY xcv_xsubany; } xcv_start_u; union { OP * xcv_root; void (*xcv_xsub) (PerlInterpreter* my_perl __attribute__((unused)), CV*); } xcv_root_u; union { GV * xcv_gv; HEK * xcv_hek; } xcv_gv_u; char * xcv_file; PADLIST * xcv_padlist; CV * xcv_outside; U32 xcv_outside_seq; cv_flags_t xcv_flags; I32 xcv_depth;
};
# 191 "./cv.h"
static __inline__ GV *
S_CvGV(CV *sv)
{
    return (((XPVCV*)({ void *_p = ((sv)->sv_any); _p; }))->xcv_flags & 0x8000)
 ? 0
 : ((XPVCV*)({ void *_p = ((sv)->sv_any); _p; }))->xcv_gv_u.xcv_gv;
}
static __inline__ HEK *
CvNAME_HEK(CV *sv)
{
    return (((XPVCV*)({ void *_p = ((sv)->sv_any); _p; }))->xcv_flags & 0x8000)
 ? ((XPVCV*)({ void *_p = ((sv)->sv_any); _p; }))->xcv_gv_u.xcv_hek
 : 0;
}
# 270 "./cv.h"
typedef OP *(*Perl_call_checker)(PerlInterpreter* my_perl __attribute__((unused)), OP *, GV *, SV *);
# 3480 "./perl.h" 2
# 1 "./opnames.h" 1
# 16 "./opnames.h"
typedef enum opcode {
 OP_NULL = 0,
 OP_STUB = 1,
 OP_SCALAR = 2,
 OP_PUSHMARK = 3,
 OP_WANTARRAY = 4,
 OP_CONST = 5,
 OP_GVSV = 6,
 OP_GV = 7,
 OP_GELEM = 8,
 OP_PADSV = 9,
 OP_PADAV = 10,
 OP_PADHV = 11,
 OP_PADANY = 12,
 OP_PUSHRE = 13,
 OP_RV2GV = 14,
 OP_RV2SV = 15,
 OP_AV2ARYLEN = 16,
 OP_RV2CV = 17,
 OP_ANONCODE = 18,
 OP_PROTOTYPE = 19,
 OP_REFGEN = 20,
 OP_SREFGEN = 21,
 OP_REF = 22,
 OP_BLESS = 23,
 OP_BACKTICK = 24,
 OP_GLOB = 25,
 OP_READLINE = 26,
 OP_RCATLINE = 27,
 OP_REGCMAYBE = 28,
 OP_REGCRESET = 29,
 OP_REGCOMP = 30,
 OP_MATCH = 31,
 OP_QR = 32,
 OP_SUBST = 33,
 OP_SUBSTCONT = 34,
 OP_TRANS = 35,
 OP_TRANSR = 36,
 OP_SASSIGN = 37,
 OP_AASSIGN = 38,
 OP_CHOP = 39,
 OP_SCHOP = 40,
 OP_CHOMP = 41,
 OP_SCHOMP = 42,
 OP_DEFINED = 43,
 OP_UNDEF = 44,
 OP_STUDY = 45,
 OP_POS = 46,
 OP_PREINC = 47,
 OP_I_PREINC = 48,
 OP_PREDEC = 49,
 OP_I_PREDEC = 50,
 OP_POSTINC = 51,
 OP_I_POSTINC = 52,
 OP_POSTDEC = 53,
 OP_I_POSTDEC = 54,
 OP_POW = 55,
 OP_MULTIPLY = 56,
 OP_I_MULTIPLY = 57,
 OP_DIVIDE = 58,
 OP_I_DIVIDE = 59,
 OP_MODULO = 60,
 OP_I_MODULO = 61,
 OP_REPEAT = 62,
 OP_ADD = 63,
 OP_I_ADD = 64,
 OP_SUBTRACT = 65,
 OP_I_SUBTRACT = 66,
 OP_CONCAT = 67,
 OP_STRINGIFY = 68,
 OP_LEFT_SHIFT = 69,
 OP_RIGHT_SHIFT = 70,
 OP_LT = 71,
 OP_I_LT = 72,
 OP_GT = 73,
 OP_I_GT = 74,
 OP_LE = 75,
 OP_I_LE = 76,
 OP_GE = 77,
 OP_I_GE = 78,
 OP_EQ = 79,
 OP_I_EQ = 80,
 OP_NE = 81,
 OP_I_NE = 82,
 OP_NCMP = 83,
 OP_I_NCMP = 84,
 OP_SLT = 85,
 OP_SGT = 86,
 OP_SLE = 87,
 OP_SGE = 88,
 OP_SEQ = 89,
 OP_SNE = 90,
 OP_SCMP = 91,
 OP_BIT_AND = 92,
 OP_BIT_XOR = 93,
 OP_BIT_OR = 94,
 OP_NEGATE = 95,
 OP_I_NEGATE = 96,
 OP_NOT = 97,
 OP_COMPLEMENT = 98,
 OP_SMARTMATCH = 99,
 OP_ATAN2 = 100,
 OP_SIN = 101,
 OP_COS = 102,
 OP_RAND = 103,
 OP_SRAND = 104,
 OP_EXP = 105,
 OP_LOG = 106,
 OP_SQRT = 107,
 OP_INT = 108,
 OP_HEX = 109,
 OP_OCT = 110,
 OP_ABS = 111,
 OP_LENGTH = 112,
 OP_SUBSTR = 113,
 OP_VEC = 114,
 OP_INDEX = 115,
 OP_RINDEX = 116,
 OP_SPRINTF = 117,
 OP_FORMLINE = 118,
 OP_ORD = 119,
 OP_CHR = 120,
 OP_CRYPT = 121,
 OP_UCFIRST = 122,
 OP_LCFIRST = 123,
 OP_UC = 124,
 OP_LC = 125,
 OP_QUOTEMETA = 126,
 OP_RV2AV = 127,
 OP_AELEMFAST = 128,
 OP_AELEMFAST_LEX = 129,
 OP_AELEM = 130,
 OP_ASLICE = 131,
 OP_AEACH = 132,
 OP_AKEYS = 133,
 OP_AVALUES = 134,
 OP_EACH = 135,
 OP_VALUES = 136,
 OP_KEYS = 137,
 OP_DELETE = 138,
 OP_EXISTS = 139,
 OP_RV2HV = 140,
 OP_HELEM = 141,
 OP_HSLICE = 142,
 OP_UNPACK = 143,
 OP_PACK = 144,
 OP_SPLIT = 145,
 OP_JOIN = 146,
 OP_LIST = 147,
 OP_LSLICE = 148,
 OP_ANONLIST = 149,
 OP_ANONHASH = 150,
 OP_SPLICE = 151,
 OP_PUSH = 152,
 OP_POP = 153,
 OP_SHIFT = 154,
 OP_UNSHIFT = 155,
 OP_SORT = 156,
 OP_REVERSE = 157,
 OP_GREPSTART = 158,
 OP_GREPWHILE = 159,
 OP_MAPSTART = 160,
 OP_MAPWHILE = 161,
 OP_RANGE = 162,
 OP_FLIP = 163,
 OP_FLOP = 164,
 OP_AND = 165,
 OP_OR = 166,
 OP_XOR = 167,
 OP_DOR = 168,
 OP_COND_EXPR = 169,
 OP_ANDASSIGN = 170,
 OP_ORASSIGN = 171,
 OP_DORASSIGN = 172,
 OP_METHOD = 173,
 OP_ENTERSUB = 174,
 OP_LEAVESUB = 175,
 OP_LEAVESUBLV = 176,
 OP_CALLER = 177,
 OP_WARN = 178,
 OP_DIE = 179,
 OP_RESET = 180,
 OP_LINESEQ = 181,
 OP_NEXTSTATE = 182,
 OP_DBSTATE = 183,
 OP_UNSTACK = 184,
 OP_ENTER = 185,
 OP_LEAVE = 186,
 OP_SCOPE = 187,
 OP_ENTERITER = 188,
 OP_ITER = 189,
 OP_ENTERLOOP = 190,
 OP_LEAVELOOP = 191,
 OP_RETURN = 192,
 OP_LAST = 193,
 OP_NEXT = 194,
 OP_REDO = 195,
 OP_DUMP = 196,
 OP_GOTO = 197,
 OP_EXIT = 198,
 OP_METHOD_NAMED = 199,
 OP_ENTERGIVEN = 200,
 OP_LEAVEGIVEN = 201,
 OP_ENTERWHEN = 202,
 OP_LEAVEWHEN = 203,
 OP_BREAK = 204,
 OP_CONTINUE = 205,
 OP_OPEN = 206,
 OP_CLOSE = 207,
 OP_PIPE_OP = 208,
 OP_FILENO = 209,
 OP_UMASK = 210,
 OP_BINMODE = 211,
 OP_TIE = 212,
 OP_UNTIE = 213,
 OP_TIED = 214,
 OP_DBMOPEN = 215,
 OP_DBMCLOSE = 216,
 OP_SSELECT = 217,
 OP_SELECT = 218,
 OP_GETC = 219,
 OP_READ = 220,
 OP_ENTERWRITE = 221,
 OP_LEAVEWRITE = 222,
 OP_PRTF = 223,
 OP_PRINT = 224,
 OP_SAY = 225,
 OP_SYSOPEN = 226,
 OP_SYSSEEK = 227,
 OP_SYSREAD = 228,
 OP_SYSWRITE = 229,
 OP_EOF = 230,
 OP_TELL = 231,
 OP_SEEK = 232,
 OP_TRUNCATE = 233,
 OP_FCNTL = 234,
 OP_IOCTL = 235,
 OP_FLOCK = 236,
 OP_SEND = 237,
 OP_RECV = 238,
 OP_SOCKET = 239,
 OP_SOCKPAIR = 240,
 OP_BIND = 241,
 OP_CONNECT = 242,
 OP_LISTEN = 243,
 OP_ACCEPT = 244,
 OP_SHUTDOWN = 245,
 OP_GSOCKOPT = 246,
 OP_SSOCKOPT = 247,
 OP_GETSOCKNAME = 248,
 OP_GETPEERNAME = 249,
 OP_LSTAT = 250,
 OP_STAT = 251,
 OP_FTRREAD = 252,
 OP_FTRWRITE = 253,
 OP_FTREXEC = 254,
 OP_FTEREAD = 255,
 OP_FTEWRITE = 256,
 OP_FTEEXEC = 257,
 OP_FTIS = 258,
 OP_FTSIZE = 259,
 OP_FTMTIME = 260,
 OP_FTATIME = 261,
 OP_FTCTIME = 262,
 OP_FTROWNED = 263,
 OP_FTEOWNED = 264,
 OP_FTZERO = 265,
 OP_FTSOCK = 266,
 OP_FTCHR = 267,
 OP_FTBLK = 268,
 OP_FTFILE = 269,
 OP_FTDIR = 270,
 OP_FTPIPE = 271,
 OP_FTSUID = 272,
 OP_FTSGID = 273,
 OP_FTSVTX = 274,
 OP_FTLINK = 275,
 OP_FTTTY = 276,
 OP_FTTEXT = 277,
 OP_FTBINARY = 278,
 OP_CHDIR = 279,
 OP_CHOWN = 280,
 OP_CHROOT = 281,
 OP_UNLINK = 282,
 OP_CHMOD = 283,
 OP_UTIME = 284,
 OP_RENAME = 285,
 OP_LINK = 286,
 OP_SYMLINK = 287,
 OP_READLINK = 288,
 OP_MKDIR = 289,
 OP_RMDIR = 290,
 OP_OPEN_DIR = 291,
 OP_READDIR = 292,
 OP_TELLDIR = 293,
 OP_SEEKDIR = 294,
 OP_REWINDDIR = 295,
 OP_CLOSEDIR = 296,
 OP_FORK = 297,
 OP_WAIT = 298,
 OP_WAITPID = 299,
 OP_SYSTEM = 300,
 OP_EXEC = 301,
 OP_KILL = 302,
 OP_GETPPID = 303,
 OP_GETPGRP = 304,
 OP_SETPGRP = 305,
 OP_GETPRIORITY = 306,
 OP_SETPRIORITY = 307,
 OP_TIME = 308,
 OP_TMS = 309,
 OP_LOCALTIME = 310,
 OP_GMTIME = 311,
 OP_ALARM = 312,
 OP_SLEEP = 313,
 OP_SHMGET = 314,
 OP_SHMCTL = 315,
 OP_SHMREAD = 316,
 OP_SHMWRITE = 317,
 OP_MSGGET = 318,
 OP_MSGCTL = 319,
 OP_MSGSND = 320,
 OP_MSGRCV = 321,
 OP_SEMOP = 322,
 OP_SEMGET = 323,
 OP_SEMCTL = 324,
 OP_REQUIRE = 325,
 OP_DOFILE = 326,
 OP_HINTSEVAL = 327,
 OP_ENTEREVAL = 328,
 OP_LEAVEEVAL = 329,
 OP_ENTERTRY = 330,
 OP_LEAVETRY = 331,
 OP_GHBYNAME = 332,
 OP_GHBYADDR = 333,
 OP_GHOSTENT = 334,
 OP_GNBYNAME = 335,
 OP_GNBYADDR = 336,
 OP_GNETENT = 337,
 OP_GPBYNAME = 338,
 OP_GPBYNUMBER = 339,
 OP_GPROTOENT = 340,
 OP_GSBYNAME = 341,
 OP_GSBYPORT = 342,
 OP_GSERVENT = 343,
 OP_SHOSTENT = 344,
 OP_SNETENT = 345,
 OP_SPROTOENT = 346,
 OP_SSERVENT = 347,
 OP_EHOSTENT = 348,
 OP_ENETENT = 349,
 OP_EPROTOENT = 350,
 OP_ESERVENT = 351,
 OP_GPWNAM = 352,
 OP_GPWUID = 353,
 OP_GPWENT = 354,
 OP_SPWENT = 355,
 OP_EPWENT = 356,
 OP_GGRNAM = 357,
 OP_GGRGID = 358,
 OP_GGRENT = 359,
 OP_SGRENT = 360,
 OP_EGRENT = 361,
 OP_GETLOGIN = 362,
 OP_SYSCALL = 363,
 OP_LOCK = 364,
 OP_ONCE = 365,
 OP_CUSTOM = 366,
 OP_REACH = 367,
 OP_RKEYS = 368,
 OP_RVALUES = 369,
 OP_COREARGS = 370,
 OP_RUNCV = 371,
 OP_FC = 372,
 OP_PADCV = 373,
 OP_INTROCV = 374,
 OP_CLONECV = 375,
 OP_PADRANGE = 376,
 OP_max
} opcode;
# 3481 "./perl.h" 2
# 1 "./op.h" 1
# 43 "./op.h"
typedef unsigned Optype;
# 327 "./op.h"
struct op {
    OP* op_next; OP* op_sibling; OP* (*op_ppaddr)(PerlInterpreter* my_perl __attribute__((unused))); PADOFFSET op_targ; unsigned op_type:9; unsigned op_opt:1; unsigned op_slabbed:1; unsigned op_savefree:1; unsigned op_static:1; unsigned op_spare:3; U8 op_flags; U8 op_private;
};

struct unop {
    OP* op_next; OP* op_sibling; OP* (*op_ppaddr)(PerlInterpreter* my_perl __attribute__((unused))); PADOFFSET op_targ; unsigned op_type:9; unsigned op_opt:1; unsigned op_slabbed:1; unsigned op_savefree:1; unsigned op_static:1; unsigned op_spare:3; U8 op_flags; U8 op_private;
    OP * op_first;
};

struct binop {
    OP* op_next; OP* op_sibling; OP* (*op_ppaddr)(PerlInterpreter* my_perl __attribute__((unused))); PADOFFSET op_targ; unsigned op_type:9; unsigned op_opt:1; unsigned op_slabbed:1; unsigned op_savefree:1; unsigned op_static:1; unsigned op_spare:3; U8 op_flags; U8 op_private;
    OP * op_first;
    OP * op_last;
};

struct logop {
    OP* op_next; OP* op_sibling; OP* (*op_ppaddr)(PerlInterpreter* my_perl __attribute__((unused))); PADOFFSET op_targ; unsigned op_type:9; unsigned op_opt:1; unsigned op_slabbed:1; unsigned op_savefree:1; unsigned op_static:1; unsigned op_spare:3; U8 op_flags; U8 op_private;
    OP * op_first;
    OP * op_other;
};

struct listop {
    OP* op_next; OP* op_sibling; OP* (*op_ppaddr)(PerlInterpreter* my_perl __attribute__((unused))); PADOFFSET op_targ; unsigned op_type:9; unsigned op_opt:1; unsigned op_slabbed:1; unsigned op_savefree:1; unsigned op_static:1; unsigned op_spare:3; U8 op_flags; U8 op_private;
    OP * op_first;
    OP * op_last;
};

struct pmop {
    OP* op_next; OP* op_sibling; OP* (*op_ppaddr)(PerlInterpreter* my_perl __attribute__((unused))); PADOFFSET op_targ; unsigned op_type:9; unsigned op_opt:1; unsigned op_slabbed:1; unsigned op_savefree:1; unsigned op_static:1; unsigned op_spare:3; U8 op_flags; U8 op_private;
    OP * op_first;
    OP * op_last;

    IV op_pmoffset;



    U32 op_pmflags;
    union {
 OP * op_pmreplroot;

 PADOFFSET op_pmtargetoff;



    } op_pmreplrootu;
    union {
 OP * op_pmreplstart;

 PADOFFSET op_pmstashoff;



    } op_pmstashstartu;
    OP * op_code_list;
};
# 478 "./op.h"
struct svop {
    OP* op_next; OP* op_sibling; OP* (*op_ppaddr)(PerlInterpreter* my_perl __attribute__((unused))); PADOFFSET op_targ; unsigned op_type:9; unsigned op_opt:1; unsigned op_slabbed:1; unsigned op_savefree:1; unsigned op_static:1; unsigned op_spare:3; U8 op_flags; U8 op_private;
    SV * op_sv;
};

struct padop {
    OP* op_next; OP* op_sibling; OP* (*op_ppaddr)(PerlInterpreter* my_perl __attribute__((unused))); PADOFFSET op_targ; unsigned op_type:9; unsigned op_opt:1; unsigned op_slabbed:1; unsigned op_savefree:1; unsigned op_static:1; unsigned op_spare:3; U8 op_flags; U8 op_private;
    PADOFFSET op_padix;
};

struct pvop {
    OP* op_next; OP* op_sibling; OP* (*op_ppaddr)(PerlInterpreter* my_perl __attribute__((unused))); PADOFFSET op_targ; unsigned op_type:9; unsigned op_opt:1; unsigned op_slabbed:1; unsigned op_savefree:1; unsigned op_static:1; unsigned op_spare:3; U8 op_flags; U8 op_private;
    char * op_pv;
};

struct loop {
    OP* op_next; OP* op_sibling; OP* (*op_ppaddr)(PerlInterpreter* my_perl __attribute__((unused))); PADOFFSET op_targ; unsigned op_type:9; unsigned op_opt:1; unsigned op_slabbed:1; unsigned op_savefree:1; unsigned op_static:1; unsigned op_spare:3; U8 op_flags; U8 op_private;
    OP * op_first;
    OP * op_last;
    OP * op_redoop;
    OP * op_nextop;
    OP * op_lastop;
};
# 688 "./op.h"
# 1 "./reentr.h" 1
# 96 "./reentr.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pwd.h" 1 3
# 84 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pwd.h" 3
struct passwd {
 char *pw_name;
 char *pw_passwd;
 uid_t pw_uid;
 gid_t pw_gid;
 __darwin_time_t pw_change;
 char *pw_class;
 char *pw_gecos;
 char *pw_dir;
 char *pw_shell;
 __darwin_time_t pw_expire;
};




struct passwd *getpwuid(uid_t);
struct passwd *getpwnam(const char *);
int getpwuid_r(uid_t, struct passwd *, char *, size_t, struct passwd **);
int getpwnam_r(const char *, struct passwd *, char *, size_t, struct passwd **);
struct passwd *getpwent(void);
void setpwent(void);
void endpwent(void);




# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/uuid/uuid.h" 1 3
# 43 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/uuid/uuid.h" 3
typedef __darwin_uuid_string_t uuid_string_t;





static const uuid_t UUID_NULL __attribute__ ((unused)) = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};





void uuid_clear(uuid_t uu);

int uuid_compare(const uuid_t uu1, const uuid_t uu2);

void uuid_copy(uuid_t dst, const uuid_t src);

void uuid_generate(uuid_t out);
void uuid_generate_random(uuid_t out);
void uuid_generate_time(uuid_t out);

void uuid_generate_early_random(uuid_t out);

int uuid_is_null(const uuid_t uu);

int uuid_parse(const uuid_string_t in, uuid_t uu);

void uuid_unparse(const uuid_t uu, uuid_string_t out);
void uuid_unparse_lower(const uuid_t uu, uuid_string_t out);
void uuid_unparse_upper(const uuid_t uu, uuid_string_t out);
# 111 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/pwd.h" 2 3

int setpassent(int);
char *user_from_uid(uid_t, int);
struct passwd *getpwuuid(uuid_t);
int getpwuuid_r(uuid_t, struct passwd *, char *, size_t, struct passwd **);
# 97 "./reentr.h" 2


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/grp.h" 1 3
# 53 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/grp.h" 3
struct group {
 char *gr_name;
 char *gr_passwd;
 gid_t gr_gid;
 char **gr_mem;
};





struct group *getgrgid(gid_t);
struct group *getgrnam(const char *);

int getgrgid_r(gid_t, struct group *, char *, size_t, struct group **);
int getgrnam_r(const char *, struct group *, char *, size_t, struct group **);

struct group *getgrent(void);
void setgrent(void);
void endgrent(void);





char *group_from_gid(gid_t, int);
struct group *getgruuid(uuid_t);
int getgruuid_r(uuid_t, struct group *, char *, size_t, struct group **);






void setgrfile(const char *);

int setgroupent(int);
# 100 "./reentr.h" 2
# 626 "./reentr.h"
typedef struct {

 char* _asctime_buffer;
 size_t _asctime_size;
# 639 "./reentr.h"
 char* _ctime_buffer;
 size_t _ctime_size;






 struct group _grent_struct;
 char* _grent_buffer;
 size_t _grent_size;

 struct group* _grent_ptr;
# 673 "./reentr.h"
 char* _getlogin_buffer;
 size_t _getlogin_size;
# 707 "./reentr.h"
 struct passwd _pwent_struct;
 char* _pwent_buffer;
 size_t _pwent_size;

 struct passwd* _pwent_ptr;
# 756 "./reentr.h"
 struct dirent* _readdir_struct;
 size_t _readdir_size;

 struct dirent* _readdir_ptr;
# 777 "./reentr.h"
 char* _strerror_buffer;
 size_t _strerror_size;


 char* _ttyname_buffer;
 size_t _ttyname_size;


    int dummy;
} REENTR;
# 689 "./op.h" 2
# 753 "./op.h"
struct block_hooks {
    U32 bhk_flags;
    void (*bhk_start) (PerlInterpreter* my_perl __attribute__((unused)), int full);
    void (*bhk_pre_end) (PerlInterpreter* my_perl __attribute__((unused)), OP **seq);
    void (*bhk_post_end) (PerlInterpreter* my_perl __attribute__((unused)), OP **seq);
    void (*bhk_eval) (PerlInterpreter* my_perl __attribute__((unused)), OP *const saveop);
};
# 879 "./op.h"
struct custom_op {
    U32 xop_flags;
    const char *xop_name;
    const char *xop_desc;
    U32 xop_class;
    void (*xop_peep)(PerlInterpreter* my_perl __attribute__((unused)), OP *o, OP *oldop);
};
# 3482 "./perl.h" 2
# 1 "./hv.h" 1
# 32 "./hv.h"
struct he {



    HE *hent_next;
    HEK *hent_hek;
    union {
 SV *hent_val;
 size_t hent_refcount;
    } he_valu;
};


struct hek {
    U32 hek_hash;
    I32 hek_len;
    char hek_key[1];



};

struct shared_he {
    struct he shared_he_he;
    struct hek shared_he_hek;
};






struct mro_alg {
    AV *(*resolve)(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, U32 level);
    const char *name;
    U16 length;
    U16 kflags;
    U32 hash;
};

struct mro_meta {

    HV *mro_linear_all;



    SV *mro_linear_current;
    HV *mro_nextmethod;
    U32 cache_gen;
    U32 pkg_gen;
    const struct mro_alg *mro_which;
    HV *isa;
    U32 destroy_gen;
};
# 96 "./hv.h"
union _xhvnameu {
    HEK *xhvnameu_name;
    HEK **xhvnameu_names;
};

struct xpvhv_aux {
    union _xhvnameu xhv_name_u;
    AV *xhv_backreferences;
    HE *xhv_eiter;
    I32 xhv_riter;







    I32 xhv_name_count;
    struct mro_meta *xhv_mro_meta;
    HV * xhv_super;

    U32 xhv_rand;
    U32 xhv_last_rand;


};



struct xpvhv {
    HV* xmg_stash;
    union _xmgu xmg_u;
    STRLEN xhv_keys;
    STRLEN xhv_max;
};
# 476 "./hv.h"
struct refcounted_he;
# 593 "./hv.h"
# 1 "./hv_func.h" 1
# 192 "./hv_func.h"
static __inline__ U32
S_perl_hash_siphash_2_4(const unsigned char * const seed, const unsigned char *in, const STRLEN inlen) {

  unsigned long v0 = 0x736f6d6570736575ULL;
  unsigned long v1 = 0x646f72616e646f6dULL;
  unsigned long v2 = 0x6c7967656e657261ULL;
  unsigned long v3 = 0x7465646279746573ULL;

  unsigned long b;
  unsigned long k0 = ((unsigned long*)seed)[0];
  unsigned long k1 = ((unsigned long*)seed)[1];
  unsigned long m;
  const int left = inlen & 7;
  const U8 *end = in + inlen - left;

  b = ( ( unsigned long )(inlen) ) << 56;
  v3 ^= k1;
  v2 ^= k0;
  v1 ^= k1;
  v0 ^= k0;

  for ( ; in != end; in += 8 )
  {
    m = (((unsigned long)((in)[0]) ) | ((unsigned long)((in)[1]) << 8) | ((unsigned long)((in)[2]) << 16) | ((unsigned long)((in)[3]) << 24) | ((unsigned long)((in)[4]) << 32) | ((unsigned long)((in)[5]) << 40) | ((unsigned long)((in)[6]) << 48) | ((unsigned long)((in)[7]) << 56));
    v3 ^= m;
    do { v0 += v1; v1=(((unsigned long)v1 << 13) | ((unsigned long)v1 >> (64 - 13))); v1 ^= v0; v0=(((unsigned long)v0 << 32) | ((unsigned long)v0 >> (64 - 32))); v2 += v3; v3=(((unsigned long)v3 << 16) | ((unsigned long)v3 >> (64 - 16))); v3 ^= v2; v0 += v3; v3=(((unsigned long)v3 << 21) | ((unsigned long)v3 >> (64 - 21))); v3 ^= v0; v2 += v1; v1=(((unsigned long)v1 << 17) | ((unsigned long)v1 >> (64 - 17))); v1 ^= v2; v2=(((unsigned long)v2 << 32) | ((unsigned long)v2 >> (64 - 32))); } while(0);
    do { v0 += v1; v1=(((unsigned long)v1 << 13) | ((unsigned long)v1 >> (64 - 13))); v1 ^= v0; v0=(((unsigned long)v0 << 32) | ((unsigned long)v0 >> (64 - 32))); v2 += v3; v3=(((unsigned long)v3 << 16) | ((unsigned long)v3 >> (64 - 16))); v3 ^= v2; v0 += v3; v3=(((unsigned long)v3 << 21) | ((unsigned long)v3 >> (64 - 21))); v3 ^= v0; v2 += v1; v1=(((unsigned long)v1 << 17) | ((unsigned long)v1 >> (64 - 17))); v1 ^= v2; v2=(((unsigned long)v2 << 32) | ((unsigned long)v2 >> (64 - 32))); } while(0);
    v0 ^= m;
  }

  switch( left )
  {
  case 7: b |= ( ( unsigned long )in[ 6] ) << 48;
  case 6: b |= ( ( unsigned long )in[ 5] ) << 40;
  case 5: b |= ( ( unsigned long )in[ 4] ) << 32;
  case 4: b |= ( ( unsigned long )in[ 3] ) << 24;
  case 3: b |= ( ( unsigned long )in[ 2] ) << 16;
  case 2: b |= ( ( unsigned long )in[ 1] ) << 8;
  case 1: b |= ( ( unsigned long )in[ 0] ); break;
  case 0: break;
  }

  v3 ^= b;
  do { v0 += v1; v1=(((unsigned long)v1 << 13) | ((unsigned long)v1 >> (64 - 13))); v1 ^= v0; v0=(((unsigned long)v0 << 32) | ((unsigned long)v0 >> (64 - 32))); v2 += v3; v3=(((unsigned long)v3 << 16) | ((unsigned long)v3 >> (64 - 16))); v3 ^= v2; v0 += v3; v3=(((unsigned long)v3 << 21) | ((unsigned long)v3 >> (64 - 21))); v3 ^= v0; v2 += v1; v1=(((unsigned long)v1 << 17) | ((unsigned long)v1 >> (64 - 17))); v1 ^= v2; v2=(((unsigned long)v2 << 32) | ((unsigned long)v2 >> (64 - 32))); } while(0);
  do { v0 += v1; v1=(((unsigned long)v1 << 13) | ((unsigned long)v1 >> (64 - 13))); v1 ^= v0; v0=(((unsigned long)v0 << 32) | ((unsigned long)v0 >> (64 - 32))); v2 += v3; v3=(((unsigned long)v3 << 16) | ((unsigned long)v3 >> (64 - 16))); v3 ^= v2; v0 += v3; v3=(((unsigned long)v3 << 21) | ((unsigned long)v3 >> (64 - 21))); v3 ^= v0; v2 += v1; v1=(((unsigned long)v1 << 17) | ((unsigned long)v1 >> (64 - 17))); v1 ^= v2; v2=(((unsigned long)v2 << 32) | ((unsigned long)v2 >> (64 - 32))); } while(0);
  v0 ^= b;

  v2 ^= 0xff;
  do { v0 += v1; v1=(((unsigned long)v1 << 13) | ((unsigned long)v1 >> (64 - 13))); v1 ^= v0; v0=(((unsigned long)v0 << 32) | ((unsigned long)v0 >> (64 - 32))); v2 += v3; v3=(((unsigned long)v3 << 16) | ((unsigned long)v3 >> (64 - 16))); v3 ^= v2; v0 += v3; v3=(((unsigned long)v3 << 21) | ((unsigned long)v3 >> (64 - 21))); v3 ^= v0; v2 += v1; v1=(((unsigned long)v1 << 17) | ((unsigned long)v1 >> (64 - 17))); v1 ^= v2; v2=(((unsigned long)v2 << 32) | ((unsigned long)v2 >> (64 - 32))); } while(0);
  do { v0 += v1; v1=(((unsigned long)v1 << 13) | ((unsigned long)v1 >> (64 - 13))); v1 ^= v0; v0=(((unsigned long)v0 << 32) | ((unsigned long)v0 >> (64 - 32))); v2 += v3; v3=(((unsigned long)v3 << 16) | ((unsigned long)v3 >> (64 - 16))); v3 ^= v2; v0 += v3; v3=(((unsigned long)v3 << 21) | ((unsigned long)v3 >> (64 - 21))); v3 ^= v0; v2 += v1; v1=(((unsigned long)v1 << 17) | ((unsigned long)v1 >> (64 - 17))); v1 ^= v2; v2=(((unsigned long)v2 << 32) | ((unsigned long)v2 >> (64 - 32))); } while(0);
  do { v0 += v1; v1=(((unsigned long)v1 << 13) | ((unsigned long)v1 >> (64 - 13))); v1 ^= v0; v0=(((unsigned long)v0 << 32) | ((unsigned long)v0 >> (64 - 32))); v2 += v3; v3=(((unsigned long)v3 << 16) | ((unsigned long)v3 >> (64 - 16))); v3 ^= v2; v0 += v3; v3=(((unsigned long)v3 << 21) | ((unsigned long)v3 >> (64 - 21))); v3 ^= v0; v2 += v1; v1=(((unsigned long)v1 << 17) | ((unsigned long)v1 >> (64 - 17))); v1 ^= v2; v2=(((unsigned long)v2 << 32) | ((unsigned long)v2 >> (64 - 32))); } while(0);
  do { v0 += v1; v1=(((unsigned long)v1 << 13) | ((unsigned long)v1 >> (64 - 13))); v1 ^= v0; v0=(((unsigned long)v0 << 32) | ((unsigned long)v0 >> (64 - 32))); v2 += v3; v3=(((unsigned long)v3 << 16) | ((unsigned long)v3 >> (64 - 16))); v3 ^= v2; v0 += v3; v3=(((unsigned long)v3 << 21) | ((unsigned long)v3 >> (64 - 21))); v3 ^= v0; v2 += v1; v1=(((unsigned long)v1 << 17) | ((unsigned long)v1 >> (64 - 17))); v1 ^= v2; v2=(((unsigned long)v2 << 32) | ((unsigned long)v2 >> (64 - 32))); } while(0);
  b = v0 ^ v1 ^ v2 ^ v3;
  return (U32)(b & 4294967295U);
}
# 258 "./hv_func.h"
static __inline__ U32
S_perl_hash_superfast(const unsigned char * const seed, const unsigned char *str, STRLEN len) {
    U32 hash = *((U32*)seed) + len;
    U32 tmp;
    int rem= len & 3;
    len >>= 2;

    for (;len > 0; len--) {
        hash += ((((const U8 *)(str))[1] << 8) +((const U8 *)(str))[0]);
        tmp = (((((const U8 *)(str+2))[1] << 8) +((const U8 *)(str+2))[0]) << 11) ^ hash;
        hash = (hash << 16) ^ tmp;
        str += 2 * sizeof (U16);
        hash += hash >> 11;
    }


    switch (rem) { case 3: hash += ((((const U8 *)(str))[1] << 8) +((const U8 *)(str))[0]);

                hash ^= hash << 16;
                hash ^= str[sizeof (U16)] << 18;
                hash += hash >> 11;
                break;
        case 2: hash += ((((const U8 *)(str))[1] << 8) +((const U8 *)(str))[0]);
                hash ^= hash << 11;
                hash += hash >> 17;
                break;
        case 1: hash += *str;
                hash ^= hash << 10;
                hash += hash >> 1;
    }

    hash ^= hash << 3;
    hash += hash >> 5;
    hash ^= hash << 4;
    hash += hash >> 17;
    hash ^= hash << 25;
    return (hash + (hash >> 6));
}
# 362 "./hv_func.h"
static __inline__ U32
S_perl_hash_murmur3(const unsigned char * const seed, const unsigned char *ptr, STRLEN len) {
    U32 h1 = *((U32*)seed);
    U32 k1;
    U32 carry = 0;

    const unsigned char *end;
    int bytes_in_carry = 0;
    I32 total_length= len;
# 391 "./hv_func.h"
    STRLEN i = -(IV)(ptr) & 3;
    if(i && i <= len) {
      (void)( { int MURMUR_DOBYTES_i = i; while(MURMUR_DOBYTES_i--) { carry = carry>>8 | *ptr++<<24; bytes_in_carry++; len--; if(bytes_in_carry==4) { (void)( { carry *= (0xcc9e2d51); carry = (((U32)carry << 15) | ((U32)carry >> (32 - 15))); carry *= (0x1b873593); h1 ^= carry; h1 = (((U32)h1 << 13) | ((U32)h1 >> (32 - 13))); h1 = h1 * 5 + (0xe6546b64); } ); bytes_in_carry = 0; } } } );
    }


    end = ptr + len/4*4;
    switch(bytes_in_carry) {
        case 0:
        for( ; ptr < end ; ptr+=4) {
            k1 = (*((U32*)(ptr)));
            (void)( { k1 *= (0xcc9e2d51); k1 = (((U32)k1 << 15) | ((U32)k1 >> (32 - 15))); k1 *= (0x1b873593); h1 ^= k1; h1 = (((U32)h1 << 13) | ((U32)h1 >> (32 - 13))); h1 = h1 * 5 + (0xe6546b64); } );
        }
        break;
        case 1:
        for( ; ptr < end ; ptr+=4) {
            k1 = carry>>24;
            carry = (*((U32*)(ptr)));
            k1 |= carry<<8;
            (void)( { k1 *= (0xcc9e2d51); k1 = (((U32)k1 << 15) | ((U32)k1 >> (32 - 15))); k1 *= (0x1b873593); h1 ^= k1; h1 = (((U32)h1 << 13) | ((U32)h1 >> (32 - 13))); h1 = h1 * 5 + (0xe6546b64); } );
        }
        break;
        case 2:
        for( ; ptr < end ; ptr+=4) {
            k1 = carry>>16;
            carry = (*((U32*)(ptr)));
            k1 |= carry<<16;
            (void)( { k1 *= (0xcc9e2d51); k1 = (((U32)k1 << 15) | ((U32)k1 >> (32 - 15))); k1 *= (0x1b873593); h1 ^= k1; h1 = (((U32)h1 << 13) | ((U32)h1 >> (32 - 13))); h1 = h1 * 5 + (0xe6546b64); } );
        }
        break;
        case 3:
        for( ; ptr < end ; ptr+=4) {
            k1 = carry>>8;
            carry = (*((U32*)(ptr)));
            k1 |= carry<<24;
            (void)( { k1 *= (0xcc9e2d51); k1 = (((U32)k1 << 15) | ((U32)k1 >> (32 - 15))); k1 *= (0x1b873593); h1 ^= k1; h1 = (((U32)h1 << 13) | ((U32)h1 >> (32 - 13))); h1 = h1 * 5 + (0xe6546b64); } );
        }
    }


    len -= len/4*4;


    (void)( { int MURMUR_DOBYTES_i = len; while(MURMUR_DOBYTES_i--) { carry = carry>>8 | *ptr++<<24; bytes_in_carry++; len--; if(bytes_in_carry==4) { (void)( { carry *= (0xcc9e2d51); carry = (((U32)carry << 15) | ((U32)carry >> (32 - 15))); carry *= (0x1b873593); h1 ^= carry; h1 = (((U32)h1 << 13) | ((U32)h1 >> (32 - 13))); h1 = h1 * 5 + (0xe6546b64); } ); bytes_in_carry = 0; } } } );

    if (bytes_in_carry) {
        k1 = carry >> ( 4 - bytes_in_carry ) * 8;
        k1 *= (0xcc9e2d51);
        k1 = (((U32)k1 << 15) | ((U32)k1 >> (32 - 15)));
        k1 *= (0x1b873593);
        h1 ^= k1;
    }
    h1 ^= total_length;


    h1 ^= h1 >> 16;
    h1 *= (0x85ebca6b);
    h1 ^= h1 >> 13;
    h1 *= (0xc2b2ae35);
    h1 ^= h1 >> 16;
    return h1;
}


static __inline__ U32
S_perl_hash_djb2(const unsigned char * const seed, const unsigned char *str, const STRLEN len) {
    const unsigned char * const end = (const unsigned char *)str + len;
    U32 hash = *((U32*)seed + len);
    while (str < end) {
        hash = ((hash << 5) + hash) + *str++;
    }
    return hash;
}

static __inline__ U32
S_perl_hash_sdbm(const unsigned char * const seed, const unsigned char *str, const STRLEN len) {
    const unsigned char * const end = (const unsigned char *)str + len;
    U32 hash = *((U32*)seed + len);
    while (str < end) {
        hash = (hash << 6) + (hash << 16) - hash + *str++;
    }
    return hash;
}







static __inline__ U32
S_perl_hash_one_at_a_time(const unsigned char * const seed, const unsigned char *str, const STRLEN len) {
    const unsigned char * const end = (const unsigned char *)str + len;
    U32 hash = *((U32*)seed) + len;
    while (str < end) {
        hash += *str++;
        hash += (hash << 10);
        hash ^= (hash >> 6);
    }
    hash += (hash << 3);
    hash ^= (hash >> 11);
    return (hash + (hash << 15));
}


static __inline__ U32
S_perl_hash_one_at_a_time_hard(const unsigned char * const seed, const unsigned char *str, const STRLEN len) {
    const unsigned char * const end = (const unsigned char *)str + len;
    U32 hash = *((U32*)seed) + len;

    while (str < end) {
        hash += (hash << 10);
        hash ^= (hash >> 6);
        hash += *str++;
    }

    hash += (hash << 10);
    hash ^= (hash >> 6);
    hash += seed[4];

    hash += (hash << 10);
    hash ^= (hash >> 6);
    hash += seed[5];

    hash += (hash << 10);
    hash ^= (hash >> 6);
    hash += seed[6];

    hash += (hash << 10);
    hash ^= (hash >> 6);
    hash += seed[7];

    hash += (hash << 10);
    hash ^= (hash >> 6);

    hash += (hash << 3);
    hash ^= (hash >> 11);
    return (hash + (hash << 15));
}

static __inline__ U32
S_perl_hash_old_one_at_a_time(const unsigned char * const seed, const unsigned char *str, const STRLEN len) {
    const unsigned char * const end = (const unsigned char *)str + len;
    U32 hash = *((U32*)seed);
    while (str < end) {
        hash += *str++;
        hash += (hash << 10);
        hash ^= (hash >> 6);
    }
    hash += (hash << 3);
    hash ^= (hash >> 11);
    return (hash + (hash << 15));
}
# 594 "./hv.h" 2
# 3483 "./perl.h" 2
# 1 "./cop.h" 1
# 32 "./cop.h"
struct jmpenv {
    struct jmpenv * je_prev;
    sigjmp_buf je_buf;
    int je_ret;
    _Bool je_mustcatch;
};

typedef struct jmpenv JMPENV;
# 160 "./cop.h"
typedef struct refcounted_he COPHH;
# 381 "./cop.h"
# 1 "./mydtrace.h" 1
# 382 "./cop.h" 2

struct cop {
    OP* op_next; OP* op_sibling; OP* (*op_ppaddr)(PerlInterpreter* my_perl __attribute__((unused))); PADOFFSET op_targ; unsigned op_type:9; unsigned op_opt:1; unsigned op_slabbed:1; unsigned op_savefree:1; unsigned op_static:1; unsigned op_spare:3; U8 op_flags; U8 op_private;


    line_t cop_line;


    PADOFFSET cop_stashoff;

    char * cop_file;




    U32 cop_hints;
    U32 cop_seq;

    STRLEN * cop_warnings;


    COPHH * cop_hints_hash;
};
# 557 "./cop.h"
struct block_sub {
    OP * retop;

    CV * cv;

    AV * savearray;
    AV * argarray;
    I32 olddepth;
    PAD *oldcomppad;
};



struct block_format {
    OP * retop;

    CV * cv;

    GV * gv;
    GV * dfoutgv;
};
# 691 "./cop.h"
struct block_eval {
    OP * retop;

    SV * old_namesv;
    OP * old_eval_root;
    SV * cur_text;
    CV * cv;
    JMPENV * cur_top_env;
};
# 733 "./cop.h"
struct block_loop {
    I32 resetsp;
    LOOP * my_op;
    union {
 SV **svp;
 GV *gv;
 PAD *oldcomppad;
    } itervar_u;
    union {
 struct {
     AV * ary;
     IV ix;
 } ary;
 struct {
     IV cur;
     IV end;
 } lazyiv;
 struct {
     SV * cur;
     SV * end;
 } lazysv;
    } state_u;
};
# 800 "./cop.h"
struct block_givwhen {
 OP *leave_op;
};







struct block {
    U8 blku_type;
    U8 blku_gimme;
    U16 blku_u16;
    I32 blku_oldsp;
    COP * blku_oldcop;
    I32 blku_oldmarksp;
    I32 blku_oldscopesp;
    PMOP * blku_oldpm;

    union {
 struct block_sub blku_sub;
 struct block_format blku_format;
 struct block_eval blku_eval;
 struct block_loop blku_loop;
 struct block_givwhen blku_givwhen;
    } blk_u;
};
# 883 "./cop.h"
struct subst {
    U8 sbu_type;
    U8 sbu_rflags;
    U16 sbu_rxtainted;
    I32 sbu_iters;
    I32 sbu_maxiters;
    I32 sbu_oldsave;
    char * sbu_orig;
    SV * sbu_dstr;
    SV * sbu_targ;
    char * sbu_s;
    char * sbu_m;
    char * sbu_strend;
    void * sbu_rxres;
    REGEXP * sbu_rx;
};
# 939 "./cop.h"
struct context {
    union {
 struct block cx_blk;
 struct subst cx_subst;
    } cx_u;
};
# 1086 "./cop.h"
struct stackinfo {
    AV * si_stack;
    PERL_CONTEXT * si_cxstack;
    struct stackinfo * si_prev;
    struct stackinfo * si_next;
    I32 si_cxix;
    I32 si_cxmax;
    I32 si_type;
    I32 si_markoff;


};

typedef struct stackinfo PERL_SI;
# 3484 "./perl.h" 2
# 1 "./av.h" 1
# 11 "./av.h"
struct xpvav {
    HV* xmg_stash;
    union _xmgu xmg_u;
    ssize_t xav_fill;
    ssize_t xav_max;
    SV** xav_alloc;
};
# 3485 "./perl.h" 2
# 1 "./mg.h" 1
# 14 "./mg.h"
struct mgvtbl {
    int (*svt_get) (PerlInterpreter* my_perl __attribute__((unused)), SV *sv, MAGIC* mg);
    int (*svt_set) (PerlInterpreter* my_perl __attribute__((unused)), SV *sv, MAGIC* mg);
    U32 (*svt_len) (PerlInterpreter* my_perl __attribute__((unused)), SV *sv, MAGIC* mg);
    int (*svt_clear)(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, MAGIC* mg);
    int (*svt_free) (PerlInterpreter* my_perl __attribute__((unused)), SV *sv, MAGIC* mg);
    int (*svt_copy) (PerlInterpreter* my_perl __attribute__((unused)), SV *sv, MAGIC* mg,
         SV *nsv, const char *name, I32 namlen);
    int (*svt_dup) (PerlInterpreter* my_perl __attribute__((unused)), MAGIC *mg, CLONE_PARAMS *param);
    int (*svt_local)(PerlInterpreter* my_perl __attribute__((unused)), SV *nsv, MAGIC *mg);
};


struct magic {
    MAGIC* mg_moremagic;
    MGVTBL* mg_virtual;
    U16 mg_private;
    char mg_type;
    U8 mg_flags;
    I32 mg_len;
    SV* mg_obj;
    char* mg_ptr;
};
# 3486 "./perl.h" 2
# 1 "./scope.h" 1
# 3487 "./perl.h" 2
# 1 "./warnings.h" 1
# 3488 "./perl.h" 2
# 3499 "./perl.h"
typedef struct _sublex_info SUBLEXINFO;
struct _sublex_info {
    U8 super_state;
    U16 sub_inwhat;
    OP *sub_op;
    SV *repl;
};


# 1 "./parser.h" 1
# 14 "./parser.h"
typedef struct {
    YYSTYPE val;
    short state;
    I32 savestack_ix;
    CV *compcv;



} yy_stack_frame;



typedef struct yy_lexshared {
    struct yy_lexshared *ls_prev;
    SV *ls_linestr;
    char *ls_bufptr;
    char *re_eval_start;
    SV *re_eval_str;
    line_t herelines;
} LEXSHARED;

typedef struct yy_parser {



    struct yy_parser *old_parser;
    YYSTYPE yylval;
    int yychar;


    int yyerrstatus;

    int stack_size;
    int yylen;
    yy_stack_frame *stack;
    yy_stack_frame *ps;



    I32 lex_brackets;
    I32 lex_casemods;
    char *lex_brackstack;
    char *lex_casestack;
    U8 lex_defer;
    _Bool lex_dojoin;
    U8 lex_expect;
    U8 expect;
    I32 lex_formbrack;
    OP *lex_inpat;
    OP *lex_op;
    SV *lex_repl;
    U16 lex_inwhat;
    U16 last_lop_op;
    I32 lex_starts;
    SV *lex_stuff;
    I32 multi_start;
    I32 multi_end;
    char multi_open;
    char multi_close;
    _Bool preambled;
    _Bool lex_re_reparsing;
    I32 lex_allbrackets;
    SUBLEXINFO sublex_info;
    LEXSHARED *lex_shared;
    SV *linestr;
    char *bufptr;


    char *oldbufptr;
    char *oldoldbufptr;
    char *bufend;
    char *linestart;
    char *last_uni;
    char *last_lop;




    line_t copline;
    U16 in_my;
    U8 lex_state;
    U8 error_count;
    HV *in_my_stash;
    PerlIO *rsfp;
    AV *rsfp_filters;
    U8 form_lex_state;
# 119 "./parser.h"
    YYSTYPE nextval[5];
    I32 nexttype[5];
    I32 nexttoke;


    COP *saved_curcop;
    char tokenbuf[256];

    U8 lex_fakeeof;
    U8 lex_flags;
    unsigned in_pod:1;
    unsigned filtered:1;
} yy_parser;
# 152 "./parser.h"
enum {
    LEX_FAKEEOF_NEVER,
    LEX_FAKEEOF_CLOSING,
    LEX_FAKEEOF_NONEXPR,
    LEX_FAKEEOF_LOWLOGIC,
    LEX_FAKEEOF_COMMA,
    LEX_FAKEEOF_ASSIGN,
    LEX_FAKEEOF_IFELSE,
    LEX_FAKEEOF_RANGE,
    LEX_FAKEEOF_LOGIC,
    LEX_FAKEEOF_BITWISE,
    LEX_FAKEEOF_COMPARE,
    LEX_FAKEEOF_MAX
};
# 3508 "./perl.h" 2

typedef struct magic_state MGS;

struct scan_data_t;
struct regnode_charclass_class;

struct ptr_tbl_ent {
    struct ptr_tbl_ent* next;
    const void* oldval;
    void* newval;
};

struct ptr_tbl {
    struct ptr_tbl_ent** tbl_ary;
    UV tbl_max;
    UV tbl_items;
    struct ptr_tbl_arena *tbl_arena;
    struct ptr_tbl_ent *tbl_arena_next;
    struct ptr_tbl_ent *tbl_arena_end;
};
# 3582 "./perl.h"
short htovs(short n);
short vtohs(short n);
long htovl(long n);
long vtohl(long n);
# 3655 "./perl.h"
uid_t getuid (void);
uid_t geteuid (void);
gid_t getgid (void);
gid_t getegid (void);
# 3912 "./perl.h"
struct ufuncs {
    I32 (*uf_val)(PerlInterpreter* my_perl __attribute__((unused)), IV, SV*);
    I32 (*uf_set)(PerlInterpreter* my_perl __attribute__((unused)), IV, SV*);
    IV uf_index;
};
# 3942 "./perl.h"
char *mktemp (char*);

double atof (const char*);
# 3963 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/math.h" 1 3
# 28 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/math.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/architecture/i386/math.h" 1 3
# 49 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/architecture/i386/math.h" 3
 typedef float float_t;
 typedef double double_t;
# 108 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/architecture/i386/math.h" 3
extern int __math_errhandling ( void );
# 128 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/architecture/i386/math.h" 3
extern int __fpclassifyf(float );
extern int __fpclassifyd(double );
extern int __fpclassify (long double);
# 163 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/architecture/i386/math.h" 3
 static __inline__ int __inline_isfinitef (float ) __attribute__ ((always_inline));
 static __inline__ int __inline_isfinited (double ) __attribute__ ((always_inline));
 static __inline__ int __inline_isfinite (long double) __attribute__ ((always_inline));
 static __inline__ int __inline_isinff (float ) __attribute__ ((always_inline));
 static __inline__ int __inline_isinfd (double ) __attribute__ ((always_inline));
 static __inline__ int __inline_isinf (long double) __attribute__ ((always_inline));
 static __inline__ int __inline_isnanf (float ) __attribute__ ((always_inline));
 static __inline__ int __inline_isnand (double ) __attribute__ ((always_inline));
 static __inline__ int __inline_isnan (long double) __attribute__ ((always_inline));
 static __inline__ int __inline_isnormalf (float ) __attribute__ ((always_inline));
 static __inline__ int __inline_isnormald (double ) __attribute__ ((always_inline));
 static __inline__ int __inline_isnormal (long double) __attribute__ ((always_inline));
 static __inline__ int __inline_signbitf (float ) __attribute__ ((always_inline));
 static __inline__ int __inline_signbitd (double ) __attribute__ ((always_inline));
 static __inline__ int __inline_signbit (long double) __attribute__ ((always_inline));

 static __inline__ int __inline_isinff( float __x ) { return __builtin_fabsf(__x) == __builtin_inff(); }
 static __inline__ int __inline_isinfd( double __x ) { return __builtin_fabs(__x) == __builtin_inf(); }
 static __inline__ int __inline_isinf( long double __x ) { return __builtin_fabsl(__x) == __builtin_infl(); }
 static __inline__ int __inline_isfinitef( float __x ) { return __x == __x && __builtin_fabsf(__x) != __builtin_inff(); }
 static __inline__ int __inline_isfinited( double __x ) { return __x == __x && __builtin_fabs(__x) != __builtin_inf(); }
 static __inline__ int __inline_isfinite( long double __x ) { return __x == __x && __builtin_fabsl(__x) != __builtin_infl(); }
 static __inline__ int __inline_isnanf( float __x ) { return __x != __x; }
 static __inline__ int __inline_isnand( double __x ) { return __x != __x; }
 static __inline__ int __inline_isnan( long double __x ) { return __x != __x; }
 static __inline__ int __inline_signbitf( float __x ) { union{ float __f; unsigned int __u; }__u; __u.__f = __x; return (int)(__u.__u >> 31); }
 static __inline__ int __inline_signbitd( double __x ) { union{ double __f; unsigned int __u[2]; }__u; __u.__f = __x; return (int)(__u.__u[1] >> 31); }
 static __inline__ int __inline_signbit( long double __x ){ union{ long double __ld; struct{ unsigned int __m[2]; short __sexp; }__p; }__u; __u.__ld = __x; return (int) (((unsigned short) __u.__p.__sexp) >> 15); }
 static __inline__ int __inline_isnormalf( float __x ) { float fabsf = __builtin_fabsf(__x); if( __x != __x ) return 0; return fabsf < __builtin_inff() && fabsf >= 1.17549435e-38F; }
 static __inline__ int __inline_isnormald( double __x ) { double fabsf = __builtin_fabs(__x); if( __x != __x ) return 0; return fabsf < __builtin_inf() && fabsf >= 2.2250738585072014e-308; }
 static __inline__ int __inline_isnormal( long double __x ) { long double fabsf = __builtin_fabsl(__x); if( __x != __x ) return 0; return fabsf < __builtin_infl() && fabsf >= 3.36210314311209350626e-4932L; }
# 253 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/architecture/i386/math.h" 3
extern double acos( double );
extern float acosf( float );

extern double asin( double );
extern float asinf( float );

extern double atan( double );
extern float atanf( float );

extern double atan2( double, double );
extern float atan2f( float, float );

extern double cos( double );
extern float cosf( float );

extern double sin( double );
extern float sinf( float );

extern double tan( double );
extern float tanf( float );

extern double acosh( double );
extern float acoshf( float );

extern double asinh( double );
extern float asinhf( float );

extern double atanh( double );
extern float atanhf( float );

extern double cosh( double );
extern float coshf( float );

extern double sinh( double );
extern float sinhf( float );

extern double tanh( double );
extern float tanhf( float );

extern double exp ( double );
extern float expf ( float );

extern double exp2 ( double );
extern float exp2f ( float );

extern double expm1 ( double );
extern float expm1f ( float );

extern double log ( double );
extern float logf ( float );

extern double log10 ( double );
extern float log10f ( float );

extern double log2 ( double );
extern float log2f ( float );

extern double log1p ( double );
extern float log1pf ( float );

extern double logb ( double );
extern float logbf ( float );

extern double modf ( double, double * );
extern float modff ( float, float * );

extern double ldexp ( double, int );
extern float ldexpf ( float, int );

extern double frexp ( double, int * );
extern float frexpf ( float, int * );

extern int ilogb ( double );
extern int ilogbf ( float );

extern double scalbn ( double, int );
extern float scalbnf ( float, int );

extern double scalbln ( double, long int );
extern float scalblnf ( float, long int );

extern double fabs( double );
extern float fabsf( float );

extern double cbrt( double );
extern float cbrtf( float );

extern double hypot ( double, double );
extern float hypotf ( float, float );

extern double pow ( double, double );
extern float powf ( float, float );

extern double sqrt( double );
extern float sqrtf( float );

extern double erf( double );
extern float erff( float );

extern double erfc( double );
extern float erfcf( float );






extern double lgamma( double );
extern float lgammaf( float );

extern double tgamma( double );
extern float tgammaf( float );

extern double ceil ( double );
extern float ceilf ( float );

extern double floor ( double );
extern float floorf ( float );

extern double nearbyint ( double );
extern float nearbyintf ( float );

extern double rint ( double );
extern float rintf ( float );

extern long int lrint ( double );
extern long int lrintf ( float );

extern double round ( double );
extern float roundf ( float );

extern long int lround ( double );
extern long int lroundf ( float );



    extern long long int llrint ( double );
    extern long long int llrintf ( float );
    extern long long int llround ( double );
    extern long long int llroundf ( float );


extern double trunc ( double );
extern float truncf ( float );

extern double fmod ( double, double );
extern float fmodf ( float, float );

extern double remainder ( double, double );
extern float remainderf ( float, float );

extern double remquo ( double, double, int * );
extern float remquof ( float, float, int * );

extern double copysign ( double, double );
extern float copysignf ( float, float );

extern double nan( const char * );
extern float nanf( const char * );

extern double nextafter ( double, double );
extern float nextafterf ( float, float );

extern double fdim ( double, double );
extern float fdimf ( float, float );

extern double fmax ( double, double );
extern float fmaxf ( float, float );

extern double fmin ( double, double );
extern float fminf ( float, float );

extern double fma ( double, double, double );
extern float fmaf ( float, float, float );

extern long double acosl(long double);
extern long double asinl(long double);
extern long double atanl(long double);
extern long double atan2l(long double, long double);
extern long double cosl(long double);
extern long double sinl(long double);
extern long double tanl(long double);
extern long double acoshl(long double);
extern long double asinhl(long double);
extern long double atanhl(long double);
extern long double coshl(long double);
extern long double sinhl(long double);
extern long double tanhl(long double);
extern long double expl(long double);
extern long double exp2l(long double);
extern long double expm1l(long double);
extern long double logl(long double);
extern long double log10l(long double);
extern long double log2l(long double);
extern long double log1pl(long double);
extern long double logbl(long double);
extern long double modfl(long double, long double *);
extern long double ldexpl(long double, int);
extern long double frexpl(long double, int *);
extern int ilogbl(long double);
extern long double scalbnl(long double, int);
extern long double scalblnl(long double, long int);
extern long double fabsl(long double);
extern long double cbrtl(long double);
extern long double hypotl(long double, long double);
extern long double powl(long double, long double);
extern long double sqrtl(long double);
extern long double erfl(long double);
extern long double erfcl(long double);






extern long double lgammal(long double);

extern long double tgammal(long double);
extern long double ceill(long double);
extern long double floorl(long double);
extern long double nearbyintl(long double);
extern long double rintl(long double);
extern long int lrintl(long double);
extern long double roundl(long double);
extern long int lroundl(long double);



    extern long long int llrintl(long double);
    extern long long int llroundl(long double);


extern long double truncl(long double);
extern long double fmodl(long double, long double);
extern long double remainderl(long double, long double);
extern long double remquol(long double, long double, int *);
extern long double copysignl(long double, long double);
extern long double nanl(const char *);
extern long double nextafterl(long double, long double);
extern double nexttoward(double, long double);
extern float nexttowardf(float, long double);
extern long double nexttowardl(long double, long double);
extern long double fdiml(long double, long double);
extern long double fmaxl(long double, long double);
extern long double fminl(long double, long double);
extern long double fmal(long double, long double, long double);
# 507 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/architecture/i386/math.h" 3
extern double __inf( void );
extern float __inff( void );
extern long double __infl( void );
extern float __nan( void );


extern double j0 ( double );

extern double j1 ( double );

extern double jn ( int, double );

extern double y0 ( double );

extern double y1 ( double );

extern double yn ( int, double );

extern double scalb ( double, double );
# 543 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/architecture/i386/math.h" 3
extern int signgam;
# 558 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/architecture/i386/math.h" 3
extern long int rinttol ( double );


extern long int roundtol ( double );
# 570 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/architecture/i386/math.h" 3
struct exception {
 int type;
 char *name;
 double arg1;
 double arg2;
 double retval;
};
# 601 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/architecture/i386/math.h" 3
extern int finite ( double );


extern double gamma ( double );




extern int matherr ( struct exception * );





extern double significand ( double );






extern double drem ( double, double );
# 29 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/math.h" 2 3






struct __float2 { float __sinval; float __cosval; };
struct __double2 { double __sinval; double __cosval; };

extern struct __float2 __sincosf_stret(float v);
extern struct __double2 __sincos_stret(double v);
extern struct __float2 __sincospif_stret(float v);
extern struct __double2 __sincospi_stret(double v);
# 3964 "./perl.h" 2
# 4035 "./perl.h"
char *crypt (const char*, const char*);





char *getenv (const char*);
# 4053 "./perl.h"
char *getlogin (void);
# 4092 "./perl.h"
typedef struct sigaction Sigsave_t;
# 4111 "./perl.h"
extern void PerlIO_teardown(void);
# 4152 "./perl.h"
struct perl_memory_debug_header;
struct perl_memory_debug_header {
  PerlInterpreter* interpreter;



  struct perl_memory_debug_header *prev;
  struct perl_memory_debug_header *next;
};
# 4182 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/malloc/malloc.h" 1 3
# 28 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/malloc/malloc.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 1 3
# 80 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/host_info.h" 1 3
# 66 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/host_info.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 1 3
# 75 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 1 3
# 91 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/boolean.h" 1 3
# 73 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/boolean.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/boolean.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/boolean.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/boolean.h" 1 3
# 69 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/boolean.h" 3
typedef unsigned int boolean_t;
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/boolean.h" 2 3
# 74 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/boolean.h" 2 3
# 92 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/vm_types.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/vm_types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/vm_types.h" 1 3
# 73 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/vm_types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/vm_param.h" 1 3
# 74 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/vm_types.h" 2 3
# 93 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/vm_types.h" 3
typedef __darwin_natural_t natural_t;
typedef int integer_t;






typedef uintptr_t vm_offset_t;
# 112 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/vm_types.h" 3
typedef uintptr_t vm_size_t;
# 124 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/vm_types.h" 3
typedef uint64_t mach_vm_address_t;
typedef uint64_t mach_vm_offset_t;
typedef uint64_t mach_vm_size_t;

typedef uint64_t vm_map_offset_t;
typedef uint64_t vm_map_address_t;
typedef uint64_t vm_map_size_t;

typedef mach_vm_address_t mach_port_context_t;
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/vm_types.h" 2 3
# 93 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 2 3
# 106 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 3
typedef natural_t mach_port_name_t;
typedef mach_port_name_t *mach_port_name_array_t;
# 181 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 3
typedef mach_port_t *mach_port_array_t;
# 243 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 3
typedef natural_t mach_port_right_t;
# 258 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 3
typedef natural_t mach_port_type_t;
typedef mach_port_type_t *mach_port_type_array_t;
# 299 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 3
typedef natural_t mach_port_urefs_t;
typedef integer_t mach_port_delta_t;



typedef natural_t mach_port_seqno_t;
typedef natural_t mach_port_mscount_t;
typedef natural_t mach_port_msgcount_t;
typedef natural_t mach_port_rights_t;






typedef unsigned int mach_port_srights_t;

typedef struct mach_port_status {
 mach_port_rights_t mps_pset;
 mach_port_seqno_t mps_seqno;
 mach_port_mscount_t mps_mscount;
 mach_port_msgcount_t mps_qlimit;
 mach_port_msgcount_t mps_msgcount;
 mach_port_rights_t mps_sorights;
 boolean_t mps_srights;
 boolean_t mps_pdrequest;
 boolean_t mps_nsrequest;
 natural_t mps_flags;
} mach_port_status_t;
# 339 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 3
typedef struct mach_port_limits {
 mach_port_msgcount_t mpl_qlimit;
} mach_port_limits_t;
# 353 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 3
typedef struct mach_port_info_ext {
 mach_port_status_t mpie_status;
 mach_port_msgcount_t mpie_boost_cnt;
 uint32_t reserved[6];
} mach_port_info_ext_t;

typedef integer_t *mach_port_info_t;


typedef int mach_port_flavor_t;
# 382 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 3
typedef struct mach_port_qos {
 unsigned int name:1;
 unsigned int prealloc:1;
 boolean_t pad1:30;
 natural_t len;
} mach_port_qos_t;
# 409 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 3
typedef struct mach_port_options {
 uint32_t flags;
 mach_port_limits_t mpl;
 uint64_t reserved[2];
}mach_port_options_t;

typedef mach_port_options_t *mach_port_options_ptr_t;
# 425 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/port.h" 3
enum mach_port_guard_exception_codes {
 kGUARD_EXC_DESTROY = 1u << 0,
 kGUARD_EXC_MOD_REFS = 1u << 1,
 kGUARD_EXC_SET_CONTEXT = 1u << 2,
 kGUARD_EXC_UNGUARDED = 1u << 3,
 kGUARD_EXC_INCORRECT_GUARD = 1u << 4,
 kGUARD_EXC_IMMOVABLE = 1u << 5,
 kGUARD_EXC_STRICT_REPLY = 1u << 6,

 kGUARD_EXC_INVALID_RIGHT = 1u << 8,
 kGUARD_EXC_INVALID_NAME = 1u << 9,
 kGUARD_EXC_INVALID_VALUE = 1u << 10,
 kGUARD_EXC_INVALID_ARGUMENT = 1u << 11,
 kGUARD_EXC_RIGHT_EXISTS = 1u << 12,
 kGUARD_EXC_KERN_NO_SPACE = 1u << 13,
 kGUARD_EXC_KERN_FAILURE = 1u << 14,
 kGUARD_EXC_KERN_RESOURCE = 1u << 15,
 kGUARD_EXC_SEND_INVALID_REPLY = 1u << 16,
 kGUARD_EXC_SEND_INVALID_VOUCHER = 1u << 17,
 kGUARD_EXC_SEND_INVALID_RIGHT = 1u << 18,
 kGUARD_EXC_RCV_INVALID_NAME = 1u << 19,
 kGUARD_EXC_RCV_GUARDED_DESC = 1u << 20,
};
# 76 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 2 3

# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/kern_return.h" 1 3
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/kern_return.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/kern_return.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/kern_return.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/kern_return.h" 1 3
# 71 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/kern_return.h" 3
typedef int kern_return_t;
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/kern_return.h" 2 3
# 71 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/kern_return.h" 2 3
# 78 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 2 3
# 91 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef natural_t mach_msg_timeout_t;
# 221 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef unsigned int mach_msg_bits_t;
typedef natural_t mach_msg_size_t;
typedef integer_t mach_msg_id_t;



typedef unsigned int mach_msg_priority_t;



typedef unsigned int mach_msg_type_name_t;
# 244 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef unsigned int mach_msg_copy_options_t;
# 258 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef unsigned int mach_msg_guard_flags_t;
# 272 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef unsigned int mach_msg_descriptor_type_t;







#pragma pack(push, 4)

typedef struct{
 natural_t pad1;
 mach_msg_size_t pad2;
 unsigned int pad3 : 24;
 mach_msg_descriptor_type_t type : 8;
} mach_msg_type_descriptor_t;

typedef struct{
 mach_port_t name;


 mach_msg_size_t pad1;

 unsigned int pad2 : 16;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;



} mach_msg_port_descriptor_t;

typedef struct{
 uint32_t address;
 mach_msg_size_t size;
 boolean_t deallocate: 8;
 mach_msg_copy_options_t copy: 8;
 unsigned int pad1: 8;
 mach_msg_descriptor_type_t type: 8;
} mach_msg_ool_descriptor32_t;

typedef struct{
 uint64_t address;
 boolean_t deallocate: 8;
 mach_msg_copy_options_t copy: 8;
 unsigned int pad1: 8;
 mach_msg_descriptor_type_t type: 8;
 mach_msg_size_t size;
} mach_msg_ool_descriptor64_t;

typedef struct{
 void* address;



 boolean_t deallocate: 8;
 mach_msg_copy_options_t copy: 8;
 unsigned int pad1: 8;
 mach_msg_descriptor_type_t type: 8;

 mach_msg_size_t size;




} mach_msg_ool_descriptor_t;

typedef struct{
 uint32_t address;
 mach_msg_size_t count;
 boolean_t deallocate: 8;
 mach_msg_copy_options_t copy: 8;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;
} mach_msg_ool_ports_descriptor32_t;

typedef struct{
 uint64_t address;
 boolean_t deallocate: 8;
 mach_msg_copy_options_t copy: 8;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;
 mach_msg_size_t count;
} mach_msg_ool_ports_descriptor64_t;

typedef struct{
 void* address;



 boolean_t deallocate: 8;
 mach_msg_copy_options_t copy: 8;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;

 mach_msg_size_t count;




} mach_msg_ool_ports_descriptor_t;

typedef struct{
 uint32_t context;
 mach_port_name_t name;
 mach_msg_guard_flags_t flags : 16;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;
} mach_msg_guarded_port_descriptor32_t;

typedef struct{
 uint64_t context;
 mach_msg_guard_flags_t flags : 16;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;
 mach_port_name_t name;
} mach_msg_guarded_port_descriptor64_t;

typedef struct{
# 402 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
 mach_port_context_t context;



 mach_msg_guard_flags_t flags : 16;
 mach_msg_type_name_t disposition : 8;
 mach_msg_descriptor_type_t type : 8;

 mach_port_name_t name;


} mach_msg_guarded_port_descriptor_t;
# 429 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef union{
 mach_msg_port_descriptor_t port;
 mach_msg_ool_descriptor_t out_of_line;
 mach_msg_ool_ports_descriptor_t ool_ports;
 mach_msg_type_descriptor_t type;
 mach_msg_guarded_port_descriptor_t guarded_port;
} mach_msg_descriptor_t;


typedef struct{
 mach_msg_size_t msgh_descriptor_count;
} mach_msg_body_t;




typedef struct{
 mach_msg_bits_t msgh_bits;
 mach_msg_size_t msgh_size;
 mach_port_t msgh_remote_port;
 mach_port_t msgh_local_port;
 mach_port_name_t msgh_voucher_port;
 mach_msg_id_t msgh_id;
} mach_msg_header_t;




typedef struct{
 mach_msg_header_t header;
 mach_msg_body_t body;
} mach_msg_base_t;

typedef unsigned int mach_msg_trailer_type_t;



typedef unsigned int mach_msg_trailer_size_t;
typedef char *mach_msg_trailer_info_t;

typedef struct{
 mach_msg_trailer_type_t msgh_trailer_type;
 mach_msg_trailer_size_t msgh_trailer_size;
} mach_msg_trailer_t;
# 483 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef struct{
 mach_msg_trailer_type_t msgh_trailer_type;
 mach_msg_trailer_size_t msgh_trailer_size;
 mach_port_seqno_t msgh_seqno;
} mach_msg_seqno_trailer_t;

typedef struct{
 unsigned int val[2];
} security_token_t;

typedef struct{
 mach_msg_trailer_type_t msgh_trailer_type;
 mach_msg_trailer_size_t msgh_trailer_size;
 mach_port_seqno_t msgh_seqno;
 security_token_t msgh_sender;
} mach_msg_security_trailer_t;
# 509 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef struct{
 unsigned int val[8];
} audit_token_t;

typedef struct{
 mach_msg_trailer_type_t msgh_trailer_type;
 mach_msg_trailer_size_t msgh_trailer_size;
 mach_port_seqno_t msgh_seqno;
 security_token_t msgh_sender;
 audit_token_t msgh_audit;
} mach_msg_audit_trailer_t;

typedef struct{
 mach_msg_trailer_type_t msgh_trailer_type;
 mach_msg_trailer_size_t msgh_trailer_size;
 mach_port_seqno_t msgh_seqno;
 security_token_t msgh_sender;
 audit_token_t msgh_audit;
 mach_port_context_t msgh_context;
} mach_msg_context_trailer_t;
# 551 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef struct{
 mach_port_name_t sender;
} msg_labels_t;






typedef struct{
 mach_msg_trailer_type_t msgh_trailer_type;
 mach_msg_trailer_size_t msgh_trailer_size;
 mach_port_seqno_t msgh_seqno;
 security_token_t msgh_sender;
 audit_token_t msgh_audit;
 mach_port_context_t msgh_context;
 int msgh_ad;
 msg_labels_t msgh_labels;
} mach_msg_mac_trailer_t;
# 612 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef mach_msg_mac_trailer_t mach_msg_max_trailer_t;
# 622 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef mach_msg_security_trailer_t mach_msg_format_0_trailer_t;







extern const security_token_t KERNEL_SECURITY_TOKEN;


extern const audit_token_t KERNEL_AUDIT_TOKEN;

typedef integer_t mach_msg_options_t;

typedef struct{
 mach_msg_header_t header;
} mach_msg_empty_send_t;

typedef struct{
 mach_msg_header_t header;
 mach_msg_trailer_t trailer;
} mach_msg_empty_rcv_t;

typedef union{
 mach_msg_empty_send_t send;
 mach_msg_empty_rcv_t rcv;
} mach_msg_empty_t;

#pragma pack(pop)
# 682 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef natural_t mach_msg_type_size_t;
typedef natural_t mach_msg_type_number_t;
# 726 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef integer_t mach_msg_option_t;
# 912 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
typedef kern_return_t mach_msg_return_t;
# 1028 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
extern mach_msg_return_t mach_msg_overwrite(
 mach_msg_header_t *msg,
 mach_msg_option_t option,
 mach_msg_size_t send_size,
 mach_msg_size_t rcv_size,
 mach_port_name_t rcv_name,
 mach_msg_timeout_t timeout,
 mach_port_name_t notify,
 mach_msg_header_t *rcv_msg,
 mach_msg_size_t rcv_limit);
# 1050 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/message.h" 3
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
extern mach_msg_return_t mach_msg(
 mach_msg_header_t *msg,
 mach_msg_option_t option,
 mach_msg_size_t send_size,
 mach_msg_size_t rcv_size,
 mach_port_name_t rcv_name,
 mach_msg_timeout_t timeout,
 mach_port_name_t notify);







__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
extern kern_return_t mach_voucher_deallocate(
 mach_port_name_t voucher);
# 67 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/host_info.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_statistics.h" 1 3
# 84 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_statistics.h" 3
struct vm_statistics {
 natural_t free_count;
 natural_t active_count;
 natural_t inactive_count;
 natural_t wire_count;
 natural_t zero_fill_count;
 natural_t reactivations;
 natural_t pageins;
 natural_t pageouts;
 natural_t faults;
 natural_t cow_faults;
 natural_t lookups;
 natural_t hits;


 natural_t purgeable_count;
 natural_t purges;
# 109 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_statistics.h" 3
 natural_t speculative_count;
};


typedef struct vm_statistics *vm_statistics_t;
typedef struct vm_statistics vm_statistics_data_t;
# 132 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_statistics.h" 3
struct vm_statistics64 {
 natural_t free_count;
 natural_t active_count;
 natural_t inactive_count;
 natural_t wire_count;
 uint64_t zero_fill_count;
 uint64_t reactivations;
 uint64_t pageins;
 uint64_t pageouts;
 uint64_t faults;
 uint64_t cow_faults;
 uint64_t lookups;
 uint64_t hits;
 uint64_t purges;
 natural_t purgeable_count;






 natural_t speculative_count;


 uint64_t decompressions;
 uint64_t compressions;
 uint64_t swapins;
 uint64_t swapouts;
 natural_t compressor_page_count;
 natural_t throttled_count;
 natural_t external_page_count;
 natural_t internal_page_count;
 uint64_t total_uncompressed_pages_in_compressor;
} __attribute__((aligned(8)));

typedef struct vm_statistics64 *vm_statistics64_t;
typedef struct vm_statistics64 vm_statistics64_data_t;
# 188 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_statistics.h" 3
struct vm_extmod_statistics {
 int64_t task_for_pid_count;
 int64_t task_for_pid_caller_count;
 int64_t thread_creation_count;
 int64_t thread_creation_caller_count;
 int64_t thread_set_state_count;
 int64_t thread_set_state_caller_count;
} __attribute__((aligned(8)));

typedef struct vm_extmod_statistics *vm_extmod_statistics_t;
typedef struct vm_extmod_statistics vm_extmod_statistics_data_t;

typedef struct vm_purgeable_stat {
 uint64_t count;
 uint64_t size;
}vm_purgeable_stat_t;

struct vm_purgeable_info {
 vm_purgeable_stat_t fifo_data[8];
 vm_purgeable_stat_t obsolete_data;
 vm_purgeable_stat_t lifo_data[8];
};

typedef struct vm_purgeable_info *vm_purgeable_info_t;
# 361 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_statistics.h" 3
enum virtual_memory_guard_exception_codes {
 kGUARD_EXC_DEALLOC_GAP = 1u << 0
};
# 68 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/host_info.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine.h" 1 3
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine.h" 3
typedef integer_t cpu_type_t;
typedef integer_t cpu_subtype_t;
typedef integer_t cpu_threadtype_t;
# 69 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/host_info.h" 2 3

# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/time_value.h" 1 3
# 66 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/time_value.h" 3
struct time_value {
 integer_t seconds;
 integer_t microseconds;
};

typedef struct time_value time_value_t;
# 71 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/host_info.h" 2 3






typedef integer_t *host_info_t;
typedef integer_t *host_info64_t;


typedef integer_t host_info_data_t[(1024)];


typedef char kernel_version_t[(512)];


typedef char kernel_boot_info_t[(4096)];





typedef integer_t host_flavor_t;
# 120 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/host_info.h" 3
struct host_can_has_debugger_info {
 boolean_t can_has_debugger;
};
typedef struct host_can_has_debugger_info host_can_has_debugger_info_data_t;
typedef struct host_can_has_debugger_info *host_can_has_debugger_info_t;



#pragma pack(push, 4)

struct host_basic_info {
 integer_t max_cpus;
 integer_t avail_cpus;
 natural_t memory_size;
 cpu_type_t cpu_type;
 cpu_subtype_t cpu_subtype;
 cpu_threadtype_t cpu_threadtype;
 integer_t physical_cpu;
 integer_t physical_cpu_max;
 integer_t logical_cpu;
 integer_t logical_cpu_max;
 uint64_t max_mem;
};

#pragma pack(pop)

typedef struct host_basic_info host_basic_info_data_t;
typedef struct host_basic_info *host_basic_info_t;



struct host_sched_info {
 integer_t min_timeout;
 integer_t min_quantum;
};

typedef struct host_sched_info host_sched_info_data_t;
typedef struct host_sched_info *host_sched_info_t;



struct kernel_resource_sizes {
 natural_t task;
 natural_t thread;
 natural_t port;
 natural_t memory_region;
 natural_t memory_object;
};

typedef struct kernel_resource_sizes kernel_resource_sizes_data_t;
typedef struct kernel_resource_sizes *kernel_resource_sizes_t;



struct host_priority_info {
 integer_t kernel_priority;
 integer_t system_priority;
 integer_t server_priority;
 integer_t user_priority;
 integer_t depress_priority;
 integer_t idle_priority;
 integer_t minimum_priority;
 integer_t maximum_priority;
};

typedef struct host_priority_info host_priority_info_data_t;
typedef struct host_priority_info *host_priority_info_t;
# 204 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/host_info.h" 3
struct host_load_info {
 integer_t avenrun[3];
 integer_t mach_factor[3];
};

typedef struct host_load_info host_load_info_data_t;
typedef struct host_load_info *host_load_info_t;



typedef struct vm_purgeable_info host_purgable_info_data_t;
typedef struct vm_purgeable_info *host_purgable_info_t;
# 255 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/host_info.h" 3
struct host_cpu_load_info {
 natural_t cpu_ticks[4];
};

typedef struct host_cpu_load_info host_cpu_load_info_data_t;
typedef struct host_cpu_load_info *host_cpu_load_info_t;



struct host_preferred_user_arch {
 cpu_type_t cpu_type;
 cpu_subtype_t cpu_subtype;
};

typedef struct host_preferred_user_arch host_preferred_user_arch_data_t;
typedef struct host_preferred_user_arch *host_preferred_user_arch_t;
# 81 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/host_notify.h" 1 3
# 82 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/host_special_ports.h" 1 3
# 83 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/memory_object_types.h" 1 3
# 75 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/memory_object_types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_prot.h" 1 3
# 75 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_prot.h" 3
typedef int vm_prot_t;
# 76 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/memory_object_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_sync.h" 1 3
# 66 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_sync.h" 3
typedef unsigned vm_sync_t;
# 77 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/memory_object_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_types.h" 1 3
# 40 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_types.h" 3
typedef vm_offset_t pointer_t;
typedef vm_offset_t vm_address_t;







typedef uint64_t addr64_t;
# 61 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_types.h" 3
typedef uint32_t reg64_t;






typedef uint32_t ppnum_t;
# 103 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_types.h" 3
typedef mach_port_t vm_map_t;
# 117 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_types.h" 3
typedef uint64_t vm_object_offset_t;
typedef uint64_t vm_object_size_t;
# 208 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_types.h" 3
typedef mach_port_t upl_t;
typedef mach_port_t vm_named_entry_t;
# 78 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/memory_object_types.h" 2 3






typedef unsigned long long memory_object_offset_t;
typedef unsigned long long memory_object_size_t;
typedef natural_t memory_object_cluster_size_t;
typedef natural_t * memory_object_fault_info_t;

typedef unsigned long long vm_object_id_t;
# 174 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/memory_object_types.h" 3
typedef mach_port_t memory_object_t;
typedef mach_port_t memory_object_control_t;



typedef memory_object_t *memory_object_array_t;




typedef mach_port_t memory_object_name_t;



typedef mach_port_t memory_object_default_t;
# 198 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/memory_object_types.h" 3
typedef int memory_object_copy_strategy_t;
# 234 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/memory_object_types.h" 3
typedef int memory_object_return_t;
# 263 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/memory_object_types.h" 3
typedef int *memory_object_info_t;
typedef int memory_object_flavor_t;
typedef int memory_object_info_data_t[(1024)];
# 317 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/memory_object_types.h" 3
struct memory_object_perf_info {
 memory_object_cluster_size_t cluster_size;
 boolean_t may_cache;
};

struct memory_object_attr_info {
 memory_object_copy_strategy_t copy_strategy;
 memory_object_cluster_size_t cluster_size;
 boolean_t may_cache_object;
 boolean_t temporary;
};

struct memory_object_behave_info {
 memory_object_copy_strategy_t copy_strategy;
 boolean_t temporary;
 boolean_t invalidate;
 boolean_t silent_overwrite;
 boolean_t advisory_pageout;
};


typedef struct memory_object_behave_info *memory_object_behave_info_t;
typedef struct memory_object_behave_info memory_object_behave_info_data_t;

typedef struct memory_object_perf_info *memory_object_perf_info_t;
typedef struct memory_object_perf_info memory_object_perf_info_data_t;

typedef struct memory_object_attr_info *memory_object_attr_info_t;
typedef struct memory_object_attr_info memory_object_attr_info_data_t;
# 86 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3

# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/exception_types.h" 1 3
# 62 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/exception_types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/exception.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/exception.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/exception.h" 1 3
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/exception.h" 2 3
# 63 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/exception_types.h" 2 3
# 185 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/exception_types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_status.h" 1 3
# 76 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_status.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/thread_status.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/thread_status.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/thread_status.h" 1 3
# 72 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/thread_status.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/fp_reg.h" 1 3
# 73 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/thread_status.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/thread_state.h" 1 3
# 74 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/thread_status.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/i386/eflags.h" 1 3
# 75 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/thread_status.h" 2 3
# 163 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/thread_status.h" 3
struct x86_state_hdr {
 uint32_t flavor;
 uint32_t count;
};
typedef struct x86_state_hdr x86_state_hdr_t;
# 181 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/thread_status.h" 3
typedef struct __darwin_i386_thread_state i386_thread_state_t;



typedef struct __darwin_i386_thread_state x86_thread_state32_t;






typedef struct __darwin_i386_float_state i386_float_state_t;



typedef struct __darwin_i386_float_state x86_float_state32_t;



typedef struct __darwin_i386_avx_state x86_avx_state32_t;



typedef struct __darwin_i386_avx512_state x86_avx512_state32_t;






typedef struct __darwin_i386_exception_state i386_exception_state_t;



typedef struct __darwin_i386_exception_state x86_exception_state32_t;





typedef struct __darwin_x86_debug_state32 x86_debug_state32_t;





typedef struct __darwin_x86_thread_state64 x86_thread_state64_t;



typedef struct __darwin_x86_thread_full_state64 x86_thread_full_state64_t;



typedef struct __darwin_x86_float_state64 x86_float_state64_t;



typedef struct __darwin_x86_avx_state64 x86_avx_state64_t;



typedef struct __darwin_x86_avx512_state64 x86_avx512_state64_t;



typedef struct __darwin_x86_exception_state64 x86_exception_state64_t;





typedef struct __darwin_x86_debug_state64 x86_debug_state64_t;





typedef struct __x86_pagein_state x86_pagein_state_t;
# 268 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/thread_status.h" 3
struct x86_thread_state {
 x86_state_hdr_t tsh;
 union {
  x86_thread_state32_t ts32;
  x86_thread_state64_t ts64;
 } uts;
};

struct x86_float_state {
 x86_state_hdr_t fsh;
 union {
  x86_float_state32_t fs32;
  x86_float_state64_t fs64;
 } ufs;
};

struct x86_exception_state {
 x86_state_hdr_t esh;
 union {
  x86_exception_state32_t es32;
  x86_exception_state64_t es64;
 } ues;
};

struct x86_debug_state {
 x86_state_hdr_t dsh;
 union {
  x86_debug_state32_t ds32;
  x86_debug_state64_t ds64;
 } uds;
};

struct x86_avx_state {
 x86_state_hdr_t ash;
 union {
  x86_avx_state32_t as32;
  x86_avx_state64_t as64;
 } ufs;
};

struct x86_avx512_state {
 x86_state_hdr_t ash;
 union {
  x86_avx512_state32_t as32;
  x86_avx512_state64_t as64;
 } ufs;
};

typedef struct x86_thread_state x86_thread_state_t;



typedef struct x86_float_state x86_float_state_t;



typedef struct x86_exception_state x86_exception_state_t;



typedef struct x86_debug_state x86_debug_state_t;



typedef struct x86_avx_state x86_avx_state_t;



typedef struct x86_avx512_state x86_avx512_state_t;
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/thread_status.h" 2 3
# 77 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_status.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/thread_state.h" 1 3
# 78 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_status.h" 2 3





typedef natural_t *thread_state_t;


typedef natural_t thread_state_data_t[(614)];







typedef int thread_state_flavor_t;
typedef thread_state_flavor_t *thread_state_flavor_array_t;
# 186 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/exception_types.h" 2 3





typedef int exception_type_t;
typedef integer_t exception_data_type_t;
typedef int64_t mach_exception_data_type_t;
typedef int exception_behavior_t;
typedef exception_data_type_t *exception_data_t;
typedef mach_exception_data_type_t *mach_exception_data_t;
typedef unsigned int exception_mask_t;
typedef exception_mask_t *exception_mask_array_t;
typedef exception_behavior_t *exception_behavior_array_t;
typedef thread_state_flavor_t *exception_flavor_array_t;
typedef mach_port_t *exception_port_array_t;
typedef mach_exception_data_type_t mach_exception_code_t;
typedef mach_exception_data_type_t mach_exception_subcode_t;
# 88 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3

# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 1 3
# 32 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/std_types.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 2 3
# 53 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 3
typedef mach_port_t mach_voucher_t;


typedef mach_port_name_t mach_voucher_name_t;


typedef mach_voucher_name_t *mach_voucher_name_array_t;







typedef mach_voucher_t ipc_voucher_t;
# 81 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 3
typedef uint32_t mach_voucher_selector_t;
# 91 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 3
typedef uint32_t mach_voucher_attr_key_t;
typedef mach_voucher_attr_key_t *mach_voucher_attr_key_array_t;
# 116 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 3
typedef uint8_t *mach_voucher_attr_content_t;
typedef uint32_t mach_voucher_attr_content_size_t;





typedef uint32_t mach_voucher_attr_command_t;
# 133 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 3
typedef uint32_t mach_voucher_attr_recipe_command_t;
typedef mach_voucher_attr_recipe_command_t *mach_voucher_attr_recipe_command_array_t;
# 161 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 3
#pragma pack(push, 1)

typedef struct mach_voucher_attr_recipe_data {
 mach_voucher_attr_key_t key;
 mach_voucher_attr_recipe_command_t command;
 mach_voucher_name_t previous_voucher;
 mach_voucher_attr_content_size_t content_size;
 uint8_t content[];
} mach_voucher_attr_recipe_data_t;
typedef mach_voucher_attr_recipe_data_t *mach_voucher_attr_recipe_t;
typedef mach_msg_type_number_t mach_voucher_attr_recipe_size_t;


typedef uint8_t *mach_voucher_attr_raw_recipe_t;
typedef mach_voucher_attr_raw_recipe_t mach_voucher_attr_raw_recipe_array_t;
typedef mach_msg_type_number_t mach_voucher_attr_raw_recipe_size_t;
typedef mach_msg_type_number_t mach_voucher_attr_raw_recipe_array_size_t;




#pragma pack(pop)
# 194 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 3
typedef mach_port_t mach_voucher_attr_manager_t;
# 203 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 3
typedef mach_port_t mach_voucher_attr_control_t;
# 212 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 3
typedef mach_port_t ipc_voucher_attr_manager_t;
typedef mach_port_t ipc_voucher_attr_control_t;
# 231 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 3
typedef uint64_t mach_voucher_attr_value_handle_t;
typedef mach_voucher_attr_value_handle_t *mach_voucher_attr_value_handle_array_t;

typedef mach_msg_type_number_t mach_voucher_attr_value_handle_array_size_t;


typedef uint32_t mach_voucher_attr_value_reference_t;
typedef uint32_t mach_voucher_attr_value_flags_t;




typedef uint32_t mach_voucher_attr_control_flags_t;
# 254 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_voucher_types.h" 3
typedef uint32_t mach_voucher_attr_importance_refs;
# 90 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/processor_info.h" 1 3
# 72 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/processor_info.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/processor_info.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/processor_info.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/i386/processor_info.h" 1 3
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/processor_info.h" 2 3
# 73 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/processor_info.h" 2 3




typedef integer_t *processor_info_t;
typedef integer_t *processor_info_array_t;


typedef integer_t processor_info_data_t[(1024)];


typedef integer_t *processor_set_info_t;


typedef integer_t processor_set_info_data_t[(1024)];




typedef int processor_flavor_t;





struct processor_basic_info {
 cpu_type_t cpu_type;
 cpu_subtype_t cpu_subtype;
 boolean_t running;
 int slot_num;
 boolean_t is_master;
};

typedef struct processor_basic_info processor_basic_info_data_t;
typedef struct processor_basic_info *processor_basic_info_t;



struct processor_cpu_load_info {
 unsigned int cpu_ticks[4];
};

typedef struct processor_cpu_load_info processor_cpu_load_info_data_t;
typedef struct processor_cpu_load_info *processor_cpu_load_info_t;
# 125 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/processor_info.h" 3
typedef int processor_set_flavor_t;


struct processor_set_basic_info {
 int processor_count;
 int default_policy;
};

typedef struct processor_set_basic_info processor_set_basic_info_data_t;
typedef struct processor_set_basic_info *processor_set_basic_info_t;





struct processor_set_load_info {
 int task_count;
 int thread_count;
 integer_t load_average;
 integer_t mach_factor;
};

typedef struct processor_set_load_info processor_set_load_info_data_t;
typedef struct processor_set_load_info *processor_set_load_info_t;
# 91 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_info.h" 1 3
# 71 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_info.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/policy.h" 1 3
# 79 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/policy.h" 3
typedef int policy_t;
typedef integer_t *policy_info_t;
typedef integer_t *policy_base_t;
typedef integer_t *policy_limit_t;
# 113 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/policy.h" 3
struct policy_timeshare_base {
 integer_t base_priority;
};
struct policy_timeshare_limit {
 integer_t max_priority;
};
struct policy_timeshare_info {
 integer_t max_priority;
 integer_t base_priority;
 integer_t cur_priority;
 boolean_t depressed;
 integer_t depress_priority;
};

typedef struct policy_timeshare_base *policy_timeshare_base_t;
typedef struct policy_timeshare_limit *policy_timeshare_limit_t;
typedef struct policy_timeshare_info *policy_timeshare_info_t;

typedef struct policy_timeshare_base policy_timeshare_base_data_t;
typedef struct policy_timeshare_limit policy_timeshare_limit_data_t;
typedef struct policy_timeshare_info policy_timeshare_info_data_t;
# 147 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/policy.h" 3
struct policy_rr_base {
 integer_t base_priority;
 integer_t quantum;
};
struct policy_rr_limit {
 integer_t max_priority;
};
struct policy_rr_info {
 integer_t max_priority;
 integer_t base_priority;
 integer_t quantum;
 boolean_t depressed;
 integer_t depress_priority;
};

typedef struct policy_rr_base *policy_rr_base_t;
typedef struct policy_rr_limit *policy_rr_limit_t;
typedef struct policy_rr_info *policy_rr_info_t;

typedef struct policy_rr_base policy_rr_base_data_t;
typedef struct policy_rr_limit policy_rr_limit_data_t;
typedef struct policy_rr_info policy_rr_info_data_t;
# 181 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/policy.h" 3
struct policy_fifo_base {
 integer_t base_priority;
};
struct policy_fifo_limit {
 integer_t max_priority;
};
struct policy_fifo_info {
 integer_t max_priority;
 integer_t base_priority;
 boolean_t depressed;
 integer_t depress_priority;
};

typedef struct policy_fifo_base *policy_fifo_base_t;
typedef struct policy_fifo_limit *policy_fifo_limit_t;
typedef struct policy_fifo_info *policy_fifo_info_t;

typedef struct policy_fifo_base policy_fifo_base_data_t;
typedef struct policy_fifo_limit policy_fifo_limit_data_t;
typedef struct policy_fifo_info policy_fifo_info_data_t;
# 213 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/policy.h" 3
struct policy_bases {
 policy_timeshare_base_data_t ts;
 policy_rr_base_data_t rr;
 policy_fifo_base_data_t fifo;
};

struct policy_limits {
 policy_timeshare_limit_data_t ts;
 policy_rr_limit_data_t rr;
 policy_fifo_limit_data_t fifo;
};

struct policy_infos {
 policy_timeshare_info_data_t ts;
 policy_rr_info_data_t rr;
 policy_fifo_info_data_t fifo;
};

typedef struct policy_bases policy_base_data_t;
typedef struct policy_limits policy_limit_data_t;
typedef struct policy_infos policy_info_data_t;
# 72 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_info.h" 2 3








typedef natural_t task_flavor_t;
typedef integer_t *task_info_t;



typedef integer_t task_info_data_t[(1024)];





#pragma pack(push, 4)





struct task_basic_info_32 {
 integer_t suspend_count;
 natural_t virtual_size;
 natural_t resident_size;
 time_value_t user_time;

 time_value_t system_time;

 policy_t policy;
};
typedef struct task_basic_info_32 task_basic_info_32_data_t;
typedef struct task_basic_info_32 *task_basic_info_32_t;




struct task_basic_info_64 {
 integer_t suspend_count;
# 125 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_info.h" 3
 mach_vm_size_t virtual_size;
 mach_vm_size_t resident_size;

 time_value_t user_time;

 time_value_t system_time;

 policy_t policy;
};
typedef struct task_basic_info_64 task_basic_info_64_data_t;
typedef struct task_basic_info_64 *task_basic_info_64_t;
# 174 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_info.h" 3
struct task_basic_info {
 integer_t suspend_count;
 vm_size_t virtual_size;
 vm_size_t resident_size;
 time_value_t user_time;

 time_value_t system_time;

 policy_t policy;
};

typedef struct task_basic_info task_basic_info_data_t;
typedef struct task_basic_info *task_basic_info_t;
# 199 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_info.h" 3
struct task_events_info {
 integer_t faults;
 integer_t pageins;
 integer_t cow_faults;
 integer_t messages_sent;
 integer_t messages_received;
 integer_t syscalls_mach;
 integer_t syscalls_unix;
 integer_t csw;
};
typedef struct task_events_info task_events_info_data_t;
typedef struct task_events_info *task_events_info_t;






struct task_thread_times_info {
 time_value_t user_time;

 time_value_t system_time;

};

typedef struct task_thread_times_info task_thread_times_info_data_t;
typedef struct task_thread_times_info *task_thread_times_info_t;





struct task_absolutetime_info {
 uint64_t total_user;
 uint64_t total_system;
 uint64_t threads_user;
 uint64_t threads_system;
};

typedef struct task_absolutetime_info task_absolutetime_info_data_t;
typedef struct task_absolutetime_info *task_absolutetime_info_t;





struct task_kernelmemory_info {
 uint64_t total_palloc;
 uint64_t total_pfree;
 uint64_t total_salloc;
 uint64_t total_sfree;
};

typedef struct task_kernelmemory_info task_kernelmemory_info_data_t;
typedef struct task_kernelmemory_info *task_kernelmemory_info_t;
# 268 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_info.h" 3
struct task_affinity_tag_info {
 integer_t set_count;
 integer_t min;
 integer_t max;
 integer_t task_count;
};
typedef struct task_affinity_tag_info task_affinity_tag_info_data_t;
typedef struct task_affinity_tag_info *task_affinity_tag_info_t;





struct task_dyld_info {
 mach_vm_address_t all_image_info_addr;
 mach_vm_size_t all_image_info_size;
 integer_t all_image_info_format;
};
typedef struct task_dyld_info task_dyld_info_data_t;
typedef struct task_dyld_info *task_dyld_info_t;
# 317 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_info.h" 3
struct task_extmod_info {
 unsigned char task_uuid[16];
 vm_extmod_statistics_data_t extmod_statistics;
};
typedef struct task_extmod_info task_extmod_info_data_t;
typedef struct task_extmod_info *task_extmod_info_t;





struct mach_task_basic_info {
 mach_vm_size_t virtual_size;
 mach_vm_size_t resident_size;
 mach_vm_size_t resident_size_max;
 time_value_t user_time;

 time_value_t system_time;

 policy_t policy;
 integer_t suspend_count;
};
typedef struct mach_task_basic_info mach_task_basic_info_data_t;
typedef struct mach_task_basic_info *mach_task_basic_info_t;






struct task_power_info {
 uint64_t total_user;
 uint64_t total_system;
 uint64_t task_interrupt_wakeups;
 uint64_t task_platform_idle_wakeups;
 uint64_t task_timer_wakeups_bin_1;
 uint64_t task_timer_wakeups_bin_2;
};

typedef struct task_power_info task_power_info_data_t;
typedef struct task_power_info *task_power_info_t;







struct task_vm_info {
 mach_vm_size_t virtual_size;
 integer_t region_count;
 integer_t page_size;
 mach_vm_size_t resident_size;
 mach_vm_size_t resident_size_peak;

 mach_vm_size_t device;
 mach_vm_size_t device_peak;
 mach_vm_size_t internal;
 mach_vm_size_t internal_peak;
 mach_vm_size_t external;
 mach_vm_size_t external_peak;
 mach_vm_size_t reusable;
 mach_vm_size_t reusable_peak;
 mach_vm_size_t purgeable_volatile_pmap;
 mach_vm_size_t purgeable_volatile_resident;
 mach_vm_size_t purgeable_volatile_virtual;
 mach_vm_size_t compressed;
 mach_vm_size_t compressed_peak;
 mach_vm_size_t compressed_lifetime;


 mach_vm_size_t phys_footprint;


 mach_vm_address_t min_address;
 mach_vm_address_t max_address;


 int64_t ledger_phys_footprint_peak;
 int64_t ledger_purgeable_nonvolatile;
 int64_t ledger_purgeable_novolatile_compressed;
 int64_t ledger_purgeable_volatile;
 int64_t ledger_purgeable_volatile_compressed;
 int64_t ledger_tag_network_nonvolatile;
 int64_t ledger_tag_network_nonvolatile_compressed;
 int64_t ledger_tag_network_volatile;
 int64_t ledger_tag_network_volatile_compressed;
 int64_t ledger_tag_media_footprint;
 int64_t ledger_tag_media_footprint_compressed;
 int64_t ledger_tag_media_nofootprint;
 int64_t ledger_tag_media_nofootprint_compressed;
 int64_t ledger_tag_graphics_footprint;
 int64_t ledger_tag_graphics_footprint_compressed;
 int64_t ledger_tag_graphics_nofootprint;
 int64_t ledger_tag_graphics_nofootprint_compressed;
 int64_t ledger_tag_neural_footprint;
 int64_t ledger_tag_neural_footprint_compressed;
 int64_t ledger_tag_neural_nofootprint;
 int64_t ledger_tag_neural_nofootprint_compressed;


 uint64_t limit_bytes_remaining;


 integer_t decompressions;
};
typedef struct task_vm_info task_vm_info_data_t;
typedef struct task_vm_info *task_vm_info_t;
# 439 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_info.h" 3
typedef struct vm_purgeable_info task_purgable_info_t;



struct task_trace_memory_info {
 uint64_t user_memory_address;
 uint64_t buffer_size;
 uint64_t mailbox_array_size;
};
typedef struct task_trace_memory_info task_trace_memory_info_data_t;
typedef struct task_trace_memory_info * task_trace_memory_info_t;




struct task_wait_state_info {
 uint64_t total_wait_state_time;
 uint64_t total_wait_sfi_state_time;
 uint32_t _reserved[4];
};
typedef struct task_wait_state_info task_wait_state_info_data_t;
typedef struct task_wait_state_info * task_wait_state_info_t;





typedef struct {
 uint64_t task_gpu_utilisation;
 uint64_t task_gpu_stat_reserved0;
 uint64_t task_gpu_stat_reserved1;
 uint64_t task_gpu_stat_reserved2;
} gpu_energy_data;

typedef gpu_energy_data *gpu_energy_data_t;
struct task_power_info_v2 {
 task_power_info_data_t cpu_energy;
 gpu_energy_data gpu_energy;



 uint64_t task_ptime;
 uint64_t task_pset_switches;
};

typedef struct task_power_info_v2 task_power_info_v2_data_t;
typedef struct task_power_info_v2 *task_power_info_v2_t;
# 509 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_info.h" 3
struct task_flags_info {
 uint32_t flags;
};
typedef struct task_flags_info task_flags_info_data_t;
typedef struct task_flags_info * task_flags_info_t;
# 538 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_info.h" 3
typedef uint32_t task_exc_guard_behavior_t;
# 573 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_info.h" 3
#pragma pack(pop)
# 92 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_inspect.h" 1 3
# 37 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_inspect.h" 3
typedef natural_t task_inspect_flavor_t;

enum task_inspect_flavor {
 TASK_INSPECT_BASIC_COUNTS = 1,
};

struct task_inspect_basic_counts {
 uint64_t instructions;
 uint64_t cycles;
};


typedef struct task_inspect_basic_counts task_inspect_basic_counts_data_t;
typedef struct task_inspect_basic_counts *task_inspect_basic_counts_t;

typedef integer_t *task_inspect_info_t;
# 93 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_policy.h" 1 3
# 32 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_policy.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_policy.h" 2 3
# 51 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_policy.h" 3
typedef natural_t task_policy_flavor_t;
typedef integer_t *task_policy_t;
# 114 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_policy.h" 3
enum task_role {
 TASK_RENICED = -1,
 TASK_UNSPECIFIED = 0,
 TASK_FOREGROUND_APPLICATION = 1,
 TASK_BACKGROUND_APPLICATION = 2,
 TASK_CONTROL_APPLICATION = 3,
 TASK_GRAPHICS_SERVER = 4,
 TASK_THROTTLE_APPLICATION = 5,
 TASK_NONUI_APPLICATION = 6,
 TASK_DEFAULT_APPLICATION = 7,
 TASK_DARWINBG_APPLICATION = 8,
};

typedef integer_t task_role_t;

struct task_category_policy {
 task_role_t role;
};

typedef struct task_category_policy task_category_policy_data_t;
typedef struct task_category_policy *task_category_policy_t;





enum task_latency_qos {
 LATENCY_QOS_TIER_UNSPECIFIED = 0x0,
 LATENCY_QOS_TIER_0 = ((0xFF << 16) | 1),
 LATENCY_QOS_TIER_1 = ((0xFF << 16) | 2),
 LATENCY_QOS_TIER_2 = ((0xFF << 16) | 3),
 LATENCY_QOS_TIER_3 = ((0xFF << 16) | 4),
 LATENCY_QOS_TIER_4 = ((0xFF << 16) | 5),
 LATENCY_QOS_TIER_5 = ((0xFF << 16) | 6)
};
typedef integer_t task_latency_qos_t;
enum task_throughput_qos {
 THROUGHPUT_QOS_TIER_UNSPECIFIED = 0x0,
 THROUGHPUT_QOS_TIER_0 = ((0xFE << 16) | 1),
 THROUGHPUT_QOS_TIER_1 = ((0xFE << 16) | 2),
 THROUGHPUT_QOS_TIER_2 = ((0xFE << 16) | 3),
 THROUGHPUT_QOS_TIER_3 = ((0xFE << 16) | 4),
 THROUGHPUT_QOS_TIER_4 = ((0xFE << 16) | 5),
 THROUGHPUT_QOS_TIER_5 = ((0xFE << 16) | 6),
};




typedef integer_t task_throughput_qos_t;

struct task_qos_policy {
 task_latency_qos_t task_latency_qos_tier;
 task_throughput_qos_t task_throughput_qos_tier;
};

typedef struct task_qos_policy *task_qos_policy_t;
# 94 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_special_ports.h" 1 3
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/task_special_ports.h" 3
typedef int task_special_port_t;
# 95 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_info.h" 1 3
# 81 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_info.h" 3
typedef natural_t thread_flavor_t;
typedef integer_t *thread_info_t;


typedef integer_t thread_info_data_t[(32)];






struct thread_basic_info {
 time_value_t user_time;
 time_value_t system_time;
 integer_t cpu_usage;
 policy_t policy;
 integer_t run_state;
 integer_t flags;
 integer_t suspend_count;
 integer_t sleep_time;

};

typedef struct thread_basic_info thread_basic_info_data_t;
typedef struct thread_basic_info *thread_basic_info_t;





struct thread_identifier_info {
 uint64_t thread_id;
 uint64_t thread_handle;
 uint64_t dispatch_qaddr;
};

typedef struct thread_identifier_info thread_identifier_info_data_t;
typedef struct thread_identifier_info *thread_identifier_info_t;
# 152 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_info.h" 3
struct thread_extended_info {
 uint64_t pth_user_time;
 uint64_t pth_system_time;
 int32_t pth_cpu_usage;
 int32_t pth_policy;
 int32_t pth_run_state;
 int32_t pth_flags;
 int32_t pth_sleep_time;
 int32_t pth_curpri;
 int32_t pth_priority;
 int32_t pth_maxpriority;
 char pth_name[64];
};
typedef struct thread_extended_info thread_extended_info_data_t;
typedef struct thread_extended_info * thread_extended_info_t;
# 199 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_info.h" 3
struct io_stat_entry {
 uint64_t count;
 uint64_t size;
};

struct io_stat_info {
 struct io_stat_entry disk_reads;
 struct io_stat_entry io_priority[4];
 struct io_stat_entry paging;
 struct io_stat_entry metadata;
 struct io_stat_entry total_io;
};

typedef struct io_stat_info *io_stat_info_t;
# 96 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_policy.h" 1 3
# 32 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_policy.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_policy.h" 2 3
# 51 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_policy.h" 3
typedef natural_t thread_policy_flavor_t;
typedef integer_t *thread_policy_t;
# 86 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_policy.h" 3
struct thread_standard_policy {
 natural_t no_data;
};

typedef struct thread_standard_policy thread_standard_policy_data_t;
typedef struct thread_standard_policy *thread_standard_policy_t;
# 109 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_policy.h" 3
struct thread_extended_policy {
 boolean_t timeshare;
};

typedef struct thread_extended_policy thread_extended_policy_data_t;
typedef struct thread_extended_policy *thread_extended_policy_t;
# 148 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_policy.h" 3
struct thread_time_constraint_policy {
 uint32_t period;
 uint32_t computation;
 uint32_t constraint;
 boolean_t preemptible;
};

typedef struct thread_time_constraint_policy thread_time_constraint_policy_data_t;

typedef struct thread_time_constraint_policy *thread_time_constraint_policy_t;
# 176 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_policy.h" 3
struct thread_precedence_policy {
 integer_t importance;
};

typedef struct thread_precedence_policy thread_precedence_policy_data_t;
typedef struct thread_precedence_policy *thread_precedence_policy_t;
# 206 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_policy.h" 3
struct thread_affinity_policy {
 integer_t affinity_tag;
};



typedef struct thread_affinity_policy thread_affinity_policy_data_t;
typedef struct thread_affinity_policy *thread_affinity_policy_t;
# 224 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_policy.h" 3
struct thread_background_policy {
 integer_t priority;
};



typedef struct thread_background_policy thread_background_policy_data_t;
typedef struct thread_background_policy *thread_background_policy_t;






typedef integer_t thread_latency_qos_t;

struct thread_latency_qos_policy {
 thread_latency_qos_t thread_latency_qos_tier;
};

typedef struct thread_latency_qos_policy thread_latency_qos_policy_data_t;
typedef struct thread_latency_qos_policy *thread_latency_qos_policy_t;





typedef integer_t thread_throughput_qos_t;

struct thread_throughput_qos_policy {
 thread_throughput_qos_t thread_throughput_qos_tier;
};

typedef struct thread_throughput_qos_policy thread_throughput_qos_policy_data_t;
typedef struct thread_throughput_qos_policy *thread_throughput_qos_policy_t;
# 97 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/thread_special_ports.h" 1 3
# 98 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3


# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/clock_types.h" 1 3
# 51 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/clock_types.h" 3
typedef int alarm_type_t;
typedef int sleep_type_t;
typedef int clock_id_t;
typedef int clock_flavor_t;
typedef int *clock_attr_t;
typedef int clock_res_t;




struct mach_timespec {
 unsigned int tv_sec;
 clock_res_t tv_nsec;
};
typedef struct mach_timespec mach_timespec_t;
# 101 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_attributes.h" 1 3
# 76 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_attributes.h" 3
typedef unsigned int vm_machine_attribute_t;
# 85 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_attributes.h" 3
typedef int vm_machine_attribute_val_t;
# 102 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_inherit.h" 1 3
# 75 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_inherit.h" 3
typedef unsigned int vm_inherit_t;
# 103 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_purgable.h" 1 3
# 53 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_purgable.h" 3
typedef int vm_purgable_t;
# 104 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_behavior.h" 1 3
# 47 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_behavior.h" 3
typedef int vm_behavior_t;
# 105 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3




# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_region.h" 1 3
# 47 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_region.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/machine/vm_param.h" 1 3
# 48 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_region.h" 2 3





#pragma pack(push, 4)




typedef uint32_t vm32_object_id_t;
# 67 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_region.h" 3
typedef int *vm_region_info_t;
typedef int *vm_region_info_64_t;
typedef int *vm_region_recurse_info_t;
typedef int *vm_region_recurse_info_64_t;
typedef int vm_region_flavor_t;
typedef int vm_region_info_data_t[(1024)];


struct vm_region_basic_info_64 {
 vm_prot_t protection;
 vm_prot_t max_protection;
 vm_inherit_t inheritance;
 boolean_t shared;
 boolean_t reserved;
 memory_object_offset_t offset;
 vm_behavior_t behavior;
 unsigned short user_wired_count;
};
typedef struct vm_region_basic_info_64 *vm_region_basic_info_64_t;
typedef struct vm_region_basic_info_64 vm_region_basic_info_data_64_t;
# 103 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_region.h" 3
struct vm_region_basic_info {
 vm_prot_t protection;
 vm_prot_t max_protection;
 vm_inherit_t inheritance;
 boolean_t shared;
 boolean_t reserved;
 uint32_t offset;
 vm_behavior_t behavior;
 unsigned short user_wired_count;
};

typedef struct vm_region_basic_info *vm_region_basic_info_t;
typedef struct vm_region_basic_info vm_region_basic_info_data_t;
# 166 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_region.h" 3
struct vm_region_extended_info {
 vm_prot_t protection;
 unsigned int user_tag;
 unsigned int pages_resident;
 unsigned int pages_shared_now_private;
 unsigned int pages_swapped_out;
 unsigned int pages_dirtied;
 unsigned int ref_count;
 unsigned short shadow_depth;
 unsigned char external_pager;
 unsigned char share_mode;
 unsigned int pages_reusable;
};
typedef struct vm_region_extended_info *vm_region_extended_info_t;
typedef struct vm_region_extended_info vm_region_extended_info_data_t;
# 190 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_region.h" 3
struct vm_region_top_info {
 unsigned int obj_id;
 unsigned int ref_count;
 unsigned int private_pages_resident;
 unsigned int shared_pages_resident;
 unsigned char share_mode;
};

typedef struct vm_region_top_info *vm_region_top_info_t;
typedef struct vm_region_top_info vm_region_top_info_data_t;
# 227 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_region.h" 3
struct vm_region_submap_info {
 vm_prot_t protection;
 vm_prot_t max_protection;
 vm_inherit_t inheritance;
 uint32_t offset;
 unsigned int user_tag;
 unsigned int pages_resident;
 unsigned int pages_shared_now_private;
 unsigned int pages_swapped_out;
 unsigned int pages_dirtied;
 unsigned int ref_count;
 unsigned short shadow_depth;
 unsigned char external_pager;
 unsigned char share_mode;
 boolean_t is_submap;
 vm_behavior_t behavior;
 vm32_object_id_t object_id;
 unsigned short user_wired_count;
};

typedef struct vm_region_submap_info *vm_region_submap_info_t;
typedef struct vm_region_submap_info vm_region_submap_info_data_t;





struct vm_region_submap_info_64 {
 vm_prot_t protection;
 vm_prot_t max_protection;
 vm_inherit_t inheritance;
 memory_object_offset_t offset;
 unsigned int user_tag;
 unsigned int pages_resident;
 unsigned int pages_shared_now_private;
 unsigned int pages_swapped_out;
 unsigned int pages_dirtied;
 unsigned int ref_count;
 unsigned short shadow_depth;
 unsigned char external_pager;
 unsigned char share_mode;
 boolean_t is_submap;
 vm_behavior_t behavior;
 vm32_object_id_t object_id;
 unsigned short user_wired_count;
 unsigned int pages_reusable;
 vm_object_id_t object_id_full;
};

typedef struct vm_region_submap_info_64 *vm_region_submap_info_64_t;
typedef struct vm_region_submap_info_64 vm_region_submap_info_data_64_t;
# 301 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_region.h" 3
struct vm_region_submap_short_info_64 {
 vm_prot_t protection;
 vm_prot_t max_protection;
 vm_inherit_t inheritance;
 memory_object_offset_t offset;
 unsigned int user_tag;
 unsigned int ref_count;
 unsigned short shadow_depth;
 unsigned char external_pager;
 unsigned char share_mode;
 boolean_t is_submap;
 vm_behavior_t behavior;
 vm32_object_id_t object_id;
 unsigned short user_wired_count;
};

typedef struct vm_region_submap_short_info_64 *vm_region_submap_short_info_64_t;
typedef struct vm_region_submap_short_info_64 vm_region_submap_short_info_data_64_t;





struct mach_vm_read_entry {
 mach_vm_address_t address;
 mach_vm_size_t size;
};

struct vm_read_entry {
 vm_address_t address;
 vm_size_t size;
};
# 344 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/vm_region.h" 3
typedef struct mach_vm_read_entry mach_vm_read_entry_t[(256)];
typedef struct vm_read_entry vm_read_entry_t[(256)];




#pragma pack(pop)



typedef int *vm_page_info_t;
typedef int vm_page_info_data_t[];
typedef int vm_page_info_flavor_t;


struct vm_page_info_basic {
 int disposition;
 int ref_count;
 vm_object_id_t object_id;
 memory_object_offset_t offset;
 int depth;
 int __pad;
};
typedef struct vm_page_info_basic *vm_page_info_basic_t;
typedef struct vm_page_info_basic vm_page_info_basic_data_t;
# 110 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/kmod.h" 1 3
# 39 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/kmod.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 1 3
# 40 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/kmod.h" 2 3
# 56 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/kmod.h" 3
typedef int kmod_t;

struct kmod_info;
typedef kern_return_t kmod_start_func_t(struct kmod_info * ki, void * data);
typedef kern_return_t kmod_stop_func_t(struct kmod_info * ki, void * data);
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/kmod.h" 3
#pragma pack(push, 4)


typedef struct kmod_reference {
 struct kmod_reference * next;
 struct kmod_info * info;
} kmod_reference_t;
# 87 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/kmod.h" 3
typedef struct kmod_info {
 struct kmod_info * next;
 int32_t info_version;
 uint32_t id;
 char name[64];
 char version[64];
 int32_t reference_count;
 kmod_reference_t * reference_list;
 vm_address_t address;
 vm_size_t size;
 vm_size_t hdr_size;
 kmod_start_func_t * start;
 kmod_stop_func_t * stop;
} kmod_info_t;



typedef struct kmod_info_32_v1 {
 uint32_t next_addr;
 int32_t info_version;
 uint32_t id;
 uint8_t name[64];
 uint8_t version[64];
 int32_t reference_count;
 uint32_t reference_list_addr;
 uint32_t address;
 uint32_t size;
 uint32_t hdr_size;
 uint32_t start_addr;
 uint32_t stop_addr;
} kmod_info_32_v1_t;



typedef struct kmod_info_64_v1 {
 uint64_t next_addr;
 int32_t info_version;
 uint32_t id;
 uint8_t name[64];
 uint8_t version[64];
 int32_t reference_count;
 uint64_t reference_list_addr;
 uint64_t address;
 uint64_t size;
 uint64_t hdr_size;
 uint64_t start_addr;
 uint64_t stop_addr;
} kmod_info_64_v1_t;

#pragma pack(pop)
# 190 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/kmod.h" 3
typedef void * kmod_args_t;
typedef int kmod_control_flavor_t;
typedef kmod_info_t * kmod_info_array_t;
# 111 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/dyld_kernel.h" 1 3
# 34 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/dyld_kernel.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fsid_t.h" 1 3
# 31 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fsid_t.h" 3
typedef struct fsid { int32_t val[2]; } fsid_t;
# 35 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/dyld_kernel.h" 2 3

# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fsobj_id_t.h" 1 3
# 33 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_fsobj_id_t.h" 3
typedef struct fsobj_id {
 u_int32_t fid_objno;
 u_int32_t fid_generation;
} fsobj_id_t;
# 37 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/dyld_kernel.h" 2 3






struct dyld_kernel_image_info {
 uuid_t uuid;
 fsobj_id_t fsobjid;
 fsid_t fsid;
 uint64_t load_addr;
};

struct dyld_kernel_process_info {
 struct dyld_kernel_image_info cache_image_info;
 uint64_t timestamp;
 uint32_t imageCount;
 uint32_t initialImageCount;
 uint8_t dyldState;
 boolean_t no_cache;
 boolean_t private_cache;
};



typedef struct dyld_kernel_image_info dyld_kernel_image_info_t;
typedef struct dyld_kernel_process_info dyld_kernel_process_info_t;
typedef dyld_kernel_image_info_t *dyld_kernel_image_info_array_t;
# 112 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 2 3
# 171 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 3
typedef mach_port_t task_t;
typedef mach_port_t task_name_t;
typedef mach_port_t task_inspect_t;
typedef mach_port_t task_suspension_token_t;
typedef mach_port_t thread_t;
typedef mach_port_t thread_act_t;
typedef mach_port_t thread_inspect_t;
typedef mach_port_t ipc_space_t;
typedef mach_port_t ipc_space_inspect_t;
typedef mach_port_t coalition_t;
typedef mach_port_t host_t;
typedef mach_port_t host_priv_t;
typedef mach_port_t host_security_t;
typedef mach_port_t processor_t;
typedef mach_port_t processor_set_t;
typedef mach_port_t processor_set_control_t;
typedef mach_port_t semaphore_t;
typedef mach_port_t lock_set_t;
typedef mach_port_t ledger_t;
typedef mach_port_t alarm_t;
typedef mach_port_t clock_serv_t;
typedef mach_port_t clock_ctrl_t;

typedef mach_port_t arcade_register_t;







typedef processor_set_t processor_set_name_t;




typedef mach_port_t clock_reply_t;
typedef mach_port_t bootstrap_t;
typedef mach_port_t mem_entry_name_port_t;
typedef mach_port_t exception_handler_t;
typedef exception_handler_t *exception_handler_array_t;
typedef mach_port_t vm_task_entry_t;
typedef mach_port_t io_master_t;
typedef mach_port_t UNDServerRef;
# 223 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 3
typedef task_t *task_array_t;
typedef thread_t *thread_array_t;
typedef processor_set_t *processor_set_array_t;
typedef processor_set_t *processor_set_name_array_t;
typedef processor_t *processor_array_t;
typedef thread_act_t *thread_act_array_t;
typedef ledger_t *ledger_array_t;







typedef task_t task_port_t;
typedef task_array_t task_port_array_t;
typedef thread_t thread_port_t;
typedef thread_array_t thread_port_array_t;
typedef ipc_space_t ipc_space_port_t;
typedef host_t host_name_t;
typedef host_t host_name_port_t;
typedef processor_set_t processor_set_port_t;
typedef processor_set_t processor_set_name_port_t;
typedef processor_set_array_t processor_set_name_port_array_t;
typedef processor_set_t processor_set_control_port_t;
typedef processor_t processor_port_t;
typedef processor_array_t processor_port_array_t;
typedef thread_act_t thread_act_port_t;
typedef thread_act_array_t thread_act_port_array_t;
typedef semaphore_t semaphore_port_t;
typedef lock_set_t lock_set_port_t;
typedef ledger_t ledger_port_t;
typedef ledger_array_t ledger_port_array_t;
typedef alarm_t alarm_port_t;
typedef clock_serv_t clock_serv_port_t;
typedef clock_ctrl_t clock_ctrl_port_t;
typedef exception_handler_t exception_port_t;
typedef exception_handler_array_t exception_port_arrary_t;
typedef char vfs_path_t[4096];
typedef char nspace_path_t[1024];
# 313 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/mach/mach_types.h" 3
typedef natural_t ledger_item_t;


typedef int64_t ledger_amount_t;


typedef mach_vm_offset_t *emulation_vector_t;
typedef char *user_subsystem_t;

typedef char *labelstr_t;
# 29 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/malloc/malloc.h" 2 3
# 64 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/malloc/malloc.h" 3
typedef struct _malloc_zone_t {


    void *reserved1;
    void *reserved2;
    size_t (* size)(struct _malloc_zone_t *zone, const void *ptr);
    void *(* malloc)(struct _malloc_zone_t *zone, size_t size);
    void *(* calloc)(struct _malloc_zone_t *zone, size_t num_items, size_t size);
    void *(* valloc)(struct _malloc_zone_t *zone, size_t size);
    void (* free)(struct _malloc_zone_t *zone, void *ptr);
    void *(* realloc)(struct _malloc_zone_t *zone, void *ptr, size_t size);
    void (* destroy)(struct _malloc_zone_t *zone);
    const char *zone_name;


    unsigned (* batch_malloc)(struct _malloc_zone_t *zone, size_t size, void **results, unsigned num_requested);
    void (* batch_free)(struct _malloc_zone_t *zone, void **to_be_freed, unsigned num_to_be_freed);

    struct malloc_introspection_t * introspect;
    unsigned version;


    void *(* memalign)(struct _malloc_zone_t *zone, size_t alignment, size_t size);


    void (* free_definite_size)(struct _malloc_zone_t *zone, void *ptr, size_t size);


    size_t (* pressure_relief)(struct _malloc_zone_t *zone, size_t goal);






    boolean_t (* claimed_address)(struct _malloc_zone_t *zone, void *ptr);
} malloc_zone_t;



extern malloc_zone_t *malloc_default_zone(void);


extern malloc_zone_t *malloc_create_zone(vm_size_t start_size, unsigned flags);


extern void malloc_destroy_zone(malloc_zone_t *zone);




extern void *malloc_zone_malloc(malloc_zone_t *zone, size_t size) __attribute__((alloc_size(2)));


extern void *malloc_zone_calloc(malloc_zone_t *zone, size_t num_items, size_t size) __attribute__((alloc_size(2,3)));


extern void *malloc_zone_valloc(malloc_zone_t *zone, size_t size) __attribute__((alloc_size(2)));


extern void malloc_zone_free(malloc_zone_t *zone, void *ptr);


extern void *malloc_zone_realloc(malloc_zone_t *zone, void *ptr, size_t size) __attribute__((alloc_size(3)));


extern malloc_zone_t *malloc_zone_from_ptr(const void *ptr);



extern size_t malloc_size(const void *ptr);


extern size_t malloc_good_size(size_t size);


extern void *malloc_zone_memalign(malloc_zone_t *zone, size_t alignment, size_t size) __attribute__((alloc_size(3))) __attribute__((availability(macosx,introduced=10.6)));
# 149 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/malloc/malloc.h" 3
extern unsigned malloc_zone_batch_malloc(malloc_zone_t *zone, size_t size, void **results, unsigned num_requested);


extern void malloc_zone_batch_free(malloc_zone_t *zone, void **to_be_freed, unsigned num);




extern malloc_zone_t *malloc_default_purgeable_zone(void) __attribute__((availability(macosx,introduced=10.6)));


extern void malloc_make_purgeable(void *ptr) __attribute__((availability(macosx,introduced=10.6)));


extern int malloc_make_nonpurgeable(void *ptr) __attribute__((availability(macosx,introduced=10.6)));






extern void malloc_zone_register(malloc_zone_t *zone);





extern void malloc_zone_unregister(malloc_zone_t *zone);



extern void malloc_set_zone_name(malloc_zone_t *zone, const char *name);


extern const char *malloc_get_zone_name(malloc_zone_t *zone);


size_t malloc_zone_pressure_relief(malloc_zone_t *zone, size_t goal) __attribute__((availability(macosx,introduced=10.7)));







typedef struct {
    vm_address_t address;
    vm_size_t size;
} vm_range_t;

typedef struct malloc_statistics_t {
    unsigned blocks_in_use;
    size_t size_in_use;
    size_t max_size_in_use;
    size_t size_allocated;
} malloc_statistics_t;

typedef kern_return_t memory_reader_t(task_t remote_task, vm_address_t remote_address, vm_size_t size, void **local_memory);
# 215 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/malloc/malloc.h" 3
typedef void vm_range_recorder_t(task_t, void *, unsigned type, vm_range_t *, unsigned);



typedef void print_task_printer_t(const char *fmt, ...);

typedef struct malloc_introspection_t {
 kern_return_t (* enumerator)(task_t task, void *, unsigned type_mask, vm_address_t zone_address, memory_reader_t reader, vm_range_recorder_t recorder);
 size_t (* good_size)(malloc_zone_t *zone, size_t size);
 boolean_t (* check)(malloc_zone_t *zone);
 void (* print)(malloc_zone_t *zone, boolean_t verbose);
 void (* log)(malloc_zone_t *zone, void *address);
 void (* force_lock)(malloc_zone_t *zone);
 void (* force_unlock)(malloc_zone_t *zone);
 void (* statistics)(malloc_zone_t *zone, malloc_statistics_t *stats);
 boolean_t (* zone_locked)(malloc_zone_t *zone);


 boolean_t (* enable_discharge_checking)(malloc_zone_t *zone);
 void (* disable_discharge_checking)(malloc_zone_t *zone);
 void (* discharge)(malloc_zone_t *zone, void *memory);

 void (* enumerate_discharged_pointers)(malloc_zone_t *zone, void (^report_discharged)(void *memory, void *info));



 void (* reinit_lock)(malloc_zone_t *zone);
 void (* print_task)(task_t task, unsigned level, vm_address_t zone_address, memory_reader_t reader, print_task_printer_t printer);
 void (* task_statistics)(task_t task, vm_address_t zone_address, memory_reader_t reader, malloc_statistics_t *stats);
} malloc_introspection_t;





extern void malloc_printf(const char *format, ...);







extern kern_return_t malloc_get_all_zones(task_t task, memory_reader_t reader, vm_address_t **addresses, unsigned *count);





extern void malloc_zone_print_ptr_info(void *ptr);


extern boolean_t malloc_zone_check(malloc_zone_t *zone);


extern void malloc_zone_print(malloc_zone_t *zone, boolean_t verbose);


extern void malloc_zone_statistics(malloc_zone_t *zone, malloc_statistics_t *stats);


extern void malloc_zone_log(malloc_zone_t *zone, void *address);





struct mstats {
    size_t bytes_total;
    size_t chunks_used;
    size_t bytes_used;
    size_t chunks_free;
    size_t bytes_free;
};

extern struct mstats mstats(void);

extern boolean_t malloc_zone_enable_discharge_checking(malloc_zone_t *zone) __attribute__((availability(macosx,introduced=10.7)));


extern void malloc_zone_disable_discharge_checking(malloc_zone_t *zone) __attribute__((availability(macosx,introduced=10.7)));


extern void malloc_zone_discharge(malloc_zone_t *zone, void *memory) __attribute__((availability(macosx,introduced=10.7)));





extern void malloc_zone_enumerate_discharged_pointers(malloc_zone_t *zone, void (^report_discharged)(void *memory, void *info)) __attribute__((availability(macosx,introduced=10.7)));
# 4183 "./perl.h" 2
# 4209 "./perl.h"
typedef int (*runops_proc_t)(PerlInterpreter* my_perl __attribute__((unused)));
typedef void (*share_proc_t) (PerlInterpreter* my_perl __attribute__((unused)), SV *sv);
typedef int (*thrhook_proc_t) (PerlInterpreter* my_perl __attribute__((unused)));
typedef OP* (*PPADDR_t[]) (PerlInterpreter* my_perl __attribute__((unused)));
typedef _Bool (*destroyable_proc_t) (PerlInterpreter* my_perl __attribute__((unused)), SV *sv);
typedef void (*despatch_signals_proc_t) (PerlInterpreter* my_perl __attribute__((unused)));
# 4242 "./perl.h"
# 1 "./patchlevel.h" 1
# 4243 "./perl.h" 2
# 4256 "./perl.h"
extern const char PL_warn_uninit[]
                                          ;
extern const char PL_warn_uninit_sv[]
                                              ;
extern const char PL_warn_nosemi[]
                                       ;
extern const char PL_warn_reserved[]
                                                                    ;
extern const char PL_warn_nl[]
                                                        ;
extern const char PL_no_wrongref[]
                                    ;


extern const char PL_no_symref[] __attribute__((deprecated))
                                                                             ;
extern const char PL_no_symref_sv[] __attribute__((deprecated))
                                                                                  ;
extern const char PL_no_usym[]
                                                      ;
extern const char PL_no_aelem[]
                                                                           ;
extern const char PL_no_helem_sv[]
                                                                                  ;
extern const char PL_no_modify[]
                                                     ;
extern const char PL_no_mem[sizeof("Out of memory!\n")]
                          ;
extern const char PL_no_security[]
                                     ;
extern const char PL_no_sock_func[]
                                                   ;
extern const char PL_no_dir_func[]
                                                      ;
extern const char PL_no_func[]
                                          ;
extern const char PL_no_myglob[]
                                                  ;
extern const char PL_no_localize_ref[]
                                            ;
extern const char PL_memory_wrap[]
                            ;

extern const char PL_Yes[]
           ;
extern const char PL_No[]
          ;
extern const char PL_hexdigit[]
                                          ;



extern const char PL_sh_path[]
               ;



extern const char PL_cshname[]
           ;







extern const U8 PL_revision
                     ;
extern const U8 PL_version
                    ;
extern const U8 PL_subversion
                       ;

extern const char PL_uuemap[65]
                                                                            ;
# 4350 "./perl.h"
extern const char PL_uudmap[256];
extern const char PL_bitcount[256];
extern const char* const PL_sig_name[];
extern const int PL_sig_num[];
# 4520 "./perl.h"
extern const unsigned char PL_fold[];
extern const unsigned char PL_fold_latin1[];

extern const unsigned char PL_mod_latin1_uc[];
extern const unsigned char PL_latin1_lc[];
# 4564 "./perl.h"
extern unsigned char PL_fold_locale[];
# 4641 "./perl.h"
extern const unsigned char PL_freq[];
# 4663 "./perl.h"
extern const char* PL_block_type[];
# 4789 "./perl.h"
extern const char PL_bincompat_options[];
# 4800 "./perl.h"
enum perl_phase {
    PERL_PHASE_CONSTRUCT = 0,
    PERL_PHASE_START = 1,
    PERL_PHASE_CHECK = 2,
    PERL_PHASE_INIT = 3,
    PERL_PHASE_RUN = 4,
    PERL_PHASE_END = 5,
    PERL_PHASE_DESTRUCT = 6
};
# 4821 "./perl.h"
extern const char *const PL_phase_names[];
# 4852 "./perl.h"
typedef enum {
    XOPERATOR,
    XTERM,
    XREF,
    XSTATE,
    XBLOCK,
    XATTRBLOCK,
    XATTRTERM,
    XTERMBLOCK,
    XTERMORDORDOR

} expectation;
# 4938 "./perl.h"
struct perl_debug_pad {
  SV pad[3];
};







typedef void (*peep_t)(PerlInterpreter* my_perl __attribute__((unused)), OP* o);
typedef regexp* (*regcomp_t) (PerlInterpreter* my_perl __attribute__((unused)), char* exp, char* xend, PMOP* pm);
typedef I32 (*regexec_t) (PerlInterpreter* my_perl __attribute__((unused)), regexp* prog, char* stringarg,
          char* strend, char* strbeg, I32 minend,
          SV* screamer, void* data, U32 flags);
typedef char* (*re_intuit_start_t) (PerlInterpreter* my_perl __attribute__((unused)), regexp *prog, SV *sv,
      char *strpos, char *strend,
      U32 flags,
      re_scream_pos_data *d);
typedef SV* (*re_intuit_string_t) (PerlInterpreter* my_perl __attribute__((unused)), regexp *prog);
typedef void (*regfree_t) (PerlInterpreter* my_perl __attribute__((unused)), struct regexp* r);
typedef regexp* (*regdupe_t) (PerlInterpreter* my_perl __attribute__((unused)), const regexp* r, CLONE_PARAMS *param);
typedef I32 (*re_fold_t)(const char *, char const *, I32);

typedef void (*DESTRUCTORFUNC_NOCONTEXT_t) (void*);
typedef void (*DESTRUCTORFUNC_t) (PerlInterpreter* my_perl __attribute__((unused)), void*);
typedef void (*SVFUNC_t) (PerlInterpreter* my_perl __attribute__((unused)), SV* const);
typedef I32 (*SVCOMPARE_t) (PerlInterpreter* my_perl __attribute__((unused)), SV* const, SV* const);
typedef void (*XSINIT_t) (PerlInterpreter* my_perl __attribute__((unused)));
typedef void (*ATEXIT_t) (PerlInterpreter* my_perl __attribute__((unused)), void*);
typedef void (*XSUBADDR_t) (PerlInterpreter* my_perl __attribute__((unused)), CV *);

typedef OP* (*Perl_ppaddr_t)(PerlInterpreter* my_perl __attribute__((unused)));
typedef OP* (*Perl_check_t) (PerlInterpreter* my_perl __attribute__((unused)), OP*);
typedef void(*Perl_ophook_t)(PerlInterpreter* my_perl __attribute__((unused)), OP*);
typedef int (*Perl_keyword_plugin_t)(PerlInterpreter* my_perl __attribute__((unused)), char*, STRLEN, OP**);
typedef void(*Perl_cpeep_t)(PerlInterpreter* my_perl __attribute__((unused)), OP *, OP *);

typedef void(*globhook_t)(PerlInterpreter* my_perl __attribute__((unused)));






typedef struct exitlistentry {
    void (*fn) (PerlInterpreter* my_perl __attribute__((unused)), void*);
    void *ptr;
} PerlExitListEntry;
# 5024 "./perl.h"
struct interpreter {

# 1 "./intrpvar.h" 1
# 35 "./intrpvar.h"
SV ** Istack_sp;



OP * Iop;

SV ** Icurpad;

SV ** Istack_base;
SV ** Istack_max;

ANY * Isavestack;

I32 Isavestack_ix;
I32 Isavestack_max;

I32 * Iscopestack;
I32 Iscopestack_ix;
I32 Iscopestack_max;

SV ** Itmps_stack;
I32 Itmps_ix;
I32 Itmps_floor;
I32 Itmps_max;

U32 Isub_generation;

I32 * Imarkstack;

I32 * Imarkstack_ptr;
I32 * Imarkstack_max;



U8 Ihash_rand_bits_enabled;

UV Ihash_rand_bits;

HV * Istrtab;


PMOP * Icurpm;

_Bool Itainting;
_Bool Itainted;
U16 Idelaymagic;
U8 Ilocalizing;
U8 Iin_eval;
# 92 "./intrpvar.h"
U8 Idowarn;






I8 Iutf8cache;




HV * Idefstash;
HV * Icurstash;

COP * Icurcop;
AV * Icurstack;
PERL_SI * Icurstackinfo;
AV * Imainstack;



IV Isv_count;
IV Isv_objcount;



SV * Isv_root;
SV * Isv_arenaroot;

struct re_save_state Ireg_state;




regmatch_slab * Iregmatch_slab;
regmatch_state * Iregmatch_state;

PAD * Icomppad;
# 147 "./intrpvar.h"
SV Isv_undef;
SV Isv_no;
SV Isv_yes;
SV * ISv;

yy_parser * Iparser;

HV * Istashcache;
# 168 "./intrpvar.h"
STRLEN Ina;



struct stat Istatbuf;
struct stat Istatcache;
GV * Istatgv;
SV * Istatname;


struct tms Itimesbuf;
# 197 "./intrpvar.h"
SV * Irs;
GV * Ilast_in_gv;
GV * Iofsgv;
GV * Idefoutgv;
const char * Ichopset;
SV * Iformtarget;
SV * Ibodytarget;
SV * Itoptarget;


OP * Irestartop;
JMPENV * Irestartjmpenv;

JMPENV * Itop_env;
JMPENV Istart_env;
SV * Ierrors;


HE* Ihv_fetch_ent_mh;

OP* Ilastgotoprobe;


OP * Isortcop;
HV * Isortstash;
GV * Ifirstgv;
GV * Isecondgv;


char * Iefloatbuf;
STRLEN Iefloatsize;

regnode Iregdummy;

U16 Idumpindent;


U8 Iexit_flags;

_Bool Iutf8locale;

char * Icolors[6];
# 261 "./intrpvar.h"
peep_t Ipeepp;
# 285 "./intrpvar.h"
peep_t Irpeepp;
# 299 "./intrpvar.h"
Perl_ophook_t Iopfreehook;

char ** Iwatchaddr;
char * Iwatchok;

U32 Iperldb;

U32 Isignals;

int Ireentrant_retint;


int Iorigargc;
char ** Iorigargv;
GV * Ienvgv;
GV * Iincgv;
GV * Ihintgv;
char * Iorigfilename;
SV * Idiehook;
SV * Iwarnhook;


SV * Ipatchlevel;
SV * Iapiversion;
const char * const * Ilocalpatches;
const char * Isplitstr;

_Bool Iminus_c;
_Bool Iminus_n;
_Bool Iminus_p;
_Bool Iminus_l;
_Bool Iminus_a;
_Bool Iminus_F;
_Bool Idoswitches;
_Bool Iminus_E;

char * Iinplace;
SV * Ie_script;

time_t Ibasetime;

I32 Imaxsysfd;

I32 Istatusvalue;



I32 Istatusvalue_posix;


int Isig_pending;
int * Ipsig_pend;


GV * Istdingv;
GV * Istderrgv;
GV * Idefgv;
GV * Iargvgv;
GV * Iargvoutgv;
AV * Iargvout_stack;


GV * Ireplgv;


GV * Ierrgv;


GV * IDBgv;
GV * IDBline;
# 392 "./intrpvar.h"
GV * IDBsub;
SV * IDBsingle;
SV * IDBtrace;
SV * IDBsignal;
AV * Idbargs;


HV * Idebstash;
HV * Iglobalstash;
SV * Icurstname;
AV * Ibeginav;
AV * Iendav;
AV * Iunitcheckav;
AV * Icheckav;
AV * Iinitav;


AV * Ifdpid;


char * Iop_mask;


CV * Imain_cv;
OP * Imain_root;
OP * Imain_start;
OP * Ieval_root;
OP * Ieval_start;


COP * Icurcopdb;

int Ifilemode;
int Ilastfd;
char * Ioldname;
const char ** IArgv;
char * ICmd;




AV * Ipreambleav;
SV * Imess_sv;
SV * Iors_sv;


int Iforkprocess;


I32 Igensym;
_Bool Icv_has_eval;
_Bool Itaint_warn;
U16 Ilaststype;

int Ilaststatval;

I32 Imodcount;



I32 Iexitlistlen;
PerlExitListEntry * Iexitlist;
# 468 "./intrpvar.h"
HV * Imodglobal;


U32 * Iprofiledata;

COP Icompiling;

CV * Icompcv;
PADNAMELIST * Icomppad_name;
I32 Icomppad_name_fill;
I32 Icomppad_name_floor;







CV * IDBcv;
int Igeneration;

U32 Iunicode;

_Bool Iin_clean_objs;
_Bool Iin_clean_all;
_Bool Inomemok;
_Bool Isavebegin;


uid_t Idelaymagic_uid;
uid_t Idelaymagic_euid;
gid_t Idelaymagic_gid;
gid_t Idelaymagic_egid;
U32 Ian;


U32 Ibreakable_sub_gen;







U32 Icop_seqmax;


U32 Ievalseq;
U32 Iorigalen;
char ** Iorigenviron;



char * Iosname;

Sighandler_t Isighandlerp;

void* Ibody_roots[(SVt_LAST)];

volatile U32 Idebug;

int Imaxo;

runops_proc_t Irunops;

SV * Isubname;

I32 Isubline;
I32 Imin_intro_pending;

I32 Imax_intro_pending;
I32 Ipadix;

I32 Ipadix_floor;

U32 Ihints;


char * Icollation_name;
size_t Icollxfrm_base;
size_t Icollxfrm_mult;
U32 Icollation_ix;
_Bool Icollation_standard;




U8 Isawampersand;


_Bool Iunsafe;
_Bool Icolorset;




enum perl_phase Iphase;

_Bool Iin_load_module;




signed char Iperl_destruct_level;



_Bool Inumeric_standard;

_Bool Inumeric_local;

char * Inumeric_name;
SV * Inumeric_radix_sv;




SV * IASCII;
SV * ILatin1;
SV * IAboveLatin1;

SV * INonL1NonFinalFold;
SV * IHasMultiCharFold;


SV * Iutf8_mark;
SV * Iutf8_X_regular_begin;
SV * Iutf8_X_extend;
SV * Iutf8_toupper;
SV * Iutf8_totitle;
SV * Iutf8_tolower;
SV * Iutf8_tofold;
SV * Iutf8_charname_begin;
SV * Iutf8_charname_continue;

SV * Iutf8_swash_ptrs[10];
SV * IPosix_ptrs[(16 + 1)];
SV * IL1Posix_ptrs[(16 + 1)];
SV * IXPosix_ptrs[(16 + 1)];

HV * Ilast_swash_hv;
U8 * Ilast_swash_tmps;
STRLEN Ilast_swash_slen;
U8 Ilast_swash_key[13 -1];
U8 Ilast_swash_klen;







_Bool Ipad_reset_pending;
_Bool Isrand_called;



SV ** Ipsig_ptr;



SV ** Ipsig_name;
# 643 "./intrpvar.h"
PTR_TBL_t * Iptr_table;
AV * Ibeginav_save;

void * Ibody_arenas;



SV ** Iregex_pad;

AV * Iregex_padav;




HV ** Istashpad;
PADOFFSET Istashpadmax;
PADOFFSET Istashpadix;



REENTR * Ireentrant_buffer;


HV * Icustom_op_names;
HV * Icustom_op_descs;


PerlIOl * Iperlio;
PerlIO_list_t * Iknown_layers;
PerlIO_list_t * Idef_layerlist;


SV * Iencoding;

SV * Iutf8_idstart;
SV * Iutf8_idcont;
SV * Iutf8_xidstart;
SV * Iutf8_perl_idstart;
SV * Iutf8_perl_idcont;
SV * Iutf8_xidcont;

SVCOMPARE_t Isort_RealCmp;

AV * Icheckav_save;
AV * Iunitcheckav_save;


long Iclocktick;


share_proc_t Isharehook;
share_proc_t Ilockhook;






share_proc_t Iunlockhook;

thrhook_proc_t Ithreadhook;


destroyable_proc_t Idestroyhook;


despatch_signals_proc_t Isignalhook;


HV * Iisarev;





HV * Iregistered_mros;


AV * Iblockhooks;



HV * Iutf8_foldclosures;



SV * Iutf8_foldable;

HV * Icustom_ops;

XPV * IXpv;



const char * * Iscopestack_name;

struct perl_debug_pad Idebug_pad;


globhook_t Iglobhook;
# 751 "./intrpvar.h"
void ** Imy_cxt_list;
int Imy_cxt_size;
# 5026 "./perl.h" 2
};

extern const U16 PL_interp_size
                                  ;
# 5038 "./perl.h"
extern const U16 PL_interp_size_5_18_0
                                                                         ;
# 5078 "./perl.h"
struct tempsym;


# 1 "./thread.h" 1
# 5081 "./perl.h" 2
# 1 "./pp.h" 1
# 5082 "./perl.h" 2
# 5117 "./perl.h"
# 1 "./proto.h" 1
# 20 "./proto.h"
              int Perl_Gv_AMupdate(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, _Bool destructing)
   __attribute__((nonnull(2)));



              const char * Perl_PerlIO_context_layers(PerlInterpreter* my_perl __attribute__((unused)), const char *mode);
                     void Perl_croak_memory_wrap(void)
   __attribute__((noreturn));

              void* Perl_Slab_Alloc(PerlInterpreter* my_perl __attribute__((unused)), size_t sz)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              void Perl_Slab_Free(PerlInterpreter* my_perl __attribute__((unused)), void *op)
   __attribute__((nonnull(2)));



              _Bool Perl__is_uni_FOO(PerlInterpreter* my_perl __attribute__((unused)), const U8 classnum, const UV c)
   __attribute__((warn_unused_result));

              _Bool Perl__is_uni_perl_idcont(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((warn_unused_result));

              _Bool Perl__is_uni_perl_idstart(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((warn_unused_result));

              _Bool Perl__is_utf8_FOO(PerlInterpreter* my_perl __attribute__((unused)), const U8 classnum, const U8 *p)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              _Bool Perl__is_utf8_mark(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl__is_utf8_perl_idcont(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl__is_utf8_perl_idstart(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              UV Perl__to_uni_fold_flags(PerlInterpreter* my_perl __attribute__((unused)), UV c, U8 *p, STRLEN *lenp, const U8 flags)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              UV Perl__to_utf8_fold_flags(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p, U8* ustrp, STRLEN *lenp, U8 flags, _Bool* tainted_ptr)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              UV Perl__to_utf8_lower_flags(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p, U8* ustrp, STRLEN *lenp, const _Bool flags, _Bool* tainted_ptr)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              UV Perl__to_utf8_title_flags(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p, U8* ustrp, STRLEN *lenp, const _Bool flags, _Bool* tainted_ptr)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              UV Perl__to_utf8_upper_flags(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p, U8* ustrp, STRLEN *lenp, const _Bool flags, _Bool* tainted_ptr)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              PADOFFSET Perl_allocmy(PerlInterpreter* my_perl __attribute__((unused)), const char *const name, const STRLEN len, const U32 flags)
   __attribute__((nonnull(2)));



              SV* Perl_amagic_call(PerlInterpreter* my_perl __attribute__((unused)), SV* left, SV* right, int method, int dir)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV * Perl_amagic_deref_call(PerlInterpreter* my_perl __attribute__((unused)), SV *ref, int method)
   __attribute__((nonnull(2)));



              _Bool Perl_amagic_is_enabled(PerlInterpreter* my_perl __attribute__((unused)), int method);
              I32 Perl_apply(PerlInterpreter* my_perl __attribute__((unused)), I32 type, SV** mark, SV** sp)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_apply_attrs_string(PerlInterpreter* my_perl __attribute__((unused)), const char *stashpv, CV *cv, const char *attrstr, STRLEN len)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_atfork_lock(void);
              void Perl_atfork_unlock(void);
              SV** Perl_av_arylen_p(PerlInterpreter* my_perl __attribute__((unused)), AV *av)
   __attribute__((nonnull(2)));



              void Perl_av_clear(PerlInterpreter* my_perl __attribute__((unused)), AV *av)
   __attribute__((nonnull(2)));



              void Perl_av_create_and_push(PerlInterpreter* my_perl __attribute__((unused)), AV **const avp, SV *const val)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV** Perl_av_create_and_unshift_one(PerlInterpreter* my_perl __attribute__((unused)), AV **const avp, SV *const val)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_av_delete(PerlInterpreter* my_perl __attribute__((unused)), AV *av, I32 key, I32 flags)
   __attribute__((nonnull(2)));



              _Bool Perl_av_exists(PerlInterpreter* my_perl __attribute__((unused)), AV *av, I32 key)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_av_extend(PerlInterpreter* my_perl __attribute__((unused)), AV *av, I32 key)
   __attribute__((nonnull(2)));



              void Perl_av_extend_guts(PerlInterpreter* my_perl __attribute__((unused)), AV *av, I32 key, ssize_t *maxp, SV ***allocp, SV ***arrayp)
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)))
   __attribute__((nonnull(6)));



              SV** Perl_av_fetch(PerlInterpreter* my_perl __attribute__((unused)), AV *av, I32 key, I32 lval)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_av_fill(PerlInterpreter* my_perl __attribute__((unused)), AV *av, I32 fill)
   __attribute__((nonnull(2)));



              IV* Perl_av_iter_p(PerlInterpreter* my_perl __attribute__((unused)), AV *av)
   __attribute__((nonnull(2)));



              I32 Perl_av_len(PerlInterpreter* my_perl __attribute__((unused)), AV *av)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              AV* Perl_av_make(PerlInterpreter* my_perl __attribute__((unused)), I32 size, SV **strp)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              SV* Perl_av_pop(PerlInterpreter* my_perl __attribute__((unused)), AV *av)
   __attribute__((nonnull(2)));



              void Perl_av_push(PerlInterpreter* my_perl __attribute__((unused)), AV *av, SV *val)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_av_reify(PerlInterpreter* my_perl __attribute__((unused)), AV *av)
   __attribute__((nonnull(2)));



              SV* Perl_av_shift(PerlInterpreter* my_perl __attribute__((unused)), AV *av)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              SV** Perl_av_store(PerlInterpreter* my_perl __attribute__((unused)), AV *av, I32 key, SV *val)
   __attribute__((nonnull(2)));







static __inline__ I32 S_av_top_index(PerlInterpreter* my_perl __attribute__((unused)), AV *av)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_av_undef(PerlInterpreter* my_perl __attribute__((unused)), AV *av)
   __attribute__((nonnull(2)));



              void Perl_av_unshift(PerlInterpreter* my_perl __attribute__((unused)), AV *av, I32 num)
   __attribute__((nonnull(2)));



              OP* Perl_bind_match(PerlInterpreter* my_perl __attribute__((unused)), I32 type, OP *left, OP *right)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              OP* Perl_block_end(PerlInterpreter* my_perl __attribute__((unused)), I32 floor, OP* seq)
   __attribute__((warn_unused_result));

              I32 Perl_block_gimme(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result));

              int Perl_block_start(PerlInterpreter* my_perl __attribute__((unused)), int full)
   __attribute__((warn_unused_result));

              void Perl_blockhook_register(PerlInterpreter* my_perl __attribute__((unused)), BHK *hk)
   __attribute__((nonnull(2)));



              void Perl_boot_core_PerlIO(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_boot_core_UNIVERSAL(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_boot_core_mro(PerlInterpreter* my_perl __attribute__((unused)));
              int Perl_bytes_cmp_utf8(PerlInterpreter* my_perl __attribute__((unused)), const U8 *b, STRLEN blen, const U8 *u, STRLEN ulen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              U8* Perl_bytes_from_utf8(PerlInterpreter* my_perl __attribute__((unused)), const U8 *s, STRLEN *len, _Bool *is_utf8)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              U8* Perl_bytes_to_utf8(PerlInterpreter* my_perl __attribute__((unused)), const U8 *s, STRLEN *len)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              I32 Perl_call_argv(PerlInterpreter* my_perl __attribute__((unused)), const char* sub_name, I32 flags, char** argv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              void Perl_call_atexit(PerlInterpreter* my_perl __attribute__((unused)), ATEXIT_t fn, void *ptr);
              void Perl_call_list(PerlInterpreter* my_perl __attribute__((unused)), I32 oldscope, AV *paramList)
   __attribute__((nonnull(3)));



              I32 Perl_call_method(PerlInterpreter* my_perl __attribute__((unused)), const char* methname, I32 flags)
   __attribute__((nonnull(2)));



              I32 Perl_call_pv(PerlInterpreter* my_perl __attribute__((unused)), const char* sub_name, I32 flags)
   __attribute__((nonnull(2)));



              I32 Perl_call_sv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, volatile I32 flags)
   __attribute__((nonnull(2)));



              const PERL_CONTEXT * Perl_caller_cx(PerlInterpreter* my_perl __attribute__((unused)), I32 level, const PERL_CONTEXT **dbcxp);
              void * Perl_calloc(size_t elements, size_t size)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              _Bool Perl_cando(PerlInterpreter* my_perl __attribute__((unused)), mode_t mode, _Bool effective, const struct stat* statbufp)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(4)));



              I32 Perl_cast_i32(PerlInterpreter* my_perl __attribute__((unused)), NV f)
   __attribute__((warn_unused_result));

              IV Perl_cast_iv(PerlInterpreter* my_perl __attribute__((unused)), NV f)
   __attribute__((warn_unused_result));

              U32 Perl_cast_ulong(PerlInterpreter* my_perl __attribute__((unused)), NV f)
   __attribute__((warn_unused_result));

              UV Perl_cast_uv(PerlInterpreter* my_perl __attribute__((unused)), NV f)
   __attribute__((warn_unused_result));

              _Bool Perl_check_utf8_print(PerlInterpreter* my_perl __attribute__((unused)), const U8 *s, const STRLEN len)
   __attribute__((nonnull(2)));



              OP * Perl_ck_anoncode(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_bitop(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_cmp(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_concat(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_defined(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_delete(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_die(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_each(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP* Perl_ck_entersub_args_core(PerlInterpreter* my_perl __attribute__((unused)), OP *entersubop, GV *namegv, SV *protosv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              OP* Perl_ck_entersub_args_list(PerlInterpreter* my_perl __attribute__((unused)), OP *entersubop)
   __attribute__((nonnull(2)));



              OP* Perl_ck_entersub_args_proto(PerlInterpreter* my_perl __attribute__((unused)), OP *entersubop, GV *namegv, SV *protosv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              OP* Perl_ck_entersub_args_proto_or_list(PerlInterpreter* my_perl __attribute__((unused)), OP *entersubop, GV *namegv, SV *protosv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              OP * Perl_ck_eof(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_eval(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_exec(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_exists(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_exit(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_ftst(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_fun(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_glob(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_grep(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_index(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_join(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_length(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_lfun(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_listiob(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_match(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_method(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_null(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_open(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_readline(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_repeat(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_require(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_return(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_rfun(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_rvconst(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_sassign(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_select(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_shift(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_smartmatch(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_sort(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_spair(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_split(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_subr(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_substr(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_svconst(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_tell(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP * Perl_ck_trunc(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_ck_warner(PerlInterpreter* my_perl __attribute__((unused)), U32 err, const char* pat, ...)
   __attribute__((format(__printf__,3,4)))
   __attribute__((nonnull(3)));



              void Perl_ck_warner_d(PerlInterpreter* my_perl __attribute__((unused)), U32 err, const char* pat, ...)
   __attribute__((format(__printf__,3,4)))
   __attribute__((nonnull(3)));



              _Bool Perl_ckwarn(PerlInterpreter* my_perl __attribute__((unused)), U32 w);
              _Bool Perl_ckwarn_d(PerlInterpreter* my_perl __attribute__((unused)), U32 w);
              OP* Perl_convert(PerlInterpreter* my_perl __attribute__((unused)), I32 optype, I32 flags, OP* o)
   __attribute__((warn_unused_result));

              const char * Perl_cop_fetch_label(PerlInterpreter* my_perl __attribute__((unused)), COP *const cop, STRLEN *len, U32 *flags)
   __attribute__((nonnull(2)));



              void Perl_cop_store_label(PerlInterpreter* my_perl __attribute__((unused)), COP *const cop, const char *label, STRLEN len, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV * Perl_core_prototype(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, const char *name, const int code, int * const opnum)
   __attribute__((nonnull(3)));



              OP * Perl_coresub_op(PerlInterpreter* my_perl __attribute__((unused)), SV *const coreargssv, const int code, const int opnum)
   __attribute__((nonnull(2)));



              PERL_CONTEXT* Perl_create_eval_scope(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
                     void Perl_croak(PerlInterpreter* my_perl __attribute__((unused)), const char* pat, ...)
   __attribute__((noreturn))
   __attribute__((format(__printf__,2,3)));

                     void Perl_croak_no_mem(void)
   __attribute__((noreturn));

                     void Perl_croak_no_modify(void)
   __attribute__((noreturn));

                     void Perl_croak_popstack(void)
   __attribute__((noreturn));

                     void Perl_croak_sv(PerlInterpreter* my_perl __attribute__((unused)), SV *baseex)
   __attribute__((noreturn))
   __attribute__((nonnull(2)));



                     void Perl_croak_xs_usage(const CV *const cv, const char *const params)
   __attribute__((noreturn))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              regexp_engine const * Perl_current_re_engine(PerlInterpreter* my_perl __attribute__((unused)));
              const char * Perl_custom_op_desc(PerlInterpreter* my_perl __attribute__((unused)), const OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              const char * Perl_custom_op_name(PerlInterpreter* my_perl __attribute__((unused)), const OP *o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_custom_op_register(PerlInterpreter* my_perl __attribute__((unused)), Perl_ppaddr_t ppaddr, const XOP *xop)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              const XOP * Perl_custom_op_xop(PerlInterpreter* my_perl __attribute__((unused)), const OP *o)
   __attribute__((pure))
   __attribute__((nonnull(2)));



              void Perl_cv_ckproto_len_flags(PerlInterpreter* my_perl __attribute__((unused)), const CV* cv, const GV* gv, const char* p, const STRLEN len, const U32 flags)
   __attribute__((nonnull(2)));



              CV* Perl_cv_clone(PerlInterpreter* my_perl __attribute__((unused)), CV* proto)
   __attribute__((nonnull(2)));



              CV* Perl_cv_clone_into(PerlInterpreter* my_perl __attribute__((unused)), CV* proto, CV *target)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_cv_const_sv(PerlInterpreter* my_perl __attribute__((unused)), const CV *const cv)
   __attribute__((warn_unused_result));

              void Perl_cv_forget_slab(PerlInterpreter* my_perl __attribute__((unused)), CV *cv)
   __attribute__((nonnull(2)));



              void Perl_cv_get_call_checker(PerlInterpreter* my_perl __attribute__((unused)), CV *cv, Perl_call_checker *ckfun_p, SV **ckobj_p)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_cv_set_call_checker(PerlInterpreter* my_perl __attribute__((unused)), CV *cv, Perl_call_checker ckfun, SV *ckobj)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_cv_undef(PerlInterpreter* my_perl __attribute__((unused)), CV* cv)
   __attribute__((nonnull(2)));



              void Perl_cvgv_set(PerlInterpreter* my_perl __attribute__((unused)), CV* cv, GV* gv)
   __attribute__((nonnull(2)));



              void Perl_cvstash_set(PerlInterpreter* my_perl __attribute__((unused)), CV* cv, HV* stash)
   __attribute__((nonnull(2)));



              void Perl_cx_dump(PerlInterpreter* my_perl __attribute__((unused)), PERL_CONTEXT* cx)
   __attribute__((nonnull(2)));



              I32 Perl_cxinc(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result));

              void Perl_deb(PerlInterpreter* my_perl __attribute__((unused)), const char* pat, ...)
   __attribute__((format(__printf__,2,3)))
   __attribute__((nonnull(2)));



              void Perl_deb_stack_all(PerlInterpreter* my_perl __attribute__((unused)));
              I32 Perl_debop(PerlInterpreter* my_perl __attribute__((unused)), const OP* o)
   __attribute__((nonnull(2)));



              void Perl_debprofdump(PerlInterpreter* my_perl __attribute__((unused)));
              I32 Perl_debstack(PerlInterpreter* my_perl __attribute__((unused)));
              I32 Perl_debstackptrs(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_delete_eval_scope(PerlInterpreter* my_perl __attribute__((unused)));
              char* Perl_delimcpy(char* to, const char* toend, const char* from, const char* fromend, int delim, I32* retlen)
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(6)));



              void Perl_despatch_signals(PerlInterpreter* my_perl __attribute__((unused)));
              OP* Perl_die(PerlInterpreter* my_perl __attribute__((unused)), const char* pat, ...)
   __attribute__((format(__printf__,2,3)));

              OP* Perl_die_sv(PerlInterpreter* my_perl __attribute__((unused)), SV *baseex)
   __attribute__((nonnull(2)));



                     void Perl_die_unwind(PerlInterpreter* my_perl __attribute__((unused)), SV* msv)
   __attribute__((noreturn))
   __attribute__((nonnull(2)));
# 837 "./proto.h"
              _Bool Perl_do_aexec5(PerlInterpreter* my_perl __attribute__((unused)), SV* really, SV** mark, SV** sp, int fd, int do_report)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              int Perl_do_binmode(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *fp, int iotype, int mode)
   __attribute__((nonnull(2)));



              _Bool Perl_do_close(PerlInterpreter* my_perl __attribute__((unused)), GV* gv, _Bool not_implicit);
              void Perl_do_dump_pad(PerlInterpreter* my_perl __attribute__((unused)), I32 level, PerlIO *file, PADLIST *padlist, int full)
   __attribute__((nonnull(3)));



              _Bool Perl_do_eof(PerlInterpreter* my_perl __attribute__((unused)), GV* gv)
   __attribute__((nonnull(2)));



              void Perl_do_execfree(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_do_gv_dump(PerlInterpreter* my_perl __attribute__((unused)), I32 level, PerlIO *file, const char *name, GV *sv)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_do_gvgv_dump(PerlInterpreter* my_perl __attribute__((unused)), I32 level, PerlIO *file, const char *name, GV *sv)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_do_hv_dump(PerlInterpreter* my_perl __attribute__((unused)), I32 level, PerlIO *file, const char *name, HV *sv)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_do_join(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, SV *delim, SV **mark, SV **sp)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)));



              void Perl_do_magic_dump(PerlInterpreter* my_perl __attribute__((unused)), I32 level, PerlIO *file, const MAGIC *mg, I32 nest, I32 maxnest, _Bool dumpops, STRLEN pvlim)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              I32 Perl_do_ncmp(PerlInterpreter* my_perl __attribute__((unused)), SV *const left, SV *const right)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_do_op_dump(PerlInterpreter* my_perl __attribute__((unused)), I32 level, PerlIO *file, const OP *o)
   __attribute__((nonnull(3)));
# 910 "./proto.h"
              _Bool Perl_do_open9(PerlInterpreter* my_perl __attribute__((unused)), GV *gv, const char *name, I32 len, int as_raw, int rawmode, int rawperm, PerlIO *supplied_fp, SV *svs, I32 num)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(9)));



              _Bool Perl_do_openn(PerlInterpreter* my_perl __attribute__((unused)), GV *gv, const char *oname, I32 len, int as_raw, int rawmode, int rawperm, PerlIO *supplied_fp, SV **svp, I32 num)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_do_pmop_dump(PerlInterpreter* my_perl __attribute__((unused)), I32 level, PerlIO *file, const PMOP *pm)
   __attribute__((nonnull(3)));



              _Bool Perl_do_print(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, PerlIO* fp)
   __attribute__((nonnull(3)));



              OP* Perl_do_readline(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result));

              _Bool Perl_do_seek(PerlInterpreter* my_perl __attribute__((unused)), GV* gv, off_t pos, int whence);
              void Perl_do_sprintf(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, I32 len, SV** sarg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              void Perl_do_sv_dump(PerlInterpreter* my_perl __attribute__((unused)), I32 level, PerlIO *file, SV *sv, I32 nest, I32 maxnest, _Bool dumpops, STRLEN pvlim)
   __attribute__((nonnull(3)));



              off_t Perl_do_sysseek(PerlInterpreter* my_perl __attribute__((unused)), GV* gv, off_t pos, int whence)
   __attribute__((nonnull(2)));



              off_t Perl_do_tell(PerlInterpreter* my_perl __attribute__((unused)), GV* gv)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              I32 Perl_do_trans(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              UV Perl_do_vecget(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, ssize_t offset, int size)
   __attribute__((nonnull(2)));



              void Perl_do_vecset(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              void Perl_do_vop(PerlInterpreter* my_perl __attribute__((unused)), I32 optype, SV* sv, SV* left, SV* right)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)));



              OP* Perl_dofile(PerlInterpreter* my_perl __attribute__((unused)), OP* term, I32 force_builtin)
   __attribute__((nonnull(2)));



              _Bool Perl_doing_taint(int argc, char** argv, char** env)
   __attribute__((warn_unused_result));

              OP * Perl_doref(PerlInterpreter* my_perl __attribute__((unused)), OP *o, I32 type, _Bool set_op_ref)
   __attribute__((nonnull(2)));



              void Perl_dounwind(PerlInterpreter* my_perl __attribute__((unused)), I32 cxix);
              I32 Perl_dowantarray(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result));

              void Perl_dump_all(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_dump_all_perl(PerlInterpreter* my_perl __attribute__((unused)), _Bool justperl);
              void Perl_dump_eval(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_dump_form(PerlInterpreter* my_perl __attribute__((unused)), const GV* gv)
   __attribute__((nonnull(2)));



              void Perl_dump_indent(PerlInterpreter* my_perl __attribute__((unused)), I32 level, PerlIO *file, const char* pat, ...)
   __attribute__((format(__printf__,4,5)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_dump_packsubs(PerlInterpreter* my_perl __attribute__((unused)), const HV* stash)
   __attribute__((nonnull(2)));



              void Perl_dump_packsubs_perl(PerlInterpreter* my_perl __attribute__((unused)), const HV* stash, _Bool justperl)
   __attribute__((nonnull(2)));



              void Perl_dump_sub(PerlInterpreter* my_perl __attribute__((unused)), const GV* gv)
   __attribute__((nonnull(2)));



              void Perl_dump_sub_perl(PerlInterpreter* my_perl __attribute__((unused)), const GV* gv, _Bool justperl)
   __attribute__((nonnull(2)));



              void Perl_dump_vindent(PerlInterpreter* my_perl __attribute__((unused)), I32 level, PerlIO *file, const char* pat, va_list *args)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_emulate_cop_io(PerlInterpreter* my_perl __attribute__((unused)), const COP *const c, SV *const sv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_eval_pv(PerlInterpreter* my_perl __attribute__((unused)), const char* p, I32 croak_on_error)
   __attribute__((nonnull(2)));



              I32 Perl_eval_sv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, I32 flags)
   __attribute__((nonnull(2)));



              void Perl_fbm_compile(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, U32 flags)
   __attribute__((nonnull(2)));



              char* Perl_fbm_instr(PerlInterpreter* my_perl __attribute__((unused)), unsigned char* big, unsigned char* bigend, SV* littlestr, U32 flags)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              _Bool Perl_feature_is_enabled(PerlInterpreter* my_perl __attribute__((unused)), const char *const name, STRLEN namelen)
   __attribute__((nonnull(2)));



              SV* Perl_filter_add(PerlInterpreter* my_perl __attribute__((unused)), filter_t funcp, SV* datasv);
              void Perl_filter_del(PerlInterpreter* my_perl __attribute__((unused)), filter_t funcp)
   __attribute__((nonnull(2)));



              I32 Perl_filter_read(PerlInterpreter* my_perl __attribute__((unused)), int idx, SV *buf_sv, int maxlen)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              void Perl_finalize_optree(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((nonnull(2)));



              CV * Perl_find_lexical_cv(PerlInterpreter* my_perl __attribute__((unused)), PADOFFSET off);
              CV* Perl_find_runcv(PerlInterpreter* my_perl __attribute__((unused)), U32 *db_seqp)
   __attribute__((warn_unused_result));

              CV* Perl_find_runcv_where(PerlInterpreter* my_perl __attribute__((unused)), U8 cond, IV arg, U32 *db_seqp)
   __attribute__((warn_unused_result));

              SV* Perl_find_rundefsv(PerlInterpreter* my_perl __attribute__((unused)));
              SV* Perl_find_rundefsv2(PerlInterpreter* my_perl __attribute__((unused)), CV *cv, U32 seq)
   __attribute__((nonnull(2)));



              PADOFFSET Perl_find_rundefsvoffset(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((deprecated));

              char* Perl_find_script(PerlInterpreter* my_perl __attribute__((unused)), const char *scriptname, _Bool dosearch, const char *const *const search_ext, I32 flags)
   __attribute__((nonnull(2)));



              I32 Perl_foldEQ(const char* a, const char* b, I32 len)
   __attribute__((pure))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              I32 Perl_foldEQ_latin1(const char* a, const char* b, I32 len)
   __attribute__((pure))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              I32 Perl_foldEQ_locale(const char* a, const char* b, I32 len)
   __attribute__((pure))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));







              I32 Perl_foldEQ_utf8_flags(PerlInterpreter* my_perl __attribute__((unused)), const char *s1, char **pe1, UV l1, _Bool u1, const char *s2, char **pe2, UV l2, _Bool u2, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(6)));



              char* Perl_form(PerlInterpreter* my_perl __attribute__((unused)), const char* pat, ...)
   __attribute__((format(__printf__,2,3)))
   __attribute__((nonnull(2)));



              void Perl_free_tied_hv_pool(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_free_tmps(PerlInterpreter* my_perl __attribute__((unused)));
              AV* Perl_get_av(PerlInterpreter* my_perl __attribute__((unused)), const char *name, I32 flags)
   __attribute__((nonnull(2)));



              void* Perl_get_context(void)
   __attribute__((warn_unused_result));

              CV* Perl_get_cv(PerlInterpreter* my_perl __attribute__((unused)), const char* name, I32 flags)
   __attribute__((nonnull(2)));



              CV* Perl_get_cvn_flags(PerlInterpreter* my_perl __attribute__((unused)), const char* name, STRLEN len, I32 flags)
   __attribute__((nonnull(2)));



              void Perl_get_db_sub(PerlInterpreter* my_perl __attribute__((unused)), SV **svp, CV *cv)
   __attribute__((nonnull(3)));



              void Perl_get_hash_seed(PerlInterpreter* my_perl __attribute__((unused)), unsigned char * const seed_buffer)
   __attribute__((nonnull(2)));



              HV* Perl_get_hv(PerlInterpreter* my_perl __attribute__((unused)), const char *name, I32 flags)
   __attribute__((nonnull(2)));



              const char* Perl_get_no_modify(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              char** Perl_get_op_descs(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              char** Perl_get_op_names(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              U32* Perl_get_opargs(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              PPADDR_t* Perl_get_ppaddr(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              REGEXP * Perl_get_re_arg(PerlInterpreter* my_perl __attribute__((unused)), SV *sv);
              SV* Perl_get_sv(PerlInterpreter* my_perl __attribute__((unused)), const char *name, I32 flags)
   __attribute__((nonnull(2)));



              MGVTBL* Perl_get_vtbl(PerlInterpreter* my_perl __attribute__((unused)), int vtbl_id)
   __attribute__((warn_unused_result));

              int Perl_getcwd_sv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              void Perl_gp_free(PerlInterpreter* my_perl __attribute__((unused)), GV* gv);
              GP* Perl_gp_ref(PerlInterpreter* my_perl __attribute__((unused)), GP* gp);
              UV Perl_grok_bin(PerlInterpreter* my_perl __attribute__((unused)), const char* start, STRLEN* len_p, I32* flags, NV *result)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              UV Perl_grok_hex(PerlInterpreter* my_perl __attribute__((unused)), const char* start, STRLEN* len_p, I32* flags, NV *result)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              int Perl_grok_number(PerlInterpreter* my_perl __attribute__((unused)), const char *pv, STRLEN len, UV *valuep)
   __attribute__((nonnull(2)));



              _Bool Perl_grok_numeric_radix(PerlInterpreter* my_perl __attribute__((unused)), const char **sp, const char *send)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              UV Perl_grok_oct(PerlInterpreter* my_perl __attribute__((unused)), const char* start, STRLEN* len_p, I32* flags, NV *result)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));






              GV* Perl_gv_add_by_type(PerlInterpreter* my_perl __attribute__((unused)), GV *gv, svtype type);




              GV* Perl_gv_autoload_pv(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, const char* namepv, U32 flags)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              GV* Perl_gv_autoload_pvn(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, const char* name, STRLEN len, U32 flags)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              GV* Perl_gv_autoload_sv(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, SV* namesv, U32 flags)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              void Perl_gv_check(PerlInterpreter* my_perl __attribute__((unused)), const HV* stash)
   __attribute__((nonnull(2)));



              SV* Perl_gv_const_sv(PerlInterpreter* my_perl __attribute__((unused)), GV* gv)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_gv_dump(PerlInterpreter* my_perl __attribute__((unused)), GV* gv)
   __attribute__((nonnull(2)));



              void Perl_gv_efullname(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const GV* gv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));
# 1306 "./proto.h"
              void Perl_gv_efullname4(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const GV* gv, const char* prefix, _Bool keepmain)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              GV* Perl_gv_fetchfile(PerlInterpreter* my_perl __attribute__((unused)), const char* name)
   __attribute__((nonnull(2)));



              GV* Perl_gv_fetchfile_flags(PerlInterpreter* my_perl __attribute__((unused)), const char *const name, const STRLEN len, const U32 flags)
   __attribute__((nonnull(2)));
# 1328 "./proto.h"
              GV* Perl_gv_fetchmeth_pv(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, const char* name, I32 level, U32 flags)
   __attribute__((nonnull(3)));



              GV* Perl_gv_fetchmeth_pv_autoload(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, const char* name, I32 level, U32 flags)
   __attribute__((nonnull(3)));



              GV* Perl_gv_fetchmeth_pvn(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, const char* name, STRLEN len, I32 level, U32 flags)
   __attribute__((nonnull(3)));



              GV* Perl_gv_fetchmeth_pvn_autoload(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, const char* name, STRLEN len, I32 level, U32 flags)
   __attribute__((nonnull(3)));



              GV* Perl_gv_fetchmeth_sv(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, SV* namesv, I32 level, U32 flags)
   __attribute__((nonnull(3)));



              GV* Perl_gv_fetchmeth_sv_autoload(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, SV* namesv, I32 level, U32 flags)
   __attribute__((nonnull(3)));
# 1364 "./proto.h"
              GV* Perl_gv_fetchmethod_autoload(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, const char* name, I32 autoload)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              GV* Perl_gv_fetchmethod_pv_flags(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, const char* name, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              GV* Perl_gv_fetchmethod_pvn_flags(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, const char* name, const STRLEN len, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              GV* Perl_gv_fetchmethod_sv_flags(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, SV* namesv, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              GV* Perl_gv_fetchpv(PerlInterpreter* my_perl __attribute__((unused)), const char *nambeg, I32 add, const svtype sv_type)
   __attribute__((nonnull(2)));



              GV* Perl_gv_fetchpvn_flags(PerlInterpreter* my_perl __attribute__((unused)), const char* name, STRLEN len, I32 flags, const svtype sv_type)
   __attribute__((nonnull(2)));



              GV* Perl_gv_fetchsv(PerlInterpreter* my_perl __attribute__((unused)), SV *name, I32 flags, const svtype sv_type)
   __attribute__((nonnull(2)));



              void Perl_gv_fullname(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const GV* gv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));
# 1415 "./proto.h"
              void Perl_gv_fullname4(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const GV* gv, const char* prefix, _Bool keepmain)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              CV* Perl_gv_handler(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, I32 id)
   __attribute__((warn_unused_result));





              void Perl_gv_init_pv(PerlInterpreter* my_perl __attribute__((unused)), GV* gv, HV* stash, const char* name, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              void Perl_gv_init_pvn(PerlInterpreter* my_perl __attribute__((unused)), GV* gv, HV* stash, const char* name, STRLEN len, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              void Perl_gv_init_sv(PerlInterpreter* my_perl __attribute__((unused)), GV* gv, HV* stash, SV* namesv, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              void Perl_gv_name_set(PerlInterpreter* my_perl __attribute__((unused)), GV* gv, const char *name, U32 len, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              HV* Perl_gv_stashpv(PerlInterpreter* my_perl __attribute__((unused)), const char* name, I32 flags)
   __attribute__((nonnull(2)));



              HV* Perl_gv_stashpvn(PerlInterpreter* my_perl __attribute__((unused)), const char* name, U32 namelen, I32 flags)
   __attribute__((nonnull(2)));



              HV* Perl_gv_stashsv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, I32 flags)
   __attribute__((nonnull(2)));



              void Perl_gv_try_downgrade(PerlInterpreter* my_perl __attribute__((unused)), GV* gv)
   __attribute__((nonnull(2)));



              AV** Perl_hv_backreferences_p(PerlInterpreter* my_perl __attribute__((unused)), HV *hv)
   __attribute__((nonnull(2)));



              void Perl_hv_clear(PerlInterpreter* my_perl __attribute__((unused)), HV *hv);
              void Perl_hv_clear_placeholders(PerlInterpreter* my_perl __attribute__((unused)), HV *hv)
   __attribute__((nonnull(2)));



              void* Perl_hv_common(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, SV *keysv, const char* key, STRLEN klen, int flags, int action, SV *val, U32 hash);
              void* Perl_hv_common_key_len(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, const char *key, I32 klen_i32, const int action, SV *val, const U32 hash)
   __attribute__((nonnull(3)));



              HV * Perl_hv_copy_hints_hv(PerlInterpreter* my_perl __attribute__((unused)), HV *const ohv)
   __attribute__((warn_unused_result));

              void Perl_hv_delayfree_ent(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, HE *entry)
   __attribute__((nonnull(2)));
# 1507 "./proto.h"
              HE** Perl_hv_eiter_p(PerlInterpreter* my_perl __attribute__((unused)), HV *hv)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_hv_eiter_set(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, HE *eiter)
   __attribute__((nonnull(2)));



              void Perl_hv_ename_add(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, const char *name, U32 len, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_hv_ename_delete(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, const char *name, U32 len, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));
# 1552 "./proto.h"
              STRLEN Perl_hv_fill(PerlInterpreter* my_perl __attribute__((unused)), HV const *const hv)
   __attribute__((nonnull(2)));



              void Perl_hv_free_ent(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, HE *entry)
   __attribute__((nonnull(2)));



              I32 Perl_hv_iterinit(PerlInterpreter* my_perl __attribute__((unused)), HV *hv)
   __attribute__((nonnull(2)));



              char* Perl_hv_iterkey(PerlInterpreter* my_perl __attribute__((unused)), HE* entry, I32* retlen)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_hv_iterkeysv(PerlInterpreter* my_perl __attribute__((unused)), HE* entry)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));
# 1586 "./proto.h"
              HE* Perl_hv_iternext_flags(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, I32 flags)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              SV* Perl_hv_iternextsv(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, char **key, I32 *retlen)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              SV* Perl_hv_iterval(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, HE *entry)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_hv_ksplit(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, IV newmax)
   __attribute__((nonnull(2)));
# 1617 "./proto.h"
              void Perl_hv_name_set(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, const char *name, U32 len, U32 flags)
   __attribute__((nonnull(2)));



              I32 Perl_hv_placeholders_get(PerlInterpreter* my_perl __attribute__((unused)), const HV *hv)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              I32* Perl_hv_placeholders_p(PerlInterpreter* my_perl __attribute__((unused)), HV *hv)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_hv_placeholders_set(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, I32 ph)
   __attribute__((nonnull(2)));



              void Perl_hv_rand_set(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, U32 new_xhv_rand)
   __attribute__((nonnull(2)));



              I32* Perl_hv_riter_p(PerlInterpreter* my_perl __attribute__((unused)), HV *hv)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_hv_riter_set(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, I32 riter)
   __attribute__((nonnull(2)));



              SV* Perl_hv_scalar(PerlInterpreter* my_perl __attribute__((unused)), HV *hv)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));







              void Perl_hv_undef_flags(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, U32 flags);
# 1678 "./proto.h"
              void Perl_init_argv_symbols(PerlInterpreter* my_perl __attribute__((unused)), int argc, char **argv)
   __attribute__((nonnull(3)));



              void Perl_init_constants(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_init_dbargs(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_init_debugger(PerlInterpreter* my_perl __attribute__((unused)));
              int Perl_init_i18nl10n(PerlInterpreter* my_perl __attribute__((unused)), int printwarn);
              int Perl_init_i18nl14n(PerlInterpreter* my_perl __attribute__((unused)), int printwarn);
              void Perl_init_stacks(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_init_tm(PerlInterpreter* my_perl __attribute__((unused)), struct tm *ptm)
   __attribute__((nonnull(2)));



              char* Perl_instr(const char* big, const char* little)
   __attribute__((warn_unused_result))
   __attribute__((pure))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              U32 Perl_intro_my(PerlInterpreter* my_perl __attribute__((unused)));
              OP* Perl_invert(PerlInterpreter* my_perl __attribute__((unused)), OP* cmd)
   __attribute__((warn_unused_result));

              _Bool Perl_io_close(PerlInterpreter* my_perl __attribute__((unused)), IO* io, _Bool not_implicit)
   __attribute__((nonnull(2)));



static __inline__ _Bool S_isALNUM_lazy(PerlInterpreter* my_perl __attribute__((unused)), const char* p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure))
   __attribute__((nonnull(2)));



static __inline__ _Bool S_isIDFIRST_lazy(PerlInterpreter* my_perl __attribute__((unused)), const char* p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure))
   __attribute__((nonnull(2)));



              _Bool Perl_is_ascii_string(const U8 *s, STRLEN len)
   __attribute__((nonnull(1)));



              I32 Perl_is_lvalue_sub(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result));

              _Bool Perl_is_uni_alnum(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_alnum_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_alnumc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_alnumc_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_alpha(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_alpha_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_ascii(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_ascii_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_blank(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_blank_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_cntrl(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_cntrl_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_digit(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_digit_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_graph(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_graph_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_idfirst(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_idfirst_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_lower(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_lower_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_print(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_print_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_punct(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_punct_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_space(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_space_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_upper(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_upper_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_xdigit(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_uni_xdigit_lc(PerlInterpreter* my_perl __attribute__((unused)), UV c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              _Bool Perl_is_utf8_alnum(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_alnumc(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_alpha(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_ascii(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_blank(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              STRLEN Perl_is_utf8_char(const U8 *s)
   __attribute__((deprecated))
   __attribute__((nonnull(1)));



              STRLEN Perl_is_utf8_char_buf(const U8 *buf, const U8 *buf_end)
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_cntrl(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_digit(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_graph(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_idcont(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_idfirst(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_lower(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_mark(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_perl_space(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_perl_word(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_posix_digit(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_print(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_punct(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_space(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_string(const U8 *s, STRLEN len)
   __attribute__((nonnull(1)));
# 2033 "./proto.h"
              _Bool Perl_is_utf8_string_loclen(const U8 *s, STRLEN len, const U8 **ep, STRLEN *el)
   __attribute__((nonnull(1)));



              _Bool Perl_is_utf8_upper(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_xdigit(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_xidcont(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              _Bool Perl_is_utf8_xidfirst(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP* Perl_jmaybe(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((nonnull(2)));



              I32 Perl_keyword(PerlInterpreter* my_perl __attribute__((unused)), const char *name, I32 len, _Bool all_keywords)
   __attribute__((pure))
   __attribute__((nonnull(2)));



              int Perl_keyword_plugin_standard(PerlInterpreter* my_perl __attribute__((unused)), char* keyword_ptr, STRLEN keyword_len, OP** op_ptr)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              void Perl_leave_scope(PerlInterpreter* my_perl __attribute__((unused)), I32 base);
              _Bool Perl_lex_bufutf8(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_lex_discard_to(PerlInterpreter* my_perl __attribute__((unused)), char* ptr)
   __attribute__((nonnull(2)));



              char* Perl_lex_grow_linestr(PerlInterpreter* my_perl __attribute__((unused)), STRLEN len);
              _Bool Perl_lex_next_chunk(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              I32 Perl_lex_peek_unichar(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              void Perl_lex_read_space(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              void Perl_lex_read_to(PerlInterpreter* my_perl __attribute__((unused)), char* ptr)
   __attribute__((nonnull(2)));



              I32 Perl_lex_read_unichar(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              void Perl_lex_start(PerlInterpreter* my_perl __attribute__((unused)), SV* line, PerlIO *rsfp, U32 flags);
              void Perl_lex_stuff_pv(PerlInterpreter* my_perl __attribute__((unused)), const char* pv, U32 flags)
   __attribute__((nonnull(2)));



              void Perl_lex_stuff_pvn(PerlInterpreter* my_perl __attribute__((unused)), const char* pv, STRLEN len, U32 flags)
   __attribute__((nonnull(2)));



              void Perl_lex_stuff_sv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, U32 flags)
   __attribute__((nonnull(2)));



              void Perl_lex_unstuff(PerlInterpreter* my_perl __attribute__((unused)), char* ptr)
   __attribute__((nonnull(2)));



              OP* Perl_list(PerlInterpreter* my_perl __attribute__((unused)), OP* o);
              void Perl_load_module(PerlInterpreter* my_perl __attribute__((unused)), U32 flags, SV* name, SV* ver, ...)
   __attribute__((nonnull(3)));



              OP* Perl_localize(PerlInterpreter* my_perl __attribute__((unused)), OP *o, I32 lex)
   __attribute__((nonnull(2)));



              I32 Perl_looks_like_number(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              int Perl_magic_clear_all_env(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_cleararylen_p(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_clearenv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_clearhint(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_clearhints(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_clearisa(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(3)));



              int Perl_magic_clearpack(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_clearsig(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_copycallchecker(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC *mg, SV *nsv, const char *name, I32 namlen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_magic_dump(PerlInterpreter* my_perl __attribute__((unused)), const MAGIC *mg);
              int Perl_magic_existspack(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_freearylen_p(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_freeovrld(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_get(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_getarylen(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_getdefelem(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_getnkeys(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_getpack(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_getpos(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_getsig(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_getsubstr(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_gettaint(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_getuvar(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_getvec(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_killbackrefs(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, MAGIC *mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_magic_methcall(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, const MAGIC *mg, const char *meth, U32 flags, U32 argc, ...)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              int Perl_magic_nextpack(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, MAGIC *mg, SV *key)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              U32 Perl_magic_regdata_cnt(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_regdatum_get(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_magic_scalarpack(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, MAGIC *mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_set(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_set_all_env(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setarylen(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setdbline(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setdefelem(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setenv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_sethint(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setisa(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setmglob(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setnkeys(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setpack(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setpos(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setregexp(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setsig(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(3)));



              int Perl_magic_setsubstr(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_settaint(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setutf8(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setuvar(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_setvec(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              U32 Perl_magic_sizepack(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_magic_wipepack(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void * Perl_malloc(size_t nbytes)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              void Perl_markstack_grow(PerlInterpreter* my_perl __attribute__((unused)));
              SV* Perl_mess(PerlInterpreter* my_perl __attribute__((unused)), const char* pat, ...)
   __attribute__((format(__printf__,2,3)))
   __attribute__((nonnull(2)));



              SV* Perl_mess_sv(PerlInterpreter* my_perl __attribute__((unused)), SV* basemsg, _Bool consume)
   __attribute__((nonnull(2)));



              void Perl_mfree(void * where);
              int Perl_mg_clear(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              int Perl_mg_copy(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, SV *nsv, const char *key, I32 klen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              MAGIC* Perl_mg_find(PerlInterpreter* my_perl __attribute__((unused)), const SV* sv, int type)
   __attribute__((warn_unused_result));

              MAGIC* Perl_mg_findext(PerlInterpreter* my_perl __attribute__((unused)), const SV* sv, int type, const MGVTBL *vtbl)
   __attribute__((warn_unused_result));

              int Perl_mg_free(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              void Perl_mg_free_type(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, int how)
   __attribute__((nonnull(2)));



              int Perl_mg_get(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              U32 Perl_mg_length(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((deprecated))
   __attribute__((nonnull(2)));



              void Perl_mg_localize(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, SV* nsv, _Bool setmagic)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_mg_magical(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              int Perl_mg_set(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              I32 Perl_mg_size(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              void Perl_mini_mktime(PerlInterpreter* my_perl __attribute__((unused)), struct tm *ptm)
   __attribute__((nonnull(2)));



              int Perl_mode_from_discipline(PerlInterpreter* my_perl __attribute__((unused)), const char* s, STRLEN len);
              void * Perl_more_bodies(PerlInterpreter* my_perl __attribute__((unused)), const svtype sv_type, const size_t body_size, const size_t arena_size);
              const char* Perl_moreswitches(PerlInterpreter* my_perl __attribute__((unused)), const char* s)
   __attribute__((nonnull(2)));



              const struct mro_alg * Perl_mro_get_from_name(PerlInterpreter* my_perl __attribute__((unused)), SV *name)
   __attribute__((nonnull(2)));



              AV* Perl_mro_get_linear_isa(PerlInterpreter* my_perl __attribute__((unused)), HV* stash)
   __attribute__((nonnull(2)));



              SV* Perl_mro_get_private_data(PerlInterpreter* my_perl __attribute__((unused)), struct mro_meta *const smeta, const struct mro_alg *const which)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_mro_isa_changed_in(PerlInterpreter* my_perl __attribute__((unused)), HV* stash)
   __attribute__((nonnull(2)));



              struct mro_meta* Perl_mro_meta_init(PerlInterpreter* my_perl __attribute__((unused)), HV* stash)
   __attribute__((nonnull(2)));



              void Perl_mro_method_changed_in(PerlInterpreter* my_perl __attribute__((unused)), HV* stash)
   __attribute__((nonnull(2)));



              void Perl_mro_package_moved(PerlInterpreter* my_perl __attribute__((unused)), HV * const stash, HV * const oldstash, const GV * const gv, U32 flags)
   __attribute__((nonnull(4)));



              void Perl_mro_register(PerlInterpreter* my_perl __attribute__((unused)), const struct mro_alg *mro)
   __attribute__((nonnull(2)));



              void Perl_mro_set_mro(PerlInterpreter* my_perl __attribute__((unused)), struct mro_meta *const meta, SV *const name)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_mro_set_private_data(PerlInterpreter* my_perl __attribute__((unused)), struct mro_meta *const smeta, const struct mro_alg *const which, SV *const data)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              NV Perl_my_atof(PerlInterpreter* my_perl __attribute__((unused)), const char *s)
   __attribute__((nonnull(2)));



              char* Perl_my_atof2(PerlInterpreter* my_perl __attribute__((unused)), const char *s, NV* value)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              OP * Perl_my_attrs(PerlInterpreter* my_perl __attribute__((unused)), OP *o, OP *attrs)
   __attribute__((nonnull(2)));



              void Perl_my_clearenv(PerlInterpreter* my_perl __attribute__((unused)));
              int Perl_my_dirfd(PerlInterpreter* my_perl __attribute__((unused)), DIR* dir);
                     void Perl_my_exit(PerlInterpreter* my_perl __attribute__((unused)), U32 status)
   __attribute__((noreturn));

                     void Perl_my_failure_exit(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((noreturn));

              I32 Perl_my_fflush_all(PerlInterpreter* my_perl __attribute__((unused)));
              pid_t Perl_my_fork(void);

              I32 Perl_my_lstat_flags(PerlInterpreter* my_perl __attribute__((unused)), const U32 flags);
              PerlIO* Perl_my_popen_list(PerlInterpreter* my_perl __attribute__((unused)), const char* mode, int n, SV ** args)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              void Perl_my_setenv(PerlInterpreter* my_perl __attribute__((unused)), const char* nam, const char* val);
              int Perl_my_snprintf(char *buffer, const size_t len, const char *format, ...)
   __attribute__((format(__printf__,3,4)))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(3)));



              int Perl_my_socketpair(int family, int type, int protocol, int fd[2]);

              I32 Perl_my_stat_flags(PerlInterpreter* my_perl __attribute__((unused)), const U32 flags);
              char * Perl_my_strftime(PerlInterpreter* my_perl __attribute__((unused)), const char *fmt, int sec, int min, int hour, int mday, int mon, int year, int wday, int yday, int isdst)
   __attribute__((nonnull(2)));



              void Perl_my_swabn(void* ptr, int n)
   __attribute__((nonnull(1)));



              void Perl_my_unexec(PerlInterpreter* my_perl __attribute__((unused)));
              int Perl_my_vsnprintf(char *buffer, const size_t len, const char *format, va_list ap)
   __attribute__((nonnull(1)))
   __attribute__((nonnull(3)));



              OP* Perl_newANONATTRSUB(PerlInterpreter* my_perl __attribute__((unused)), I32 floor, OP *proto, OP *attrs, OP *block);
              OP* Perl_newANONHASH(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              OP* Perl_newANONLIST(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              OP* Perl_newANONSUB(PerlInterpreter* my_perl __attribute__((unused)), I32 floor, OP* proto, OP* block);
              OP* Perl_newASSIGNOP(PerlInterpreter* my_perl __attribute__((unused)), I32 flags, OP* left, I32 optype, OP* right)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              CV* Perl_newATTRSUB(PerlInterpreter* my_perl __attribute__((unused)), I32 floor, OP *o, OP *proto, OP *attrs, OP *block);
              CV* Perl_newATTRSUB_flags(PerlInterpreter* my_perl __attribute__((unused)), I32 floor, OP *o, OP *proto, OP *attrs, OP *block, U32 flags);



              OP* Perl_newAVREF(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP* Perl_newBINOP(PerlInterpreter* my_perl __attribute__((unused)), I32 type, I32 flags, OP* first, OP* last)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              OP* Perl_newCONDOP(PerlInterpreter* my_perl __attribute__((unused)), I32 flags, OP* first, OP* trueop, OP* falseop)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              CV* Perl_newCONSTSUB(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, const char* name, SV* sv);
              CV* Perl_newCONSTSUB_flags(PerlInterpreter* my_perl __attribute__((unused)), HV* stash, const char* name, STRLEN len, U32 flags, SV* sv);
              OP* Perl_newCVREF(PerlInterpreter* my_perl __attribute__((unused)), I32 flags, OP* o)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              OP* Perl_newFOROP(PerlInterpreter* my_perl __attribute__((unused)), I32 flags, OP* sv, OP* expr, OP* block, OP* cont)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(4)));



              OP* Perl_newGIVENOP(PerlInterpreter* my_perl __attribute__((unused)), OP* cond, OP* block, PADOFFSET defsv_off)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              GP * Perl_newGP(PerlInterpreter* my_perl __attribute__((unused)), GV *const gv)
   __attribute__((nonnull(2)));



              OP* Perl_newGVOP(PerlInterpreter* my_perl __attribute__((unused)), I32 type, I32 flags, GV* gv)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(4)));



              OP* Perl_newGVREF(PerlInterpreter* my_perl __attribute__((unused)), I32 type, OP* o)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));




              GV* Perl_newGVgen_flags(PerlInterpreter* my_perl __attribute__((unused)), const char* pack, U32 flags)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));






              OP* Perl_newHVREF(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              HV* Perl_newHVhv(PerlInterpreter* my_perl __attribute__((unused)), HV *hv)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));





              OP* Perl_newLISTOP(PerlInterpreter* my_perl __attribute__((unused)), I32 type, I32 flags, OP* first, OP* last)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              OP* Perl_newLOGOP(PerlInterpreter* my_perl __attribute__((unused)), I32 optype, I32 flags, OP *first, OP *other)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)));



              OP* Perl_newLOOPEX(PerlInterpreter* my_perl __attribute__((unused)), I32 type, OP* label)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              OP* Perl_newLOOPOP(PerlInterpreter* my_perl __attribute__((unused)), I32 flags, I32 debuggable, OP* expr, OP* block)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              CV * Perl_newMYSUB(PerlInterpreter* my_perl __attribute__((unused)), I32 floor, OP *o, OP *proto, OP *attrs, OP *block)
   __attribute__((nonnull(3)));



              OP* Perl_newNULLLIST(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              OP* Perl_newOP(PerlInterpreter* my_perl __attribute__((unused)), I32 optype, I32 flags)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              OP* Perl_newPMOP(PerlInterpreter* my_perl __attribute__((unused)), I32 type, I32 flags)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              void Perl_newPROG(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((nonnull(2)));



              OP* Perl_newPVOP(PerlInterpreter* my_perl __attribute__((unused)), I32 type, I32 flags, char* pv)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              OP* Perl_newRANGE(PerlInterpreter* my_perl __attribute__((unused)), I32 flags, OP* left, OP* right)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              SV* Perl_newRV(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              SV* Perl_newRV_noinc(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP* Perl_newSLICEOP(PerlInterpreter* my_perl __attribute__((unused)), I32 flags, OP* subscript, OP* listop)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              OP* Perl_newSTATEOP(PerlInterpreter* my_perl __attribute__((unused)), I32 flags, char* label, OP* o)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              CV* Perl_newSTUB(PerlInterpreter* my_perl __attribute__((unused)), GV *gv, _Bool fake)
   __attribute__((nonnull(2)));




              SV* Perl_newSV(PerlInterpreter* my_perl __attribute__((unused)), const STRLEN len)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              OP* Perl_newSVOP(PerlInterpreter* my_perl __attribute__((unused)), I32 type, I32 flags, SV* sv)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(4)));



              OP* Perl_newSVREF(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              SV* Perl_newSV_type(PerlInterpreter* my_perl __attribute__((unused)), const svtype type)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              SV* Perl_newSVhek(PerlInterpreter* my_perl __attribute__((unused)), const HEK *const hek)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              SV* Perl_newSViv(PerlInterpreter* my_perl __attribute__((unused)), const IV i)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              SV* Perl_newSVnv(PerlInterpreter* my_perl __attribute__((unused)), const NV n)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              SV* Perl_newSVpv(PerlInterpreter* my_perl __attribute__((unused)), const char *const s, const STRLEN len)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              SV* Perl_newSVpv_share(PerlInterpreter* my_perl __attribute__((unused)), const char* s, U32 hash)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              SV* Perl_newSVpvf(PerlInterpreter* my_perl __attribute__((unused)), const char *const pat, ...)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((format(__printf__,2,3)))
   __attribute__((nonnull(2)));



              SV* Perl_newSVpvn(PerlInterpreter* my_perl __attribute__((unused)), const char *const s, const STRLEN len)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              SV* Perl_newSVpvn_flags(PerlInterpreter* my_perl __attribute__((unused)), const char *const s, const STRLEN len, const U32 flags)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              SV* Perl_newSVpvn_share(PerlInterpreter* my_perl __attribute__((unused)), const char* s, I32 len, U32 hash)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              SV* Perl_newSVrv(PerlInterpreter* my_perl __attribute__((unused)), SV *const rv, const char *const classname)
   __attribute__((nonnull(2)));



              SV* Perl_newSVsv(PerlInterpreter* my_perl __attribute__((unused)), SV *const old)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              SV* Perl_newSVuv(PerlInterpreter* my_perl __attribute__((unused)), const UV u)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              OP* Perl_newUNOP(PerlInterpreter* my_perl __attribute__((unused)), I32 type, I32 flags, OP* first)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              OP* Perl_newWHENOP(PerlInterpreter* my_perl __attribute__((unused)), OP* cond, OP* block)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              OP* Perl_newWHILEOP(PerlInterpreter* my_perl __attribute__((unused)), I32 flags, I32 debuggable, LOOP* loop, OP* expr, OP* block, OP* cont, I32 has_my)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              CV* Perl_newXS(PerlInterpreter* my_perl __attribute__((unused)), const char *name, XSUBADDR_t subaddr, const char *filename)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              CV * Perl_newXS_flags(PerlInterpreter* my_perl __attribute__((unused)), const char *name, XSUBADDR_t subaddr, const char *const filename, const char *const proto, U32 flags)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              CV * Perl_newXS_len_flags(PerlInterpreter* my_perl __attribute__((unused)), const char *name, STRLEN len, XSUBADDR_t subaddr, const char *const filename, const char *const proto, SV **const_svp, U32 flags)
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)));



              void Perl_new_collate(PerlInterpreter* my_perl __attribute__((unused)), const char* newcoll);
              void Perl_new_ctype(PerlInterpreter* my_perl __attribute__((unused)), const char* newctype)
   __attribute__((nonnull(2)));



              void Perl_new_numeric(PerlInterpreter* my_perl __attribute__((unused)), const char* newcoll);
              PERL_SI* Perl_new_stackinfo(PerlInterpreter* my_perl __attribute__((unused)), I32 stitems, I32 cxitems)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              SV* Perl_new_version(PerlInterpreter* my_perl __attribute__((unused)), SV *ver)
   __attribute__((nonnull(2)));



              STRLEN * Perl_new_warnings_bitfield(PerlInterpreter* my_perl __attribute__((unused)), STRLEN *buffer, const char *const bits, STRLEN size)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              PerlIO* Perl_nextargv(PerlInterpreter* my_perl __attribute__((unused)), GV* gv)
   __attribute__((nonnull(2)));



              char* Perl_ninstr(const char* big, const char* bigend, const char* little, const char* lend)
   __attribute__((pure))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              int Perl_nothreadhook(PerlInterpreter* my_perl __attribute__((unused)));
              OP* Perl_oopsAV(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP* Perl_oopsHV(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP* Perl_op_append_elem(PerlInterpreter* my_perl __attribute__((unused)), I32 optype, OP* first, OP* last);
              OP* Perl_op_append_list(PerlInterpreter* my_perl __attribute__((unused)), I32 optype, OP* first, OP* last);
              void Perl_op_clear(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((nonnull(2)));



              SV* Perl_op_const_sv(PerlInterpreter* my_perl __attribute__((unused)), const OP* o, CV* cv)
   __attribute__((warn_unused_result));

              OP* Perl_op_contextualize(PerlInterpreter* my_perl __attribute__((unused)), OP* o, I32 context)
   __attribute__((nonnull(2)));



              void Perl_op_dump(PerlInterpreter* my_perl __attribute__((unused)), const OP *o)
   __attribute__((nonnull(2)));



              void Perl_op_free(PerlInterpreter* my_perl __attribute__((unused)), OP* arg);
              OP* Perl_op_linklist(PerlInterpreter* my_perl __attribute__((unused)), OP *o)
   __attribute__((nonnull(2)));




              OP* Perl_op_lvalue_flags(PerlInterpreter* my_perl __attribute__((unused)), OP* o, I32 type, U32 flags);
              void Perl_op_null(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((nonnull(2)));



              OP* Perl_op_prepend_elem(PerlInterpreter* my_perl __attribute__((unused)), I32 optype, OP* first, OP* last);
              void Perl_op_refcnt_lock(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_op_refcnt_unlock(PerlInterpreter* my_perl __attribute__((unused)));
              OP* Perl_op_scope(PerlInterpreter* my_perl __attribute__((unused)), OP* o);
              OP* Perl_op_unscope(PerlInterpreter* my_perl __attribute__((unused)), OP* o);
              void Perl_pack_cat(PerlInterpreter* my_perl __attribute__((unused)), SV *cat, const char *pat, const char *patend, SV **beglist, SV **endlist, SV ***next_in_list, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)))
   __attribute__((nonnull(6)))
   __attribute__((nonnull(7)));



              void Perl_package_version(PerlInterpreter* my_perl __attribute__((unused)), OP* v)
   __attribute__((nonnull(2)));



              void Perl_packlist(PerlInterpreter* my_perl __attribute__((unused)), SV *cat, const char *pat, const char *patend, SV **beglist, SV **endlist)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)))
   __attribute__((nonnull(6)));



              PADOFFSET Perl_pad_add_anon(PerlInterpreter* my_perl __attribute__((unused)), CV* func, I32 optype)
   __attribute__((nonnull(2)));



              PADOFFSET Perl_pad_add_name_pv(PerlInterpreter* my_perl __attribute__((unused)), const char *name, const U32 flags, HV *typestash, HV *ourstash)
   __attribute__((nonnull(2)));



              PADOFFSET Perl_pad_add_name_pvn(PerlInterpreter* my_perl __attribute__((unused)), const char *namepv, STRLEN namelen, U32 flags, HV *typestash, HV *ourstash)
   __attribute__((nonnull(2)));



              PADOFFSET Perl_pad_add_name_sv(PerlInterpreter* my_perl __attribute__((unused)), SV *name, U32 flags, HV *typestash, HV *ourstash)
   __attribute__((nonnull(2)));



              PADOFFSET Perl_pad_alloc(PerlInterpreter* my_perl __attribute__((unused)), I32 optype, U32 tmptype);
              void Perl_pad_block_start(PerlInterpreter* my_perl __attribute__((unused)), int full);
              HV* Perl_pad_compname_type(PerlInterpreter* my_perl __attribute__((unused)), const PADOFFSET po)
   __attribute__((warn_unused_result));

              PADOFFSET Perl_pad_findmy_pv(PerlInterpreter* my_perl __attribute__((unused)), const char* name, U32 flags)
   __attribute__((nonnull(2)));



              PADOFFSET Perl_pad_findmy_pvn(PerlInterpreter* my_perl __attribute__((unused)), const char* namepv, STRLEN namelen, U32 flags)
   __attribute__((nonnull(2)));



              PADOFFSET Perl_pad_findmy_sv(PerlInterpreter* my_perl __attribute__((unused)), SV* name, U32 flags)
   __attribute__((nonnull(2)));



              void Perl_pad_fixup_inner_anons(PerlInterpreter* my_perl __attribute__((unused)), PADLIST *padlist, CV *old_cv, CV *new_cv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_pad_free(PerlInterpreter* my_perl __attribute__((unused)), PADOFFSET po);
              OP * Perl_pad_leavemy(PerlInterpreter* my_perl __attribute__((unused)));
              PADLIST* Perl_pad_new(PerlInterpreter* my_perl __attribute__((unused)), int flags)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              void Perl_pad_push(PerlInterpreter* my_perl __attribute__((unused)), PADLIST *padlist, int depth)
   __attribute__((nonnull(2)));



              void Perl_pad_swipe(PerlInterpreter* my_perl __attribute__((unused)), PADOFFSET po, _Bool refadjust);
              void Perl_pad_tidy(PerlInterpreter* my_perl __attribute__((unused)), padtidy_type type);
              PAD ** Perl_padlist_store(PerlInterpreter* my_perl __attribute__((unused)), PADLIST *padlist, I32 key, PAD *val)
   __attribute__((nonnull(2)));



              OP* Perl_parse_arithexpr(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              OP* Perl_parse_barestmt(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              OP* Perl_parse_block(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              OP* Perl_parse_fullexpr(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              OP* Perl_parse_fullstmt(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              SV* Perl_parse_label(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              OP* Perl_parse_listexpr(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              OP* Perl_parse_stmtseq(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              OP* Perl_parse_termexpr(PerlInterpreter* my_perl __attribute__((unused)), U32 flags);
              U32 Perl_parse_unicode_opts(PerlInterpreter* my_perl __attribute__((unused)), const char **popt)
   __attribute__((nonnull(2)));



              void Perl_parser_free(PerlInterpreter* my_perl __attribute__((unused)), const yy_parser *parser)
   __attribute__((nonnull(2)));



              void Perl_peep(PerlInterpreter* my_perl __attribute__((unused)), OP* o);
              PerlInterpreter* perl_alloc(void);
              void perl_construct(PerlInterpreter *my_perl)
   __attribute__((nonnull(1)));



              int perl_destruct(PerlInterpreter *my_perl)
   __attribute__((nonnull(1)));



              void perl_free(PerlInterpreter *my_perl)
   __attribute__((nonnull(1)));



              int perl_parse(PerlInterpreter *my_perl, XSINIT_t xsinit, int argc, char** argv, char** env)
   __attribute__((nonnull(1)));



              int perl_run(PerlInterpreter *my_perl)
   __attribute__((nonnull(1)));



              void Perl_pmop_dump(PerlInterpreter* my_perl __attribute__((unused)), PMOP* pm);
              OP* Perl_pmruntime(PerlInterpreter* my_perl __attribute__((unused)), OP *o, OP *expr, _Bool isreg, I32 floor)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_pop_scope(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_populate_isa(PerlInterpreter* my_perl __attribute__((unused)), const char *name, STRLEN len, ...)
   __attribute__((nonnull(2)));



              REGEXP* Perl_pregcomp(PerlInterpreter* my_perl __attribute__((unused)), SV * const pattern, const U32 flags)
   __attribute__((nonnull(2)));



              I32 Perl_pregexec(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const prog, char* stringarg, char* strend, char* strbeg, I32 minend, SV* screamer, U32 nosave)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)))
   __attribute__((nonnull(7)));



              void Perl_pregfree(PerlInterpreter* my_perl __attribute__((unused)), REGEXP* r);
              void Perl_pregfree2(PerlInterpreter* my_perl __attribute__((unused)), REGEXP *rx)
   __attribute__((nonnull(2)));



              const char* Perl_prescan_version(PerlInterpreter* my_perl __attribute__((unused)), const char *s, _Bool strict, const char** errstr, _Bool *sqv, int *ssaw_decimal, int *swidth, _Bool *salpha)
   __attribute__((nonnull(2)));



              void Perl_ptr_table_clear(PerlInterpreter* my_perl __attribute__((unused)), PTR_TBL_t *const tbl)
   __attribute__((deprecated));

              void* Perl_ptr_table_fetch(PerlInterpreter* my_perl __attribute__((unused)), PTR_TBL_t *const tbl, const void *const sv)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_ptr_table_free(PerlInterpreter* my_perl __attribute__((unused)), PTR_TBL_t *const tbl);
              PTR_TBL_t* Perl_ptr_table_new(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              void Perl_ptr_table_split(PerlInterpreter* my_perl __attribute__((unused)), PTR_TBL_t *const tbl)
   __attribute__((nonnull(2)));



              void Perl_ptr_table_store(PerlInterpreter* my_perl __attribute__((unused)), PTR_TBL_t *const tbl, const void *const oldsv, void *const newsv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              void Perl_push_scope(PerlInterpreter* my_perl __attribute__((unused)));
              char* Perl_pv_display(PerlInterpreter* my_perl __attribute__((unused)), SV *dsv, const char *pv, STRLEN cur, STRLEN len, STRLEN pvlim)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              char* Perl_pv_escape(PerlInterpreter* my_perl __attribute__((unused)), SV *dsv, char const * const str, const STRLEN count, const STRLEN max, STRLEN * const escaped, const U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              char* Perl_pv_pretty(PerlInterpreter* my_perl __attribute__((unused)), SV *dsv, char const * const str, const STRLEN count, const STRLEN max, char const * const start_color, char const * const end_color, const U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              char* Perl_pv_uni_display(PerlInterpreter* my_perl __attribute__((unused)), SV *dsv, const U8 *spv, STRLEN len, STRLEN pvlim, UV flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_qerror(PerlInterpreter* my_perl __attribute__((unused)), SV* err)
   __attribute__((nonnull(2)));



              REGEXP* Perl_re_compile(PerlInterpreter* my_perl __attribute__((unused)), SV * const pattern, U32 orig_rx_flags)
   __attribute__((nonnull(2)));



              char* Perl_re_intuit_start(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, SV* sv, char* strpos, char* strend, const U32 flags, re_scream_pos_data *data)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)));



              SV* Perl_re_intuit_string(PerlInterpreter* my_perl __attribute__((unused)), REGEXP *const r)
   __attribute__((nonnull(2)));



              REGEXP* Perl_re_op_compile(PerlInterpreter* my_perl __attribute__((unused)), SV ** const patternp, int pat_count, OP *expr, const regexp_engine* eng, REGEXP *old_re, _Bool *is_bare_re, U32 rx_flags, U32 pm_flags)
   __attribute__((nonnull(5)));



              void * Perl_realloc(void * where, size_t nbytes)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              void Perl_reentrant_free(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_reentrant_init(PerlInterpreter* my_perl __attribute__((unused)));
              void* Perl_reentrant_retry(const char *f, ...)
   __attribute__((nonnull(1)));



              void Perl_reentrant_size(PerlInterpreter* my_perl __attribute__((unused)));

              HV * Perl_refcounted_he_chain_2hv(PerlInterpreter* my_perl __attribute__((unused)), const struct refcounted_he *c, U32 flags);
              SV * Perl_refcounted_he_fetch_pv(PerlInterpreter* my_perl __attribute__((unused)), const struct refcounted_he *chain, const char *key, U32 hash, U32 flags)
   __attribute__((nonnull(3)));



              SV * Perl_refcounted_he_fetch_pvn(PerlInterpreter* my_perl __attribute__((unused)), const struct refcounted_he *chain, const char *keypv, STRLEN keylen, U32 hash, U32 flags)
   __attribute__((nonnull(3)));



              SV * Perl_refcounted_he_fetch_sv(PerlInterpreter* my_perl __attribute__((unused)), const struct refcounted_he *chain, SV *key, U32 hash, U32 flags)
   __attribute__((nonnull(3)));



              void Perl_refcounted_he_free(PerlInterpreter* my_perl __attribute__((unused)), struct refcounted_he *he);
              struct refcounted_he * Perl_refcounted_he_inc(PerlInterpreter* my_perl __attribute__((unused)), struct refcounted_he *he);
              struct refcounted_he * Perl_refcounted_he_new_pv(PerlInterpreter* my_perl __attribute__((unused)), struct refcounted_he *parent, const char *key, U32 hash, SV *value, U32 flags)
   __attribute__((nonnull(3)));



              struct refcounted_he * Perl_refcounted_he_new_pvn(PerlInterpreter* my_perl __attribute__((unused)), struct refcounted_he *parent, const char *keypv, STRLEN keylen, U32 hash, SV *value, U32 flags)
   __attribute__((nonnull(3)));



              struct refcounted_he * Perl_refcounted_he_new_sv(PerlInterpreter* my_perl __attribute__((unused)), struct refcounted_he *parent, SV *key, U32 hash, SV *value, U32 flags)
   __attribute__((nonnull(3)));



              SV* Perl_reg_named_buff(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, SV * const key, SV * const value, const U32 flags)
   __attribute__((nonnull(2)));



              SV* Perl_reg_named_buff_all(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, const U32 flags)
   __attribute__((nonnull(2)));



              _Bool Perl_reg_named_buff_exists(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, SV * const key, const U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_reg_named_buff_fetch(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, SV * const namesv, const U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_reg_named_buff_firstkey(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, const U32 flags)
   __attribute__((nonnull(2)));



              SV* Perl_reg_named_buff_iter(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, const SV * const lastkey, const U32 flags)
   __attribute__((nonnull(2)));



              SV* Perl_reg_named_buff_nextkey(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, const U32 flags)
   __attribute__((nonnull(2)));



              SV* Perl_reg_named_buff_scalar(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, const U32 flags)
   __attribute__((nonnull(2)));



              void Perl_reg_numbered_buff_fetch(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, const I32 paren, SV * const sv)
   __attribute__((nonnull(2)));



              I32 Perl_reg_numbered_buff_length(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, const SV * const sv, const I32 paren)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_reg_numbered_buff_store(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx, const I32 paren, SV const * const value)
   __attribute__((nonnull(2)));



              SV* Perl_reg_qr_package(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const rx)
   __attribute__((nonnull(2)));



              REGEXP* Perl_reg_temp_copy(PerlInterpreter* my_perl __attribute__((unused)), REGEXP* ret_x, REGEXP* rx)
   __attribute__((nonnull(3)));



              SV* Perl_regclass_swash(PerlInterpreter* my_perl __attribute__((unused)), const regexp *prog, const struct regnode *node, _Bool doinit, SV **listsvp, SV **altsvp)
   __attribute__((nonnull(3)));



              void Perl_regdump(PerlInterpreter* my_perl __attribute__((unused)), const regexp* r)
   __attribute__((nonnull(2)));



              I32 Perl_regexec_flags(PerlInterpreter* my_perl __attribute__((unused)), REGEXP *const rx, char *stringarg, char *strend, char *strbeg, I32 minend, SV *sv, void *data, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)))
   __attribute__((nonnull(7)));



              void Perl_regfree_internal(PerlInterpreter* my_perl __attribute__((unused)), REGEXP *const rx)
   __attribute__((nonnull(2)));



              void Perl_reginitcolors(PerlInterpreter* my_perl __attribute__((unused)));
              regnode* Perl_regnext(PerlInterpreter* my_perl __attribute__((unused)), regnode* p)
   __attribute__((warn_unused_result));

              void Perl_regprop(PerlInterpreter* my_perl __attribute__((unused)), const regexp *prog, SV* sv, const regnode* o)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_repeatcpy(char* to, const char* from, I32 len, IV count)
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              void Perl_report_evil_fh(PerlInterpreter* my_perl __attribute__((unused)), const GV *gv);
              void Perl_report_uninit(PerlInterpreter* my_perl __attribute__((unused)), const SV *uninit_sv);
              void Perl_report_wrongway_fh(PerlInterpreter* my_perl __attribute__((unused)), const GV *gv, const char have);
              void Perl_require_pv(PerlInterpreter* my_perl __attribute__((unused)), const char* pv)
   __attribute__((nonnull(2)));



              char* Perl_rninstr(const char* big, const char* bigend, const char* little, const char* lend)
   __attribute__((pure))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_rpeep(PerlInterpreter* my_perl __attribute__((unused)), OP* o);
              Sighandler_t Perl_rsignal(PerlInterpreter* my_perl __attribute__((unused)), int i, Sighandler_t t);
              int Perl_rsignal_restore(PerlInterpreter* my_perl __attribute__((unused)), int i, Sigsave_t* t);
              int Perl_rsignal_save(PerlInterpreter* my_perl __attribute__((unused)), int i, Sighandler_t t1, Sigsave_t* save)
   __attribute__((nonnull(4)));



              Sighandler_t Perl_rsignal_state(PerlInterpreter* my_perl __attribute__((unused)), int i);
              int Perl_runops_debug(PerlInterpreter* my_perl __attribute__((unused)));
              int Perl_runops_standard(PerlInterpreter* my_perl __attribute__((unused)));
              CV* Perl_rv2cv_op_cv(PerlInterpreter* my_perl __attribute__((unused)), OP *cvop, U32 flags)
   __attribute__((nonnull(2)));



              void Perl_rxres_save(PerlInterpreter* my_perl __attribute__((unused)), void **rsp, REGEXP *rx)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void * Perl_safesyscalloc(size_t elements, size_t size)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              void Perl_safesysfree(void * where);
              void * Perl_safesysmalloc(size_t nbytes)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              void * Perl_safesysrealloc(void * where, size_t nbytes)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              void Perl_save_I16(PerlInterpreter* my_perl __attribute__((unused)), I16* intp)
   __attribute__((nonnull(2)));



              void Perl_save_I32(PerlInterpreter* my_perl __attribute__((unused)), I32* intp)
   __attribute__((nonnull(2)));



              void Perl_save_I8(PerlInterpreter* my_perl __attribute__((unused)), I8* bytep)
   __attribute__((nonnull(2)));



              void Perl_save_adelete(PerlInterpreter* my_perl __attribute__((unused)), AV *av, I32 key)
   __attribute__((nonnull(2)));







              void Perl_save_aelem_flags(PerlInterpreter* my_perl __attribute__((unused)), AV* av, I32 idx, SV **sptr, const U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              I32 Perl_save_alloc(PerlInterpreter* my_perl __attribute__((unused)), I32 size, I32 pad);
              void Perl_save_aptr(PerlInterpreter* my_perl __attribute__((unused)), AV** aptr)
   __attribute__((nonnull(2)));



              AV* Perl_save_ary(PerlInterpreter* my_perl __attribute__((unused)), GV* gv)
   __attribute__((nonnull(2)));



              void Perl_save_bool(PerlInterpreter* my_perl __attribute__((unused)), _Bool* boolp)
   __attribute__((nonnull(2)));



              void Perl_save_clearsv(PerlInterpreter* my_perl __attribute__((unused)), SV** svp)
   __attribute__((nonnull(2)));



              void Perl_save_delete(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, char *key, I32 klen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_save_destructor(PerlInterpreter* my_perl __attribute__((unused)), DESTRUCTORFUNC_NOCONTEXT_t f, void* p)
   __attribute__((nonnull(3)));



              void Perl_save_destructor_x(PerlInterpreter* my_perl __attribute__((unused)), DESTRUCTORFUNC_t f, void* p);



              void Perl_save_generic_pvref(PerlInterpreter* my_perl __attribute__((unused)), char** str)
   __attribute__((nonnull(2)));



              void Perl_save_generic_svref(PerlInterpreter* my_perl __attribute__((unused)), SV** sptr)
   __attribute__((nonnull(2)));



              void Perl_save_gp(PerlInterpreter* my_perl __attribute__((unused)), GV* gv, I32 empty)
   __attribute__((nonnull(2)));



              HV* Perl_save_hash(PerlInterpreter* my_perl __attribute__((unused)), GV* gv)
   __attribute__((nonnull(2)));



              void Perl_save_hdelete(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, SV *keysv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));
# 3580 "./proto.h"
              void Perl_save_helem_flags(PerlInterpreter* my_perl __attribute__((unused)), HV *hv, SV *key, SV **sptr, const U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_save_hints(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_save_hptr(PerlInterpreter* my_perl __attribute__((unused)), HV** hptr)
   __attribute__((nonnull(2)));



              void Perl_save_int(PerlInterpreter* my_perl __attribute__((unused)), int* intp)
   __attribute__((nonnull(2)));



              void Perl_save_item(PerlInterpreter* my_perl __attribute__((unused)), SV* item)
   __attribute__((nonnull(2)));



              void Perl_save_iv(PerlInterpreter* my_perl __attribute__((unused)), IV *ivp)
   __attribute__((nonnull(2)));



              void Perl_save_list(PerlInterpreter* my_perl __attribute__((unused)), SV** sarg, I32 maxsarg)
   __attribute__((nonnull(2)));



              void Perl_save_long(PerlInterpreter* my_perl __attribute__((unused)), long* longp)
   __attribute__((nonnull(2)));
# 3623 "./proto.h"
              void Perl_save_nogv(PerlInterpreter* my_perl __attribute__((unused)), GV* gv)
   __attribute__((nonnull(2)));




              void Perl_save_padsv_and_mortalize(PerlInterpreter* my_perl __attribute__((unused)), PADOFFSET off);
              void Perl_save_pptr(PerlInterpreter* my_perl __attribute__((unused)), char** pptr)
   __attribute__((nonnull(2)));



              void Perl_save_pushi32ptr(PerlInterpreter* my_perl __attribute__((unused)), const I32 i, void *const ptr, const int type);
              void Perl_save_pushptr(PerlInterpreter* my_perl __attribute__((unused)), void *const ptr, const int type);
              void Perl_save_pushptrptr(PerlInterpreter* my_perl __attribute__((unused)), void *const ptr1, void *const ptr2, const int type);
              void Perl_save_re_context(PerlInterpreter* my_perl __attribute__((unused)));
              SV* Perl_save_scalar(PerlInterpreter* my_perl __attribute__((unused)), GV* gv)
   __attribute__((nonnull(2)));



              void Perl_save_set_svflags(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, U32 mask, U32 val)
   __attribute__((nonnull(2)));



              void Perl_save_shared_pvref(PerlInterpreter* my_perl __attribute__((unused)), char** str)
   __attribute__((nonnull(2)));



              void Perl_save_sptr(PerlInterpreter* my_perl __attribute__((unused)), SV** sptr)
   __attribute__((nonnull(2)));



              SV* Perl_save_svref(PerlInterpreter* my_perl __attribute__((unused)), SV** sptr)
   __attribute__((nonnull(2)));



              void Perl_save_vptr(PerlInterpreter* my_perl __attribute__((unused)), void *ptr)
   __attribute__((nonnull(2)));



              char* Perl_savepv(PerlInterpreter* my_perl __attribute__((unused)), const char* pv)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              char* Perl_savepvn(PerlInterpreter* my_perl __attribute__((unused)), const char* pv, I32 len)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              char* Perl_savesharedpv(PerlInterpreter* my_perl __attribute__((unused)), const char* pv)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              char* Perl_savesharedpvn(PerlInterpreter* my_perl __attribute__((unused)), const char *const pv, const STRLEN len)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              char* Perl_savesharedsvpv(PerlInterpreter* my_perl __attribute__((unused)), SV *sv)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_savestack_grow(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_savestack_grow_cnt(PerlInterpreter* my_perl __attribute__((unused)), I32 need);
              char* Perl_savesvpv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              OP* Perl_sawparens(PerlInterpreter* my_perl __attribute__((unused)), OP* o);
              OP* Perl_scalar(PerlInterpreter* my_perl __attribute__((unused)), OP* o);
              OP* Perl_scalarvoid(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((nonnull(2)));



              NV Perl_scan_bin(PerlInterpreter* my_perl __attribute__((unused)), const char* start, STRLEN len, STRLEN* retlen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              NV Perl_scan_hex(PerlInterpreter* my_perl __attribute__((unused)), const char* start, STRLEN len, STRLEN* retlen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              char* Perl_scan_num(PerlInterpreter* my_perl __attribute__((unused)), const char* s, YYSTYPE *lvalp)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              NV Perl_scan_oct(PerlInterpreter* my_perl __attribute__((unused)), const char* start, STRLEN len, STRLEN* retlen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              const char* Perl_scan_version(PerlInterpreter* my_perl __attribute__((unused)), const char *s, SV *rv, _Bool qv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              char* Perl_scan_vstring(PerlInterpreter* my_perl __attribute__((unused)), const char *s, const char *const e, SV *sv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              char* Perl_screaminstr(PerlInterpreter* my_perl __attribute__((unused)), SV *bigstr, SV *littlestr, I32 start_shift, I32 end_shift, I32 *old_posp, I32 last)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(6)));



              U32 Perl_seed(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_set_context(void *t)
   __attribute__((nonnull(1)));



              void Perl_set_numeric_local(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_set_numeric_radix(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_set_numeric_standard(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_setdefout(PerlInterpreter* my_perl __attribute__((unused)), GV* gv)
   __attribute__((nonnull(2)));



              HEK* Perl_share_hek(PerlInterpreter* my_perl __attribute__((unused)), const char* str, I32 len, U32 hash)
   __attribute__((nonnull(2)));



              void Perl_sortsv(PerlInterpreter* my_perl __attribute__((unused)), SV** array, size_t num_elts, SVCOMPARE_t cmp)
   __attribute__((nonnull(4)));



              void Perl_sortsv_flags(PerlInterpreter* my_perl __attribute__((unused)), SV** array, size_t num_elts, SVCOMPARE_t cmp, U32 flags)
   __attribute__((nonnull(4)));



              SV** Perl_stack_grow(PerlInterpreter* my_perl __attribute__((unused)), SV** sp, SV** p, int n)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              PerlIO* Perl_start_glob(PerlInterpreter* my_perl __attribute__((unused)), SV *tmpglob, IO *io)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              I32 Perl_start_subparse(PerlInterpreter* my_perl __attribute__((unused)), I32 is_format, U32 flags);
              NV Perl_str_to_version(PerlInterpreter* my_perl __attribute__((unused)), SV *sv)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_sub_crush_depth(PerlInterpreter* my_perl __attribute__((unused)), CV* cv)
   __attribute__((nonnull(2)));






              _Bool Perl_sv_2bool_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const I32 flags)
   __attribute__((nonnull(2)));



              CV* Perl_sv_2cv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, HV **const st, GV **const gvp, const I32 lref)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              IO* Perl_sv_2io(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv)
   __attribute__((nonnull(2)));




              IV Perl_sv_2iv_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const I32 flags);
              SV* Perl_sv_2mortal(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv);
              SV* Perl_sv_2num(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv)
   __attribute__((nonnull(2)));



              NV Perl_sv_2nv_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const I32 flags);

              char* Perl_sv_2pv_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, STRLEN *const lp, const I32 flags);






              char* Perl_sv_2pvbyte(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, STRLEN *const lp)
   __attribute__((nonnull(2)));
# 3852 "./proto.h"
              char* Perl_sv_2pvutf8(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, STRLEN *const lp)
   __attribute__((nonnull(2)));
# 3864 "./proto.h"
              UV Perl_sv_2uv_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const I32 flags);
              int Perl_sv_backoff(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv)
   __attribute__((nonnull(2)));



              SV* Perl_sv_bless(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, HV *const stash)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              _Bool Perl_sv_cat_decode(PerlInterpreter* my_perl __attribute__((unused)), SV* dsv, SV *encoding, SV *ssv, int *offset, char* tstr, int tlen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)))
   __attribute__((nonnull(6)));



              void Perl_sv_catpv(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char* ptr)
   __attribute__((nonnull(2)));



              void Perl_sv_catpv_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *dstr, const char *sstr, const I32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sv_catpv_mg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const ptr)
   __attribute__((nonnull(2)));



              void Perl_sv_catpvf(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const pat, ...)
   __attribute__((format(__printf__,3,4)))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sv_catpvf_mg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const pat, ...)
   __attribute__((format(__printf__,3,4)))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));
# 3921 "./proto.h"
              void Perl_sv_catpvn_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const dstr, const char *sstr, const STRLEN len, const I32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));
# 3938 "./proto.h"
              void Perl_sv_catsv_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const dsv, SV *const ssv, const I32 flags)
   __attribute__((nonnull(2)));
# 3948 "./proto.h"
              void Perl_sv_chop(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const ptr)
   __attribute__((nonnull(2)));



              I32 Perl_sv_clean_all(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_sv_clean_objs(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_sv_clear(PerlInterpreter* my_perl __attribute__((unused)), SV *const orig_sv)
   __attribute__((nonnull(2)));



              I32 Perl_sv_cmp(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv1, SV *const sv2);
              I32 Perl_sv_cmp_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv1, SV *const sv2, const U32 flags);
              I32 Perl_sv_cmp_locale(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv1, SV *const sv2);
              I32 Perl_sv_cmp_locale_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv1, SV *const sv2, const U32 flags);






              void Perl_sv_copypv_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const dsv, SV *const ssv, const I32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));







              void Perl_sv_dec(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv);
              void Perl_sv_dec_nomg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv);
              void Perl_sv_del_backref(PerlInterpreter* my_perl __attribute__((unused)), SV *const tsv, SV *const sv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              _Bool Perl_sv_derived_from(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const char *const name)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              _Bool Perl_sv_derived_from_pv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const char *const name, U32 flags)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              _Bool Perl_sv_derived_from_pvn(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const char *const name, const STRLEN len, U32 flags)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              _Bool Perl_sv_derived_from_sv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, SV *namesv, U32 flags)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              _Bool Perl_sv_destroyable(PerlInterpreter* my_perl __attribute__((unused)), SV *sv);
              _Bool Perl_sv_does(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const char *const name)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              _Bool Perl_sv_does_pv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const char *const name, U32 flags)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              _Bool Perl_sv_does_pvn(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const char *const name, const STRLEN len, U32 flags)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              _Bool Perl_sv_does_sv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, SV* namesv, U32 flags)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sv_dump(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));




              I32 Perl_sv_eq_flags(PerlInterpreter* my_perl __attribute__((unused)), SV* sv1, SV* sv2, const U32 flags);





              void Perl_sv_force_normal_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const U32 flags)
   __attribute__((nonnull(2)));



              void Perl_sv_free(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv);
              void Perl_sv_free2(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const U32 refcnt)
   __attribute__((nonnull(2)));



              void Perl_sv_free_arenas(PerlInterpreter* my_perl __attribute__((unused)));
              char* Perl_sv_gets(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, PerlIO *const fp, I32 append)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              char* Perl_sv_grow(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, STRLEN newlen)
   __attribute__((nonnull(2)));



              void Perl_sv_inc(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv);
              void Perl_sv_inc_nomg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv);






              void Perl_sv_insert_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const bigstr, const STRLEN offset, const STRLEN len, const char *const little, const STRLEN littlelen, const U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(5)));



              int Perl_sv_isa(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, const char *const name)
   __attribute__((nonnull(3)));



              int Perl_sv_isobject(PerlInterpreter* my_perl __attribute__((unused)), SV* sv);
              IV Perl_sv_iv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              STRLEN Perl_sv_len(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv);
              STRLEN Perl_sv_len_utf8(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv);
              STRLEN Perl_sv_len_utf8_nomg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv)
   __attribute__((nonnull(2)));



              void Perl_sv_magic(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, SV *const obj, const int how, const char *const name, const I32 namlen)
   __attribute__((nonnull(2)));



              MAGIC * Perl_sv_magicext(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, SV *const obj, const int how, const MGVTBL *const vtbl, const char *const name, const I32 namlen)
   __attribute__((nonnull(2)));







              SV* Perl_sv_mortalcopy_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const oldsv, U32 flags)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result));

              SV* Perl_sv_newmortal(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result));

              SV* Perl_sv_newref(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv);

              void Perl_sv_nosharing(PerlInterpreter* my_perl __attribute__((unused)), SV *sv);
              NV Perl_sv_nv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              char* Perl_sv_peek(PerlInterpreter* my_perl __attribute__((unused)), SV* sv);
              void Perl_sv_pos_b2u(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, I32 *const offsetp)
   __attribute__((nonnull(3)));



              void Perl_sv_pos_u2b(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, I32 *const offsetp, I32 *const lenp)
   __attribute__((nonnull(3)));



              STRLEN Perl_sv_pos_u2b_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, STRLEN uoffset, STRLEN *const lenp, U32 flags)
   __attribute__((nonnull(2)));
# 4169 "./proto.h"
              char* Perl_sv_pvbyten(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, STRLEN *lp)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              char* Perl_sv_pvbyten_force(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, STRLEN *const lp)
   __attribute__((nonnull(2)));



              char* Perl_sv_pvn(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, STRLEN *lp)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));
# 4191 "./proto.h"
              char* Perl_sv_pvn_force_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, STRLEN *const lp, const I32 flags)
   __attribute__((nonnull(2)));



              char* Perl_sv_pvn_nomg(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, STRLEN* lp)
   __attribute__((nonnull(2)));
# 4207 "./proto.h"
              char* Perl_sv_pvutf8n(PerlInterpreter* my_perl __attribute__((unused)), SV *sv, STRLEN *lp)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              char* Perl_sv_pvutf8n_force(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, STRLEN *const lp)
   __attribute__((nonnull(2)));



              char* Perl_sv_recode_to_utf8(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, SV *encoding)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_sv_ref(PerlInterpreter* my_perl __attribute__((unused)), SV *dst, const SV *const sv, const int ob)
   __attribute__((nonnull(3)));



              const char* Perl_sv_reftype(PerlInterpreter* my_perl __attribute__((unused)), const SV *const sv, const int ob)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_sv_replace(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, SV *const nsv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sv_report_used(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_sv_reset(PerlInterpreter* my_perl __attribute__((unused)), const char* s, HV *const stash)
   __attribute__((nonnull(2)));



              void Perl_sv_resetpvn(PerlInterpreter* my_perl __attribute__((unused)), const char* s, STRLEN len, HV *const stash);
              SV* Perl_sv_rvweaken(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv)
   __attribute__((nonnull(2)));



              void Perl_sv_sethek(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const HEK *const hek)
   __attribute__((nonnull(2)));



              void Perl_sv_setiv(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const IV num)
   __attribute__((nonnull(2)));



              void Perl_sv_setiv_mg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const IV i)
   __attribute__((nonnull(2)));



              void Perl_sv_setnv(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const NV num)
   __attribute__((nonnull(2)));



              void Perl_sv_setnv_mg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const NV num)
   __attribute__((nonnull(2)));



              void Perl_sv_setpv(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const ptr)
   __attribute__((nonnull(2)));



              void Perl_sv_setpv_mg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const ptr)
   __attribute__((nonnull(2)));



              void Perl_sv_setpvf(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const pat, ...)
   __attribute__((format(__printf__,3,4)))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sv_setpvf_mg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const pat, ...)
   __attribute__((format(__printf__,3,4)))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sv_setpviv(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const IV num)
   __attribute__((nonnull(2)));



              void Perl_sv_setpviv_mg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const IV iv)
   __attribute__((nonnull(2)));



              void Perl_sv_setpvn(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const ptr, const STRLEN len)
   __attribute__((nonnull(2)));



              void Perl_sv_setpvn_mg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const ptr, const STRLEN len)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_sv_setref_iv(PerlInterpreter* my_perl __attribute__((unused)), SV *const rv, const char *const classname, const IV iv)
   __attribute__((nonnull(2)));



              SV* Perl_sv_setref_nv(PerlInterpreter* my_perl __attribute__((unused)), SV *const rv, const char *const classname, const NV nv)
   __attribute__((nonnull(2)));



              SV* Perl_sv_setref_pv(PerlInterpreter* my_perl __attribute__((unused)), SV *const rv, const char *const classname, void *const pv)
   __attribute__((nonnull(2)));



              SV* Perl_sv_setref_pvn(PerlInterpreter* my_perl __attribute__((unused)), SV *const rv, const char *const classname, const char *const pv, const STRLEN n)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));



              SV* Perl_sv_setref_uv(PerlInterpreter* my_perl __attribute__((unused)), SV *const rv, const char *const classname, const UV uv)
   __attribute__((nonnull(2)));
# 4354 "./proto.h"
              void Perl_sv_setsv_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *dstr, SV *sstr, const I32 flags)
   __attribute__((nonnull(2)));



              void Perl_sv_setsv_mg(PerlInterpreter* my_perl __attribute__((unused)), SV *const dstr, SV *const sstr)
   __attribute__((nonnull(2)));



              void Perl_sv_setuv(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const UV num)
   __attribute__((nonnull(2)));



              void Perl_sv_setuv_mg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const UV u)
   __attribute__((nonnull(2)));
# 4379 "./proto.h"
              _Bool Perl_sv_tainted(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              I32 Perl_sv_true(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv);
              char* Perl_sv_uni_display(PerlInterpreter* my_perl __attribute__((unused)), SV *dsv, SV *ssv, STRLEN pvlim, UV flags)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              int Perl_sv_unmagic(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const int type)
   __attribute__((nonnull(2)));



              int Perl_sv_unmagicext(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const int type, MGVTBL *vtbl)
   __attribute__((nonnull(2)));
# 4408 "./proto.h"
              void Perl_sv_unref_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const ref, const U32 flags)
   __attribute__((nonnull(2)));



              void Perl_sv_untaint(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv)
   __attribute__((nonnull(2)));



              void Perl_sv_upgrade(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, svtype new_type)
   __attribute__((nonnull(2)));
# 4428 "./proto.h"
              void Perl_sv_usepvn_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, char* ptr, const STRLEN len, const U32 flags)
   __attribute__((nonnull(2)));
# 4438 "./proto.h"
              _Bool Perl_sv_utf8_decode(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv)
   __attribute__((nonnull(2)));



              _Bool Perl_sv_utf8_downgrade(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const _Bool fail_ok)
   __attribute__((nonnull(2)));



              void Perl_sv_utf8_encode(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv)
   __attribute__((nonnull(2)));
# 4461 "./proto.h"
              STRLEN Perl_sv_utf8_upgrade_flags_grow(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const I32 flags, STRLEN extra)
   __attribute__((nonnull(2)));






              UV Perl_sv_uv(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              void Perl_sv_vcatpvf(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const pat, va_list *const args)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sv_vcatpvf_mg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const pat, va_list *const args)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sv_vcatpvfn(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const pat, const STRLEN patlen, va_list *const args, SV **const svargs, const I32 svmax, _Bool *const maybe_tainted)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sv_vcatpvfn_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const pat, const STRLEN patlen, va_list *const args, SV **const svargs, const I32 svmax, _Bool *const maybe_tainted, const U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sv_vsetpvf(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const pat, va_list *const args)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sv_vsetpvf_mg(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const pat, va_list *const args)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sv_vsetpvfn(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, const char *const pat, const STRLEN patlen, va_list *const args, SV **const svargs, const I32 svmax, _Bool *const maybe_tainted)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              UV Perl_swash_fetch(PerlInterpreter* my_perl __attribute__((unused)), SV *swash, const U8 *ptr, _Bool do_utf8)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_swash_init(PerlInterpreter* my_perl __attribute__((unused)), const char* pkg, const char* name, SV* listsv, I32 minbits, I32 none)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_sys_init(int* argc, char*** argv)
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              void Perl_sys_init3(int* argc, char*** argv, char*** env)
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_sys_term(void);
              void Perl_taint_env(PerlInterpreter* my_perl __attribute__((unused)));
              void Perl_taint_proper(PerlInterpreter* my_perl __attribute__((unused)), const char* f, const char *const s)
   __attribute__((nonnull(3)));



              OP * Perl_tied_method(PerlInterpreter* my_perl __attribute__((unused)), const char *const methname, SV **sp, SV *const sv, const MAGIC *const mg, const U32 flags, U32 argc, ...)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)));



              void Perl_tmps_grow(PerlInterpreter* my_perl __attribute__((unused)), I32 n);




              UV Perl_to_uni_lower(PerlInterpreter* my_perl __attribute__((unused)), UV c, U8 *p, STRLEN *lenp)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              U32 Perl_to_uni_lower_lc(PerlInterpreter* my_perl __attribute__((unused)), U32 c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              UV Perl_to_uni_title(PerlInterpreter* my_perl __attribute__((unused)), UV c, U8 *p, STRLEN *lenp)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              U32 Perl_to_uni_title_lc(PerlInterpreter* my_perl __attribute__((unused)), U32 c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              UV Perl_to_uni_upper(PerlInterpreter* my_perl __attribute__((unused)), UV c, U8 *p, STRLEN *lenp)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              U32 Perl_to_uni_upper_lc(PerlInterpreter* my_perl __attribute__((unused)), U32 c)
   __attribute__((deprecated))
   __attribute__((warn_unused_result))
   __attribute__((pure));

              UV Perl_to_utf8_case(PerlInterpreter* my_perl __attribute__((unused)), const U8 *p, U8* ustrp, STRLEN *lenp, SV **swashp, const char *normal, const char *special)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(5)))
   __attribute__((nonnull(6)));
# 4628 "./proto.h"
              _Bool Perl_try_amagic_bin(PerlInterpreter* my_perl __attribute__((unused)), int method, int flags);
              _Bool Perl_try_amagic_un(PerlInterpreter* my_perl __attribute__((unused)), int method, int flags);
              I32 Perl_unpack_str(PerlInterpreter* my_perl __attribute__((unused)), const char *pat, const char *patend, const char *s, const char *strbeg, const char *strend, char **new_s, I32 ocnt, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(6)));



              I32 Perl_unpackstring(PerlInterpreter* my_perl __attribute__((unused)), const char *pat, const char *patend, const char *s, const char *strend, U32 flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)))
   __attribute__((nonnull(5)));



              void Perl_unshare_hek(PerlInterpreter* my_perl __attribute__((unused)), HEK* hek);
              void Perl_unsharepvn(PerlInterpreter* my_perl __attribute__((unused)), const char* sv, I32 len, U32 hash);
              SV* Perl_upg_version(PerlInterpreter* my_perl __attribute__((unused)), SV *ver, _Bool qv)
   __attribute__((nonnull(2)));



              U8* Perl_utf16_to_utf8(PerlInterpreter* my_perl __attribute__((unused)), U8* p, U8 *d, I32 bytelen, I32 *newlen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(5)));



              U8* Perl_utf16_to_utf8_reversed(PerlInterpreter* my_perl __attribute__((unused)), U8* p, U8 *d, I32 bytelen, I32 *newlen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(5)));



              IV Perl_utf8_distance(PerlInterpreter* my_perl __attribute__((unused)), const U8 *a, const U8 *b)
   __attribute__((warn_unused_result))
   __attribute__((pure))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              U8* Perl_utf8_hop(PerlInterpreter* my_perl __attribute__((unused)), const U8 *s, I32 off)
   __attribute__((warn_unused_result))
   __attribute__((pure))
   __attribute__((nonnull(2)));



              STRLEN Perl_utf8_length(PerlInterpreter* my_perl __attribute__((unused)), const U8* s, const U8 *e)
   __attribute__((warn_unused_result))
   __attribute__((pure))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              U8* Perl_utf8_to_bytes(PerlInterpreter* my_perl __attribute__((unused)), U8 *s, STRLEN *len)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              UV Perl_utf8_to_uvchr(PerlInterpreter* my_perl __attribute__((unused)), const U8 *s, STRLEN *retlen)
   __attribute__((deprecated))
   __attribute__((nonnull(2)));



              UV Perl_utf8_to_uvchr_buf(PerlInterpreter* my_perl __attribute__((unused)), const U8 *s, const U8 *send, STRLEN *retlen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              UV Perl_utf8_to_uvuni(PerlInterpreter* my_perl __attribute__((unused)), const U8 *s, STRLEN *retlen)
   __attribute__((deprecated))
   __attribute__((nonnull(2)));



              UV Perl_utf8_to_uvuni_buf(PerlInterpreter* my_perl __attribute__((unused)), const U8 *s, const U8 *send, STRLEN *retlen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              UV Perl_utf8n_to_uvuni(PerlInterpreter* my_perl __attribute__((unused)), const U8 *s, STRLEN curlen, STRLEN *retlen, U32 flags)
   __attribute__((nonnull(2)));



              U8* Perl_uvchr_to_utf8_flags(PerlInterpreter* my_perl __attribute__((unused)), U8 *d, UV uv, UV flags)
   __attribute__((nonnull(2)));
# 4735 "./proto.h"
              U8* Perl_uvuni_to_utf8_flags(PerlInterpreter* my_perl __attribute__((unused)), U8 *d, UV uv, UV flags)
   __attribute__((nonnull(2)));



              UV Perl_valid_utf8_to_uvuni(PerlInterpreter* my_perl __attribute__((unused)), const U8 *s, STRLEN *retlen)
   __attribute__((nonnull(2)));



              int Perl_vcmp(PerlInterpreter* my_perl __attribute__((unused)), SV *lhv, SV *rhv)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



                     void Perl_vcroak(PerlInterpreter* my_perl __attribute__((unused)), const char* pat, va_list* args)
   __attribute__((noreturn));

              void Perl_vdeb(PerlInterpreter* my_perl __attribute__((unused)), const char* pat, va_list* args)
   __attribute__((nonnull(2)));



              char* Perl_vform(PerlInterpreter* my_perl __attribute__((unused)), const char* pat, va_list* args)
   __attribute__((nonnull(2)));



              void Perl_vivify_defelem(PerlInterpreter* my_perl __attribute__((unused)), SV* sv)
   __attribute__((nonnull(2)));



              SV* Perl_vivify_ref(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, U32 to_what)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              void Perl_vload_module(PerlInterpreter* my_perl __attribute__((unused)), U32 flags, SV* name, SV* ver, va_list* args)
   __attribute__((nonnull(3)));



              SV* Perl_vmess(PerlInterpreter* my_perl __attribute__((unused)), const char* pat, va_list* args)
   __attribute__((nonnull(2)));



              SV* Perl_vnewSVpvf(PerlInterpreter* my_perl __attribute__((unused)), const char *const pat, va_list *const args)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)));



              SV* Perl_vnormal(PerlInterpreter* my_perl __attribute__((unused)), SV *vs)
   __attribute__((nonnull(2)));



              SV* Perl_vnumify(PerlInterpreter* my_perl __attribute__((unused)), SV *vs)
   __attribute__((nonnull(2)));



              SV* Perl_vstringify(PerlInterpreter* my_perl __attribute__((unused)), SV *vs)
   __attribute__((nonnull(2)));



              SV* Perl_vverify(PerlInterpreter* my_perl __attribute__((unused)), SV *vs)
   __attribute__((nonnull(2)));



              void Perl_vwarn(PerlInterpreter* my_perl __attribute__((unused)), const char* pat, va_list* args)
   __attribute__((nonnull(2)));



              void Perl_vwarner(PerlInterpreter* my_perl __attribute__((unused)), U32 err, const char* pat, va_list* args)
   __attribute__((nonnull(3)));



              I32 Perl_wait4pid(PerlInterpreter* my_perl __attribute__((unused)), pid_t pid, int* statusp, int flags)
   __attribute__((nonnull(3)));



              void Perl_warn(PerlInterpreter* my_perl __attribute__((unused)), const char* pat, ...)
   __attribute__((format(__printf__,2,3)))
   __attribute__((nonnull(2)));



              void Perl_warn_sv(PerlInterpreter* my_perl __attribute__((unused)), SV *baseex)
   __attribute__((nonnull(2)));



              void Perl_warner(PerlInterpreter* my_perl __attribute__((unused)), U32 err, const char* pat, ...)
   __attribute__((format(__printf__,3,4)))
   __attribute__((nonnull(3)));



              I32 Perl_was_lvalue_sub(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result));

              void Perl_watch(PerlInterpreter* my_perl __attribute__((unused)), char** addr)
   __attribute__((nonnull(2)));






              I32 Perl_whichsig_pv(PerlInterpreter* my_perl __attribute__((unused)), const char* sig)
   __attribute__((nonnull(2)));



              I32 Perl_whichsig_pvn(PerlInterpreter* my_perl __attribute__((unused)), const char* sig, STRLEN len)
   __attribute__((nonnull(2)));



              I32 Perl_whichsig_sv(PerlInterpreter* my_perl __attribute__((unused)), SV* sigsv)
   __attribute__((nonnull(2)));



              void Perl_wrap_op_checker(PerlInterpreter* my_perl __attribute__((unused)), Optype opcode, Perl_check_t new_checker, Perl_check_t *old_checker_p)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void Perl_write_to_stderr(PerlInterpreter* my_perl __attribute__((unused)), SV* msv)
   __attribute__((nonnull(2)));



              void Perl_xs_apiversion_bootcheck(PerlInterpreter* my_perl __attribute__((unused)), SV *module, const char *api_p, STRLEN api_len)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_xs_version_bootcheck(PerlInterpreter* my_perl __attribute__((unused)), U32 items, U32 ax, const char *xs_p, STRLEN xs_len)
   __attribute__((nonnull(4)));



              int Perl_yyerror(PerlInterpreter* my_perl __attribute__((unused)), const char *const s)
   __attribute__((nonnull(2)));



              int Perl_yyerror_pv(PerlInterpreter* my_perl __attribute__((unused)), const char *const s, U32 flags)
   __attribute__((nonnull(2)));



              int Perl_yyerror_pvn(PerlInterpreter* my_perl __attribute__((unused)), const char *const s, STRLEN len, U32 flags)
   __attribute__((nonnull(2)));



              int Perl_yylex(PerlInterpreter* my_perl __attribute__((unused)));
              int Perl_yyparse(PerlInterpreter* my_perl __attribute__((unused)), int gramtype);
              void Perl_yyunlex(PerlInterpreter* my_perl __attribute__((unused)));
# 4943 "./proto.h"
              void Perl_sv_nounlocking(PerlInterpreter* my_perl __attribute__((unused)), SV *sv);
# 4954 "./proto.h"
              void* Perl_my_cxt_init(PerlInterpreter* my_perl __attribute__((unused)), int *index, size_t size)
   __attribute__((nonnull(2)));






              void Perl_newFORM(PerlInterpreter* my_perl __attribute__((unused)), I32 floor, OP* o, OP* block);
              void Perl_package(PerlInterpreter* my_perl __attribute__((unused)), OP* o)
   __attribute__((nonnull(2)));



              void Perl_utilize(PerlInterpreter* my_perl __attribute__((unused)), int aver, I32 floor, OP* version, OP* idop, OP* arg)
   __attribute__((nonnull(5)));





                     int Perl_magic_regdatum_set(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((noreturn))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));
# 4991 "./proto.h"
              char* Perl_getenv_len(PerlInterpreter* my_perl __attribute__((unused)), const char *env_elem, unsigned long *len)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));
# 5071 "./proto.h"
              I32 Perl_my_pclose(PerlInterpreter* my_perl __attribute__((unused)), PerlIO* ptr);
              PerlIO* Perl_my_popen(PerlInterpreter* my_perl __attribute__((unused)), const char* cmd, const char* mode)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));
# 5122 "./proto.h"
              _Bool Perl_do_exec3(PerlInterpreter* my_perl __attribute__((unused)), const char *incmd, int fd, int do_report)
   __attribute__((nonnull(2)));
# 5275 "./proto.h"
              I32 Perl_do_ipcctl(PerlInterpreter* my_perl __attribute__((unused)), I32 optype, SV** mark, SV** sp)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              I32 Perl_do_ipcget(PerlInterpreter* my_perl __attribute__((unused)), I32 optype, SV** mark, SV** sp)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              I32 Perl_do_msgrcv(PerlInterpreter* my_perl __attribute__((unused)), SV** mark, SV** sp)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              I32 Perl_do_msgsnd(PerlInterpreter* my_perl __attribute__((unused)), SV** mark, SV** sp)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              I32 Perl_do_semop(PerlInterpreter* my_perl __attribute__((unused)), SV** mark, SV** sp)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              I32 Perl_do_shmio(PerlInterpreter* my_perl __attribute__((unused)), I32 optype, SV** mark, SV** sp)
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));





              void Perl_csighandler(int sig, siginfo_t *info, void *uap);
              void Perl_sighandler(int sig, siginfo_t *info, void *uap);
# 5458 "./proto.h"
                     void Perl_croak_nocontext(const char* pat, ...)
   __attribute__((noreturn))
   __attribute__((format(__printf__,1,2)));

              void Perl_deb_nocontext(const char* pat, ...)
   __attribute__((format(__printf__,1,2)))
   __attribute__((nonnull(1)));



              OP* Perl_die_nocontext(const char* pat, ...)
   __attribute__((format(__printf__,1,2)));

              char* Perl_form_nocontext(const char* pat, ...)
   __attribute__((format(__printf__,1,2)))
   __attribute__((nonnull(1)));



              int Perl_fprintf_nocontext(PerlIO *stream, const char *format, ...)
   __attribute__((format(__printf__,2,3)))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              void Perl_load_module_nocontext(U32 flags, SV* name, SV* ver, ...)
   __attribute__((nonnull(2)));



              SV* Perl_mess_nocontext(const char* pat, ...)
   __attribute__((format(__printf__,1,2)))
   __attribute__((nonnull(1)));



              SV* Perl_newSVpvf_nocontext(const char *const pat, ...)
   __attribute__((format(__printf__,1,2)))
   __attribute__((nonnull(1)));



              int Perl_printf_nocontext(const char *format, ...)
   __attribute__((format(__printf__,1,2)))
   __attribute__((nonnull(1)));



              void Perl_sv_catpvf_mg_nocontext(SV *const sv, const char *const pat, ...)
   __attribute__((format(__printf__,2,3)))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              void Perl_sv_catpvf_nocontext(SV *const sv, const char *const pat, ...)
   __attribute__((format(__printf__,2,3)))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              void Perl_sv_setpvf_mg_nocontext(SV *const sv, const char *const pat, ...)
   __attribute__((format(__printf__,2,3)))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              void Perl_sv_setpvf_nocontext(SV *const sv, const char *const pat, ...)
   __attribute__((format(__printf__,2,3)))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              void Perl_warn_nocontext(const char* pat, ...)
   __attribute__((format(__printf__,1,2)))
   __attribute__((nonnull(1)));



              void Perl_warner_nocontext(U32 err, const char* pat, ...)
   __attribute__((format(__printf__,2,3)))
   __attribute__((nonnull(2)));
# 6350 "./proto.h"
static I32 S_amagic_cmp(PerlInterpreter* my_perl __attribute__((unused)), SV *const str1, SV *const str2)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



static I32 S_amagic_cmp_locale(PerlInterpreter* my_perl __attribute__((unused)), SV *const str1, SV *const str2)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



static I32 S_amagic_i_ncmp(PerlInterpreter* my_perl __attribute__((unused)), SV *const a, SV *const b)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



static I32 S_amagic_ncmp(PerlInterpreter* my_perl __attribute__((unused)), SV *const a, SV *const b)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



static void S_qsortsvu(PerlInterpreter* my_perl __attribute__((unused)), SV** array, size_t num_elts, SVCOMPARE_t compare)
   __attribute__((nonnull(4)));



static I32 S_sortcv(PerlInterpreter* my_perl __attribute__((unused)), SV *const a, SV *const b)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



static I32 S_sortcv_stacked(PerlInterpreter* my_perl __attribute__((unused)), SV *const a, SV *const b)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



static I32 S_sortcv_xsub(PerlInterpreter* my_perl __attribute__((unused)), SV *const a, SV *const b)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



static I32 S_sv_i_ncmp(PerlInterpreter* my_perl __attribute__((unused)), SV *const a, SV *const b)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



static I32 S_sv_ncmp(PerlInterpreter* my_perl __attribute__((unused)), SV *const a, SV *const b)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));
# 7698 "./proto.h"
              PADOFFSET Perl_alloccopstash(PerlInterpreter* my_perl __attribute__((unused)), HV *hv)
   __attribute__((nonnull(2)));



              void* Perl_any_dup(PerlInterpreter* my_perl __attribute__((unused)), void* v, const PerlInterpreter* proto_perl)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              void Perl_clone_params_del(CLONE_PARAMS *param)
   __attribute__((nonnull(1)));



              CLONE_PARAMS * Perl_clone_params_new(PerlInterpreter *const from, PerlInterpreter *const to)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(1)))
   __attribute__((nonnull(2)));



              PERL_CONTEXT* Perl_cx_dup(PerlInterpreter* my_perl __attribute__((unused)), PERL_CONTEXT* cx, I32 ix, I32 max, CLONE_PARAMS* param)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(5)));



              DIR* Perl_dirp_dup(PerlInterpreter* my_perl __attribute__((unused)), DIR *const dp, CLONE_PARAMS *const param)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              PerlIO* Perl_fp_dup(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *const fp, const char type, CLONE_PARAMS *const param)
   __attribute__((nonnull(4)));



              GP* Perl_gp_dup(PerlInterpreter* my_perl __attribute__((unused)), GP *const gp, CLONE_PARAMS *const param)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              HE* Perl_he_dup(PerlInterpreter* my_perl __attribute__((unused)), const HE* e, _Bool shared, CLONE_PARAMS* param)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(4)));



              HEK* Perl_hek_dup(PerlInterpreter* my_perl __attribute__((unused)), HEK* e, CLONE_PARAMS* param)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              MAGIC* Perl_mg_dup(PerlInterpreter* my_perl __attribute__((unused)), MAGIC *mg, CLONE_PARAMS *const param)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              struct mro_meta* Perl_mro_meta_dup(PerlInterpreter* my_perl __attribute__((unused)), struct mro_meta* smeta, CLONE_PARAMS* param)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              OP* Perl_newPADOP(PerlInterpreter* my_perl __attribute__((unused)), I32 type, I32 flags, SV* sv)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(4)));



              PADLIST * Perl_padlist_dup(PerlInterpreter* my_perl __attribute__((unused)), PADLIST *srcpad, CLONE_PARAMS *param)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              yy_parser* Perl_parser_dup(PerlInterpreter* my_perl __attribute__((unused)), const yy_parser *const proto, CLONE_PARAMS *const param)
   __attribute__((nonnull(3)));



              PerlInterpreter* perl_clone(PerlInterpreter *proto_perl, UV flags)
   __attribute__((nonnull(1)));



              void Perl_re_dup_guts(PerlInterpreter* my_perl __attribute__((unused)), const REGEXP *sstr, REGEXP *dstr, CLONE_PARAMS* param)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              void* Perl_regdupe_internal(PerlInterpreter* my_perl __attribute__((unused)), REGEXP * const r, CLONE_PARAMS* param)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              void Perl_rvpv_dup(PerlInterpreter* my_perl __attribute__((unused)), SV *const dstr, const SV *const sstr, CLONE_PARAMS *const param)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)))
   __attribute__((nonnull(4)));



              PERL_SI* Perl_si_dup(PerlInterpreter* my_perl __attribute__((unused)), PERL_SI* si, CLONE_PARAMS* param)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              ANY* Perl_ss_dup(PerlInterpreter* my_perl __attribute__((unused)), PerlInterpreter* proto_perl, CLONE_PARAMS* param)
   __attribute__((__malloc__))
   __attribute__((warn_unused_result))
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              SV* Perl_sv_dup(PerlInterpreter* my_perl __attribute__((unused)), const SV *const sstr, CLONE_PARAMS *const param)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));



              SV* Perl_sv_dup_inc(PerlInterpreter* my_perl __attribute__((unused)), const SV *const sstr, CLONE_PARAMS *const param)
   __attribute__((warn_unused_result))
   __attribute__((nonnull(3)));





              int Perl_magic_setcollxfrm(PerlInterpreter* my_perl __attribute__((unused)), SV* sv, MAGIC* mg)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));



              char* Perl_mem_collxfrm(PerlInterpreter* my_perl __attribute__((unused)), const char* s, STRLEN len, STRLEN* xlen)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(4)));







              char* Perl_sv_collxfrm_flags(PerlInterpreter* my_perl __attribute__((unused)), SV *const sv, STRLEN *const nxp, I32 const flags)
   __attribute__((nonnull(2)))
   __attribute__((nonnull(3)));





              void Perl_PerlIO_clearerr(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
              int Perl_PerlIO_close(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
              int Perl_PerlIO_eof(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
              int Perl_PerlIO_error(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
              int Perl_PerlIO_fileno(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
              int Perl_PerlIO_fill(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
              int Perl_PerlIO_flush(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
              char * Perl_PerlIO_get_base(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
              int Perl_PerlIO_get_bufsiz(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f)
   __attribute__((warn_unused_result));

              int Perl_PerlIO_get_cnt(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f)
   __attribute__((warn_unused_result));

              char * Perl_PerlIO_get_ptr(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
              ssize_t Perl_PerlIO_read(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f, void *vbuf, size_t count)
   __attribute__((nonnull(3)));



              int Perl_PerlIO_seek(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f, off_t offset, int whence);
              void Perl_PerlIO_set_cnt(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f, int cnt);
              void Perl_PerlIO_set_ptrcnt(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f, char *ptr, int cnt);
              void Perl_PerlIO_setlinebuf(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
              PerlIO * Perl_PerlIO_stderr(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result));

              PerlIO * Perl_PerlIO_stdin(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result));

              PerlIO * Perl_PerlIO_stdout(PerlInterpreter* my_perl __attribute__((unused)))
   __attribute__((warn_unused_result));

              off_t Perl_PerlIO_tell(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f);
              ssize_t Perl_PerlIO_unread(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f, const void *vbuf, size_t count)
   __attribute__((nonnull(3)));



              ssize_t Perl_PerlIO_write(PerlInterpreter* my_perl __attribute__((unused)), PerlIO *f, const void *vbuf, size_t count)
   __attribute__((nonnull(3)));
# 5118 "./perl.h" 2


# 1 "./opcode.h" 1
# 148 "./opcode.h"
extern const char* const PL_op_name[];
# 533 "./opcode.h"
extern const char* const PL_op_desc[];
# 929 "./opcode.h"
extern Perl_ppaddr_t PL_ppaddr[]
# 1315 "./opcode.h"
;
# 1324 "./opcode.h"
extern Perl_check_t PL_check[]
# 1710 "./opcode.h"
;





extern const U32 PL_opargs[];
# 5121 "./perl.h" 2




# 1 "./embedvar.h" 1
# 5126 "./perl.h" 2
# 5158 "./perl.h"
# 1 "./embed.h" 1
# 5159 "./perl.h" 2








# 1 "./perlvars.h" 1
# 33 "./perlvars.h"
extern perl_mutex PL_op_mutex;

extern PerlInterpreter * PL_curinterp;




extern perl_key PL_thr_key;



extern _Bool PL_do_undump ;


extern _Bool PL_use_safe_putenv ;
# 70 "./perlvars.h"
extern Sighandler_t PL_sigfpe_saved;
extern Sighandler_t PL_csighandlerp ;
# 83 "./perlvars.h"
extern perl_mutex PL_perlio_mutex;


extern int * PL_perlio_fd_refcnt ;
extern int PL_perlio_fd_refcnt_size ;
extern int PL_perlio_debug_fd ;



extern IV PL_mmap_page_size ;



extern perl_mutex PL_hints_mutex;
# 136 "./perlvars.h"
extern perl_mutex PL_check_mutex;
# 156 "./perlvars.h"
extern perl_mutex PL_my_ctx_mutex;

extern int PL_my_cxt_index ;




extern int PL_veto_cleanup ;
# 218 "./perlvars.h"
extern Perl_keyword_plugin_t PL_keyword_plugin ;

extern HV * PL_op_sequence;
extern UV PL_op_seq ;


extern perl_mutex PL_dollarzero_mutex;




extern SV PL_sv_placeholder;





extern _Bool PL_hash_seed_set ;
extern unsigned char PL_hash_seed[8];
# 5168 "./perl.h" 2
# 5182 "./perl.h"
extern const runops_proc_t PL_runops_std
                            ;
extern const runops_proc_t PL_runops_dbg
                         ;
# 5204 "./perl.h"
# 1 "./mg_vtable.h" 1
# 60 "./mg_vtable.h"
enum {
    want_vtbl_arylen,
    want_vtbl_arylen_p,
    want_vtbl_backref,
    want_vtbl_checkcall,
    want_vtbl_collxfrm,
    want_vtbl_dbline,
    want_vtbl_defelem,
    want_vtbl_env,
    want_vtbl_envelem,
    want_vtbl_hints,
    want_vtbl_hintselem,
    want_vtbl_isa,
    want_vtbl_isaelem,
    want_vtbl_mglob,
    want_vtbl_nkeys,
    want_vtbl_ovrld,
    want_vtbl_pack,
    want_vtbl_packelem,
    want_vtbl_pos,
    want_vtbl_regdata,
    want_vtbl_regdatum,
    want_vtbl_regexp,
    want_vtbl_sigelem,
    want_vtbl_substr,
    want_vtbl_sv,
    want_vtbl_taint,
    want_vtbl_utf8,
    want_vtbl_uvar,
    want_vtbl_vec,
    magic_vtable_max
};
# 126 "./mg_vtable.h"
extern const char * const PL_magic_vtable_names[magic_vtable_max];
# 187 "./mg_vtable.h"
extern MGVTBL PL_magic_vtables[magic_vtable_max];
# 5205 "./perl.h" 2
# 5215 "./perl.h"
extern const U8 PL_magic_data[256];
# 5235 "./perl.h"
extern const _Bool PL_valid_types_IVX[];
extern const _Bool PL_valid_types_NVX[];
extern const _Bool PL_valid_types_PVX[];
extern const _Bool PL_valid_types_RV[];
extern const _Bool PL_valid_types_IV_set[];
extern const _Bool PL_valid_types_NV_set[];
# 5257 "./perl.h"
# 1 "./inline.h" 1
# 17 "./inline.h"
static __inline__ I32
S_av_top_index(PerlInterpreter* my_perl __attribute__((unused)), AV *av)
{
                                 ;
                                  ;

    return (((((const SV *) (av))->sv_flags & 0x00800000)) ? Perl_mg_size(my_perl, ((SV *)({ void *_p = (av); _p; }))) : ((XPVAV*) (av)->sv_any)->xav_fill);
}



static __inline__ I32 *
S_CvDEPTHp(const CV * const sv)
{
                                                            ;
    return &((XPVCV*)(sv)->sv_any)->xcv_depth;
}



static __inline__ struct regexp *
S_ReANY(const REGEXP * const re)
{
                        ;
    return re->sv_u.svu_rx;
}



static __inline__ SV *
S_SvREFCNT_inc(SV *sv)
{
    if (__builtin_expect(sv != ((void *)0),1))
 (sv)->sv_refcnt++;
    return sv;
}
static __inline__ SV *
S_SvREFCNT_inc_NN(SV *sv)
{
    (sv)->sv_refcnt++;
    return sv;
}
static __inline__ void
S_SvREFCNT_inc_void(SV *sv)
{
    if (__builtin_expect(sv != ((void *)0),1))
 (sv)->sv_refcnt++;
}
static __inline__ void
S_SvREFCNT_dec(PerlInterpreter* my_perl __attribute__((unused)), SV *sv)
{
    if (__builtin_expect(sv != ((void *)0),1)) {
 U32 rc = (sv)->sv_refcnt;
 if (rc > 1)
     (sv)->sv_refcnt = rc - 1;
 else
     Perl_sv_free2(my_perl, sv, rc);
    }
}

static __inline__ void
S_SvREFCNT_dec_NN(PerlInterpreter* my_perl __attribute__((unused)), SV *sv)
{
    U32 rc = (sv)->sv_refcnt;
    if (rc > 1)
 (sv)->sv_refcnt = rc - 1;
    else
 Perl_sv_free2(my_perl, sv, rc);
}

static __inline__ void
SvAMAGIC_on(SV *sv)
{
                     ;
    if (((((sv)->sv_u.svu_rv))->sv_flags & 0x00100000)) ((((XPVMG*) (((sv)->sv_u.svu_rv))->sv_any)->xmg_stash)->sv_flags |= 0x10000000);
}
static __inline__ void
SvAMAGIC_off(SV *sv)
{
    if (((sv)->sv_flags & 0x00000800) && ((((sv)->sv_u.svu_rv))->sv_flags & 0x00100000))
 ((((XPVMG*) (((sv)->sv_u.svu_rv))->sv_any)->xmg_stash)->sv_flags &=~ 0x10000000);
}

static __inline__ U32
S_SvPADTMP_on(SV *sv)
{
                                      ;
    return (sv)->sv_flags |= 0x00020000;
}
static __inline__ U32
S_SvPADTMP_off(SV *sv)
{
                                      ;
    return (sv)->sv_flags &= ~0x00020000;
}
static __inline__ U32
S_SvPADSTALE_on(SV *sv)
{
                                   ;
    return (sv)->sv_flags |= 0x00020000;
}
static __inline__ U32
S_SvPADSTALE_off(SV *sv)
{
                                   ;
    return (sv)->sv_flags &= ~0x00020000;
}
# 142 "./inline.h"
static __inline__ _Bool
S_isIDFIRST_lazy(PerlInterpreter* my_perl __attribute__((unused)), const char* p)
{
                                   ;

    return ((((((my_perl->Icurcop))->cop_hints + 0) & 0x00000008) || !1 ) ? (((sizeof(*(p)) == 1) || !(((unsigned long)(*(p))) & ~0xFF)) && ((PL_charclass[(U8) (*(p))] & ((1U << (( 17))) | (1U << (15)))) == ((1U << (( 17))) | (1U << (15))))) : ((((UV)(*((const U8*)p))) < 0x80) ? ((((sizeof(*((const U8*)p)) == 1) || !(((unsigned long)(*((const U8*)p))) & ~0xFF)) && (PL_charclass[(U8) (*((const U8*)p))] & (1U << (17)))) ? (_Bool)1 : (_Bool)0) : ((((U8)(*((const U8*)p)) & 0xfe) == 0xc2)) ? ((((sizeof((((((*((const U8*)p)) & (((2) >= 7) ? 0x00 : (0x1F >> ((2)-2))))) << 6) | (((U8)(*(((const U8*)p)+1 ))) & ((U8)0x3f)))) == 1) || !(((unsigned long)((((((*((const U8*)p)) & (((2) >= 7) ? 0x00 : (0x1F >> ((2)-2))))) << 6) | (((U8)(*(((const U8*)p)+1 ))) & ((U8)0x3f))))) & ~0xFF)) && (PL_charclass[(U8) ((((((*((const U8*)p)) & (((2) >= 7) ? 0x00 : (0x1F >> ((2)-2))))) << 6) | (((U8)(*(((const U8*)p)+1 ))) & ((U8)0x3f))))] & (1U << (17)))) ? (_Bool)1 : (_Bool)0) : Perl__is_utf8_perl_idstart(my_perl, (const U8*)p)));
}

static __inline__ _Bool
S_isALNUM_lazy(PerlInterpreter* my_perl __attribute__((unused)), const char* p)
{
                                 ;

    return ((((((my_perl->Icurcop))->cop_hints + 0) & 0x00000008) || (!1 )) ? (((sizeof(*(p)) == 1) || !(((unsigned long)(*(p))) & ~0xFF)) && ((PL_charclass[(U8) (*(p))] & ((1U << (0)) | (1U << (15)))) == ((1U << (0)) | (1U << (15))))) : ((((UV)(*((const U8*)p))) < 0x80) ? ((((sizeof(*((const U8*)p)) == 1) || !(((unsigned long)(*((const U8*)p))) & ~0xFF)) && (PL_charclass[(U8) (*((const U8*)p))] & (1U << (0)))) ? (_Bool)1 : (_Bool)0) : ((((U8)(*((const U8*)p)) & 0xfe) == 0xc2)) ? ((((sizeof((((((*((const U8*)p)) & (((2) >= 7) ? 0x00 : (0x1F >> ((2)-2))))) << 6) | (((U8)(*(((const U8*)p)+1 ))) & ((U8)0x3f)))) == 1) || !(((unsigned long)((((((*((const U8*)p)) & (((2) >= 7) ? 0x00 : (0x1F >> ((2)-2))))) << 6) | (((U8)(*(((const U8*)p)+1 ))) & ((U8)0x3f))))) & ~0xFF)) && (PL_charclass[(U8) ((((((*((const U8*)p)) & (((2) >= 7) ? 0x00 : (0x1F >> ((2)-2))))) << 6) | (((U8)(*(((const U8*)p)+1 ))) & ((U8)0x3f))))] & (1U << (0)))) ? (_Bool)1 : (_Bool)0) : Perl__is_utf8_FOO(my_perl, 0,(const U8*)p)));
}
# 5258 "./perl.h" 2


# 1 "./overload.h" 1
# 16 "./overload.h"
enum {
    fallback_amg,
    to_sv_amg,
    to_av_amg,
    to_hv_amg,
    to_gv_amg,
    to_cv_amg,
    inc_amg,
    dec_amg,
    bool__amg,
    numer_amg,
    string_amg,
    not_amg,
    copy_amg,
    abs_amg,
    neg_amg,
    iter_amg,
    int_amg,
    lt_amg,
    le_amg,
    gt_amg,
    ge_amg,
    eq_amg,
    ne_amg,
    slt_amg,
    sle_amg,
    sgt_amg,
    sge_amg,
    seq_amg,
    sne_amg,
    nomethod_amg,
    add_amg,
    add_ass_amg,
    subtr_amg,
    subtr_ass_amg,
    mult_amg,
    mult_ass_amg,
    div_amg,
    div_ass_amg,
    modulo_amg,
    modulo_ass_amg,
    pow_amg,
    pow_ass_amg,
    lshift_amg,
    lshift_ass_amg,
    rshift_amg,
    rshift_ass_amg,
    band_amg,
    band_ass_amg,
    bor_amg,
    bor_ass_amg,
    bxor_amg,
    bxor_ass_amg,
    ncmp_amg,
    scmp_amg,
    compl_amg,
    atan2_amg,
    cos_amg,
    sin_amg,
    exp_amg,
    log_amg,
    sqrt_amg,
    repeat_amg,
    repeat_ass_amg,
    concat_amg,
    concat_ass_amg,
    smart_amg,
    ftest_amg,
    regexp_amg,
    max_amg_code

};
# 5261 "./perl.h" 2



struct am_table {
  U8 flags;
  U8 fallback;
  U16 spare;
  U32 was_ok_sub;
  CV* table[max_amg_code];
};
struct am_table_short {
  U8 flags;
  U8 fallback;
  U16 spare;
  U32 was_ok_sub;
};
typedef struct am_table AMT;
typedef struct am_table_short AMTS;
# 5532 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ipc.h" 1 3
# 94 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ipc.h" 3
#pragma pack(4)
# 107 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ipc.h" 3
struct ipc_perm {
 uid_t uid;
 gid_t gid;
 uid_t cuid;
 gid_t cgid;
 mode_t mode;
 unsigned short _seq;
 key_t _key;
};
# 138 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ipc.h" 3
#pragma pack()
# 188 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/ipc.h" 3
key_t ftok(const char *, int);
# 5533 "./perl.h" 2
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sem.h" 1 3
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sem.h" 3
#pragma pack(4)
# 85 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sem.h" 3
struct __semid_ds_new

{
 struct ipc_perm sem_perm;
 __int32_t sem_base;
 unsigned short sem_nsems;
 time_t sem_otime;
 __int32_t sem_pad1;
 time_t sem_ctime;


 __int32_t sem_pad2;
 __int32_t sem_pad3[4];
};
#pragma pack()
# 132 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sem.h" 3
struct sem {
 unsigned short semval;
 pid_t sempid;
 unsigned short semncnt;
 unsigned short semzcnt;
};





struct sembuf {
 unsigned short sem_num;
 short sem_op;
 short sem_flg;
};
# 177 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sem.h" 3
union semun {
 int val;
 struct __semid_ds_new *buf;
 unsigned short *array;
};
typedef union semun semun_t;
# 199 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/sem.h" 3
int semsys(int, ...);

int semctl(int, int, int, ...) __asm("_" "semctl" );
int semget(key_t, int, int);
int semop(int, struct sembuf *, size_t);
# 5534 "./perl.h" 2
# 5667 "./perl.h"
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/file.h" 1 3
# 69 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/file.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 1 3
# 118 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_o_sync.h" 1 3
# 119 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 2 3
# 178 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_o_dsync.h" 1 3
# 179 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 2 3
# 423 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 3
# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/_types/_seek_set.h" 1 3
# 424 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 2 3
# 448 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 3
struct flock {
 off_t l_start;
 off_t l_len;
 pid_t l_pid;
 short l_type;
 short l_whence;
};
# 463 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 3
struct flocktimeout {
 struct flock fl;
 struct timespec timeout;
};
# 479 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 3
struct radvisory {
 off_t ra_offset;
 int ra_count;
};







typedef struct fcodeblobs {
 void *f_cd_hash;
 size_t f_hash_size;
 void *f_cd_buffer;
 size_t f_cd_size;
 unsigned int *f_out_size;
 int f_arch;
 int __padding;
} fcodeblobs_t;
# 539 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 3
typedef struct fsignatures {
 off_t fs_file_start;
 void *fs_blob_start;
 size_t fs_blob_size;
} fsignatures_t;
# 575 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 3
typedef struct fchecklv {
 off_t lv_file_start;
 size_t lv_error_message_size;
 void *lv_error_message;
} fchecklv_t;
# 610 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 3
typedef struct fstore {
 unsigned int fst_flags;
 int fst_posmode;
 off_t fst_offset;
 off_t fst_length;
 off_t fst_bytesalloc;
} fstore_t;


typedef struct fpunchhole {
 unsigned int fp_flags;
 unsigned int reserved;
 off_t fp_offset;
 off_t fp_length;
} fpunchhole_t;


typedef struct ftrimactivefile {
 off_t fta_offset;
 off_t fta_length;
} ftrimactivefile_t;


typedef struct fspecread {
 unsigned int fsr_flags;
 unsigned int reserved;
 off_t fsr_offset;
 off_t fsr_length;
} fspecread_t;



typedef struct fbootstraptransfer {
 off_t fbt_offset;
 size_t fbt_length;
 void *fbt_buffer;
} fbootstraptransfer_t;
# 689 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 3
#pragma pack(4)

struct log2phys {
 unsigned int l2p_flags;
 off_t l2p_contigbytes;


 off_t l2p_devoffset;


};

#pragma pack()
# 746 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 3
typedef enum {
 FILESEC_OWNER = 1,
 FILESEC_GROUP = 2,
 FILESEC_UUID = 3,
 FILESEC_MODE = 4,
 FILESEC_ACL = 5,
 FILESEC_GRPUUID = 6,


 FILESEC_ACL_RAW = 100,
 FILESEC_ACL_ALLOCSIZE = 101
} filesec_property_t;






int open(const char *, int, ...) __asm("_" "open" );

int openat(int, const char *, int, ...) __asm("_" "openat" ) __attribute__((availability(macosx,introduced=10.10)));

int creat(const char *, mode_t) __asm("_" "creat" );
int fcntl(int, int, ...) __asm("_" "fcntl" );
# 789 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/fcntl.h" 3
int openx_np(const char *, int, filesec_t);




int open_dprotected_np( const char *, int, int, int, ...);
int flock(int, int);
filesec_t filesec_init(void);
filesec_t filesec_dup(filesec_t);
void filesec_free(filesec_t);
int filesec_get_property(filesec_t, filesec_property_t, void *);
int filesec_query_property(filesec_t, filesec_property_t, int *);
int filesec_set_property(filesec_t, filesec_property_t, const void *);
int filesec_unset_property(filesec_t, filesec_property_t) __attribute__((availability(macosx,introduced=10.6)));
# 70 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/file.h" 2 3

# 1 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/queue.h" 1 3
# 72 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/file.h" 2 3
# 82 "/Users/ariel/git/darling/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/file.h" 3
struct ucred;
typedef struct ucred *kauth_cred_t;
struct posix_cred;
typedef struct posix_cred *posix_cred_t;
# 5668 "./perl.h" 2
# 5 "pp_sort.c" 2

